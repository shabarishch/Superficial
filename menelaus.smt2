(set-option :produce-proofs true)
(declare-fun x_a() Real)
(declare-fun y_a() Real)
(declare-fun r() Real)
(declare-fun s() Real)
(declare-fun t() Real)
(assert (> y_a 0.0))
(assert (= (* (- (+ 0.0 (* s (- 0.0 0.0))) (+ y_a (* r (- 0.0 y_a)))) (- (+ 1.0 (* t (- x_a 1.0))) (+ x_a (* r (- 0.0 x_a))))) (* (- (+ 0.0 (* t (- y_a 0.0))) (+ y_a (* r (- 0.0 y_a)))) (- (+ 0.0 (* s (- 1.0 0.0))) (+ x_a (* r (- 0.0 x_a)))))))
(assert (not (= (* (* (+ (^ (- (+ x_a (* r (- 0.0 x_a))) x_a) 2.0) (^ (- (+ y_a (* r (- 0.0 y_a))) y_a) 2.0)) (+ (^ (- (+ 0.0 (* s (- 1.0 0.0))) 0.0) 2.0) (^ (- (+ 0.0 (* s (- 0.0 0.0))) 0.0) 2.0))) (+ (^ (- (+ 1.0 (* t (- x_a 1.0))) 1.0) 2.0) (^ (- (+ 0.0 (* t (- y_a 0.0))) 0.0) 2.0))) (* (* (+ (^ (- 0.0 (+ x_a (* r (- 0.0 x_a)))) 2.0) (^ (- 0.0 (+ y_a (* r (- 0.0 y_a)))) 2.0)) (+ (^ (- 1.0 (+ 0.0 (* s (- 1.0 0.0)))) 2.0) (^ (- 0.0 (+ 0.0 (* s (- 0.0 0.0)))) 2.0))) (+ (^ (- x_a (+ 1.0 (* t (- x_a 1.0)))) 2.0) (^ (- y_a (+ 0.0 (* t (- y_a 0.0)))) 2.0))))))
(check-sat)
(get-proof)