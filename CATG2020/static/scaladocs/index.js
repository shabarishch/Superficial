Index.PACKAGES = {"superficial" : [{"name" : "superficial.BoundaryEdge", "shortDescription" : "An edge in the boundary of a pair of pants which is not identified with a boundary component of another pair of pants,i.e., this is part of the boundary of the surface.", "members_case class" : [{"label" : "initial", "tail" : ": BoundaryVertex", "member" : "superficial.BoundaryEdge.initial", "link" : "superficial\/BoundaryEdge.html#initial:superficial.BoundaryVertex", "kind" : "lazy val"}, {"label" : "terminal", "tail" : ": BoundaryVertex", "member" : "superficial.BoundaryEdge.terminal", "link" : "superficial\/BoundaryEdge.html#terminal:superficial.BoundaryVertex", "kind" : "lazy val"}, {"label" : "flip", "tail" : ": BoundaryEdge", "member" : "superficial.BoundaryEdge.flip", "link" : "superficial\/BoundaryEdge.html#flip:superficial.BoundaryEdge", "kind" : "lazy val"}, {"member" : "superficial.BoundaryEdge#<init>", "error" : "unsupported entity"}, {"label" : "positivelyOriented", "tail" : ": Boolean", "member" : "superficial.BoundaryEdge.positivelyOriented", "link" : "superficial\/BoundaryEdge.html#positivelyOriented:Boolean", "kind" : "val"}, {"label" : "top", "tail" : ": Boolean", "member" : "superficial.BoundaryEdge.top", "link" : "superficial\/BoundaryEdge.html#top:Boolean", "kind" : "val"}, {"label" : "pb", "tail" : ": PantsBoundary", "member" : "superficial.BoundaryEdge.pb", "link" : "superficial\/BoundaryEdge.html#pb:superficial.PantsBoundary", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "superficial\/BoundaryEdge.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "del", "tail" : "(): FormalSum[Vertex]", "member" : "superficial.Edge.del", "link" : "superficial\/BoundaryEdge.html#del:superficial.FormalSum[superficial.Vertex]", "kind" : "def"}, {"label" : "checkFlip", "tail" : "(): Boolean", "member" : "superficial.Edge.checkFlip", "link" : "superficial\/BoundaryEdge.html#checkFlip:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : ": Boolean", "member" : "superficial.Edge.isEmpty", "link" : "superficial\/BoundaryEdge.html#isEmpty:Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/BoundaryEdge.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/BoundaryEdge.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/BoundaryEdge.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/BoundaryEdge.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/BoundaryEdge.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/BoundaryEdge.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/BoundaryEdge.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/BoundaryEdge.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/BoundaryEdge.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/BoundaryEdge.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/BoundaryEdge.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/BoundaryEdge.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/BoundaryEdge.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/BoundaryEdge.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/BoundaryEdge.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/BoundaryEdge.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "superficial\/BoundaryEdge.html", "kind" : "case class"}, {"name" : "superficial.BoundaryVertex", "shortDescription" : "Vertex on the boundary of a pair of pants decomposed into a pair of hexagons", "members_case class" : [{"member" : "superficial.BoundaryVertex#<init>", "error" : "unsupported entity"}, {"label" : "isFirst", "tail" : ": Boolean", "member" : "superficial.BoundaryVertex.isFirst", "link" : "superficial\/BoundaryVertex.html#isFirst:Boolean", "kind" : "val"}, {"label" : "pb", "tail" : ": PantsBoundary", "member" : "superficial.BoundaryVertex.pb", "link" : "superficial\/BoundaryVertex.html#pb:superficial.PantsBoundary", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "superficial\/BoundaryVertex.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/BoundaryVertex.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/BoundaryVertex.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/BoundaryVertex.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/BoundaryVertex.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/BoundaryVertex.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/BoundaryVertex.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/BoundaryVertex.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/BoundaryVertex.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/BoundaryVertex.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/BoundaryVertex.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/BoundaryVertex.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/BoundaryVertex.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/BoundaryVertex.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/BoundaryVertex.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/BoundaryVertex.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/BoundaryVertex.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "superficial\/BoundaryVertex.html", "kind" : "case class"}, {"name" : "superficial.CheckQuadrangulation", "shortDescription" : "", "object" : "superficial\/CheckQuadrangulation$.html", "members_object" : [{"label" : "Termination", "tail" : "(twoComplex: TwoComplex, n: Int): Boolean", "member" : "superficial.CheckQuadrangulation.Termination", "link" : "superficial\/CheckQuadrangulation$.html#Termination(twoComplex:superficial.TwoComplex,n:Int):Boolean", "kind" : "def"}, {"label" : "truePredicate", "tail" : "(edgePath: EdgePath): Boolean", "member" : "superficial.CheckQuadrangulation.truePredicate", "link" : "superficial\/CheckQuadrangulation$.html#truePredicate(edgePath:superficial.EdgePath):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/CheckQuadrangulation$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/CheckQuadrangulation$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/CheckQuadrangulation$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/CheckQuadrangulation$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/CheckQuadrangulation$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/CheckQuadrangulation$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/CheckQuadrangulation$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/CheckQuadrangulation$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/CheckQuadrangulation$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/CheckQuadrangulation$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/CheckQuadrangulation$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/CheckQuadrangulation$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/CheckQuadrangulation$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/CheckQuadrangulation$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/CheckQuadrangulation$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/CheckQuadrangulation$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/CheckQuadrangulation$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/CheckQuadrangulation$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/CheckQuadrangulation$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "superficial.Clockwise", "shortDescription" : "", "object" : "superficial\/Clockwise$.html", "members_object" : [{"label" : "isClockwise", "tail" : "(a: Edge, b: Edge, c: Edge, twoComplex: TwoComplex): Boolean", "member" : "superficial.Clockwise.isClockwise", "link" : "superficial\/Clockwise$.html#isClockwise(a:superficial.Edge,b:superficial.Edge,c:superficial.Edge,twoComplex:superficial.TwoComplex):Boolean", "kind" : "def"}, {"label" : "isInOrder", "tail" : "(u: Edge, v: Edge, w: Edge, twoComplex: TwoComplex): Boolean", "member" : "superficial.Clockwise.isInOrder", "link" : "superficial\/Clockwise$.html#isInOrder(u:superficial.Edge,v:superficial.Edge,w:superficial.Edge,twoComplex:superficial.TwoComplex):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/Clockwise$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/Clockwise$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/Clockwise$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/Clockwise$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/Clockwise$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/Clockwise$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/Clockwise$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Clockwise$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Clockwise$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Clockwise$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/Clockwise$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/Clockwise$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/Clockwise$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/Clockwise$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/Clockwise$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/Clockwise$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/Clockwise$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/Clockwise$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/Clockwise$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "superficial.ClosedSurface", "shortDescription" : "", "object" : "superficial\/ClosedSurface$.html", "members_object" : [{"label" : "Face", "tail" : "", "member" : "superficial.ClosedSurface.Face", "link" : "superficial\/ClosedSurface$.html#FaceextendsPolygonwithProductwithSerializable", "kind" : "case class"}, {"label" : "V", "tail" : "", "member" : "superficial.ClosedSurface.V", "link" : "superficial\/ClosedSurface$.html#V", "kind" : "case object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/ClosedSurface$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/ClosedSurface$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/ClosedSurface$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/ClosedSurface$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/ClosedSurface$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/ClosedSurface$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/ClosedSurface$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/ClosedSurface$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/ClosedSurface$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/ClosedSurface$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/ClosedSurface$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/ClosedSurface$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/ClosedSurface$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/ClosedSurface$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/ClosedSurface$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/ClosedSurface$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/ClosedSurface$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/ClosedSurface$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/ClosedSurface$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "face", "tail" : ": Polygon", "member" : "superficial.ClosedSurface.face", "link" : "superficial\/ClosedSurface.html#face:superficial.Polygon", "kind" : "lazy val"}, {"label" : "vertex", "tail" : ": Vertex", "member" : "superficial.ClosedSurface.vertex", "link" : "superficial\/ClosedSurface.html#vertex:superficial.Vertex", "kind" : "val"}, {"member" : "superficial.ClosedSurface#<init>", "error" : "unsupported entity"}, {"label" : "n", "tail" : ": Int", "member" : "superficial.ClosedSurface.n", "link" : "superficial\/ClosedSurface.html#n:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "superficial\/ClosedSurface.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getEdge", "tail" : "(s: String): Edge", "member" : "superficial.StandardSurface.getEdge", "link" : "superficial\/ClosedSurface.html#getEdge(s:String):superficial.Edge", "kind" : "def"}, {"label" : "getPath", "tail" : "(s: String): EdgePath", "member" : "superficial.StandardSurface.getPath", "link" : "superficial\/ClosedSurface.html#getPath(s:String):superficial.EdgePath", "kind" : "def"}, {"label" : "parsePath", "tail" : "(s: String): Parsed[EdgePath]", "member" : "superficial.StandardSurface.parsePath", "link" : "superficial\/ClosedSurface.html#parsePath(s:String):fastparse.Parsed[superficial.EdgePath]", "kind" : "def"}, {"label" : "edgePath", "tail" : "(arg0: P[Any]): P[EdgePath]", "member" : "superficial.StandardSurface.edgePath", "link" : "superficial\/ClosedSurface.html#edgePath[_](implicitevidence$7:fastparse.P[Any]):fastparse.P[superficial.EdgePath]", "kind" : "def"}, {"label" : "parseEdge", "tail" : "(s: String): Parsed[Edge]", "member" : "superficial.StandardSurface.parseEdge", "link" : "superficial\/ClosedSurface.html#parseEdge(s:String):fastparse.Parsed[superficial.Edge]", "kind" : "def"}, {"label" : "edge", "tail" : "(arg0: P[Any]): P[Edge]", "member" : "superficial.StandardSurface.edge", "link" : "superficial\/ClosedSurface.html#edge[_](implicitevidence$6:fastparse.P[Any]):fastparse.P[superficial.Edge]", "kind" : "def"}, {"label" : "bInvEdge", "tail" : "(arg0: P[Any]): P[Edge]", "member" : "superficial.StandardSurface.bInvEdge", "link" : "superficial\/ClosedSurface.html#bInvEdge[_](implicitevidence$5:fastparse.P[Any]):fastparse.P[superficial.Edge]", "kind" : "def"}, {"label" : "bEdge", "tail" : "(arg0: P[Any]): P[Edge]", "member" : "superficial.StandardSurface.bEdge", "link" : "superficial\/ClosedSurface.html#bEdge[_](implicitevidence$4:fastparse.P[Any]):fastparse.P[superficial.Edge]", "kind" : "def"}, {"label" : "aInvEdge", "tail" : "(arg0: P[Any]): P[Edge]", "member" : "superficial.StandardSurface.aInvEdge", "link" : "superficial\/ClosedSurface.html#aInvEdge[_](implicitevidence$3:fastparse.P[Any]):fastparse.P[superficial.Edge]", "kind" : "def"}, {"label" : "aEdge", "tail" : "(arg0: P[Any]): P[Edge]", "member" : "superficial.StandardSurface.aEdge", "link" : "superficial\/ClosedSurface.html#aEdge[_](implicitevidence$2:fastparse.P[Any]):fastparse.P[superficial.Edge]", "kind" : "def"}, {"label" : "number", "tail" : "(arg0: P[Any]): P[Int]", "member" : "superficial.StandardSurface.number", "link" : "superficial\/ClosedSurface.html#number[_](implicitevidence$1:fastparse.P[Any]):fastparse.P[Int]", "kind" : "def"}, {"label" : "boundary", "tail" : ": Vector[Edge]", "member" : "superficial.StandardSurface.boundary", "link" : "superficial\/ClosedSurface.html#boundary:Vector[superficial.Edge]", "kind" : "lazy val"}, {"label" : "vertices", "tail" : ": Set[Vertex]", "member" : "superficial.StandardSurface.vertices", "link" : "superficial\/ClosedSurface.html#vertices:Set[superficial.Vertex]", "kind" : "lazy val"}, {"label" : "edges", "tail" : ": Set[Edge]", "member" : "superficial.StandardSurface.edges", "link" : "superficial\/ClosedSurface.html#edges:Set[superficial.Edge]", "kind" : "lazy val"}, {"label" : "faces", "tail" : ": Set[Polygon]", "member" : "superficial.StandardSurface.faces", "link" : "superficial\/ClosedSurface.html#faces:Set[superficial.Polygon]", "kind" : "lazy val"}, {"label" : "genus", "tail" : ": Int", "member" : "superficial.StandardSurface.genus", "link" : "superficial\/ClosedSurface.html#genus:Int", "kind" : "val"}, {"label" : "turnEdge", "tail" : "(e: Edge, t: Int): Edge", "member" : "superficial.TwoComplex.turnEdge", "link" : "superficial\/ClosedSurface.html#turnEdge(e:superficial.Edge,t:Int):superficial.Edge", "kind" : "def"}, {"label" : "angleBetween", "tail" : "(e1: Edge, e2: Edge): Int", "member" : "superficial.TwoComplex.angleBetween", "link" : "superficial\/ClosedSurface.html#angleBetween(e1:superficial.Edge,e2:superficial.Edge):Int", "kind" : "def"}, {"label" : "turnIndex", "tail" : "(e1: Edge, e2: Edge): Int", "member" : "superficial.TwoComplex.turnIndex", "link" : "superficial\/ClosedSurface.html#turnIndex(e1:superficial.Edge,e2:superficial.Edge):Int", "kind" : "def"}, {"label" : "vectorEdgesToTheRightOf", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorEdgesToTheRightOf", "link" : "superficial\/ClosedSurface.html#vectorEdgesToTheRightOf(e:superficial.Edge):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorEdgesToTheLeftOf", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorEdgesToTheLeftOf", "link" : "superficial\/ClosedSurface.html#vectorEdgesToTheLeftOf(e:superficial.Edge):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorRightTurns", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorRightTurns", "link" : "superficial\/ClosedSurface.html#vectorRightTurns(e:superficial.Edge):scala.collection.immutable.Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorLeftTurns", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorLeftTurns", "link" : "superficial\/ClosedSurface.html#vectorLeftTurns(e:superficial.Edge):scala.collection.immutable.Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorOrbitFin", "tail" : "(e: Edge, opt: (Edge) => Option[Edge], accum: Vector[Edge], n: Int): Vector[Edge]", "member" : "superficial.TwoComplex.vectorOrbitFin", "link" : "superficial\/ClosedSurface.html#vectorOrbitFin(e:superficial.Edge,opt:superficial.Edge=>Option[superficial.Edge],accum:Vector[superficial.Edge],n:Int):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorOrbit", "tail" : "(e: Edge, opt: (Edge) => Option[Edge], accum: Vector[Edge]): Vector[Edge]", "member" : "superficial.TwoComplex.vectorOrbit", "link" : "superficial\/ClosedSurface.html#vectorOrbit(e:superficial.Edge,opt:superficial.Edge=>Option[superficial.Edge],accum:Vector[superficial.Edge]):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "SwR", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SwR", "link" : "superficial\/ClosedSurface.html#SwR(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SwL", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SwL", "link" : "superficial\/ClosedSurface.html#SwL(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SR", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SR", "link" : "superficial\/ClosedSurface.html#SR(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SL", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SL", "link" : "superficial\/ClosedSurface.html#SL(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "R", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.R", "link" : "superficial\/ClosedSurface.html#R(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "L", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.L", "link" : "superficial\/ClosedSurface.html#L(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "slightRight", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.slightRight", "link" : "superficial\/ClosedSurface.html#slightRight(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "slightLeft", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.slightLeft", "link" : "superficial\/ClosedSurface.html#slightLeft(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "turnRight", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.turnRight", "link" : "superficial\/ClosedSurface.html#turnRight(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "turnLeft", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.turnLeft", "link" : "superficial\/ClosedSurface.html#turnLeft(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "subComplex", "tail" : "(vs: Set[Vertex]): TwoComplex", "member" : "superficial.TwoComplex.subComplex", "link" : "superficial\/ClosedSurface.html#subComplex(vs:Set[superficial.Vertex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addTwoComplexes", "tail" : "(complexes: Set[TwoComplex]): TwoComplex", "member" : "superficial.TwoComplex.addTwoComplexes", "link" : "superficial\/ClosedSurface.html#addTwoComplexes(complexes:Set[superficial.TwoComplex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addFaces", "tail" : "(fcs: Set[Polygon]): TwoComplex", "member" : "superficial.TwoComplex.addFaces", "link" : "superficial\/ClosedSurface.html#addFaces(fcs:Set[superficial.Polygon]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addEdges", "tail" : "(eds: Set[Edge]): TwoComplex", "member" : "superficial.TwoComplex.addEdges", "link" : "superficial\/ClosedSurface.html#addEdges(eds:Set[superficial.Edge]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addVertices", "tail" : "(vs: Set[Vertex]): TwoComplex", "member" : "superficial.TwoComplex.addVertices", "link" : "superficial\/ClosedSurface.html#addVertices(vs:Set[superficial.Vertex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "isSurfaceWithBoundary", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isSurfaceWithBoundary", "link" : "superficial\/ClosedSurface.html#isSurfaceWithBoundary:Boolean", "kind" : "def"}, {"label" : "isClosedSurface", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isClosedSurface", "link" : "superficial\/ClosedSurface.html#isClosedSurface:Boolean", "kind" : "def"}, {"label" : "isEdgeAtBoundary", "tail" : "(e: Edge): Boolean", "member" : "superficial.TwoComplex.isEdgeAtBoundary", "link" : "superficial\/ClosedSurface.html#isEdgeAtBoundary(e:superficial.Edge):Boolean", "kind" : "def"}, {"label" : "edgeOccurences", "tail" : "(e: Edge): Int", "member" : "superficial.TwoComplex.edgeOccurences", "link" : "superficial\/ClosedSurface.html#edgeOccurences(e:superficial.Edge):Int", "kind" : "def"}, {"label" : "transitiveRotations", "tail" : "(v: Vertex): Boolean", "member" : "superficial.TwoComplex.transitiveRotations", "link" : "superficial\/ClosedSurface.html#transitiveRotations(v:superficial.Vertex):Boolean", "kind" : "def"}, {"label" : "degree", "tail" : "(v: Vertex): Int", "member" : "superficial.TwoComplex.degree", "link" : "superficial\/ClosedSurface.html#degree(v:superficial.Vertex):Int", "kind" : "def"}, {"label" : "edgesEndingAt", "tail" : "(v: Vertex): Set[Edge]", "member" : "superficial.TwoComplex.edgesEndingAt", "link" : "superficial\/ClosedSurface.html#edgesEndingAt(v:superficial.Vertex):scala.collection.immutable.Set[superficial.Edge]", "kind" : "def"}, {"label" : "allEdgesToTheRightOf", "tail" : "(e: Edge): Set[Edge]", "member" : "superficial.TwoComplex.allEdgesToTheRightOf", "link" : "superficial\/ClosedSurface.html#allEdgesToTheRightOf(e:superficial.Edge):Set[superficial.Edge]", "kind" : "def"}, {"label" : "allEdgesToTheLeftOf", "tail" : "(e: Edge): Set[Edge]", "member" : "superficial.TwoComplex.allEdgesToTheLeftOf", "link" : "superficial\/ClosedSurface.html#allEdgesToTheLeftOf(e:superficial.Edge):Set[superficial.Edge]", "kind" : "def"}, {"label" : "orbit", "tail" : "(e: Edge, steps: Int, opt: (Edge) => Option[Edge], accum: Set[Edge]): Set[Edge]", "member" : "superficial.TwoComplex.orbit", "link" : "superficial\/ClosedSurface.html#orbit(e:superficial.Edge,steps:Int,opt:superficial.Edge=>Option[superficial.Edge],accum:Set[superficial.Edge]):Set[superficial.Edge]", "kind" : "def"}, {"label" : "rotateRightOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.rotateRightOpt", "link" : "superficial\/ClosedSurface.html#rotateRightOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "rotateLeftOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.rotateLeftOpt", "link" : "superficial\/ClosedSurface.html#rotateLeftOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "predOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.predOpt", "link" : "superficial\/ClosedSurface.html#predOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "succOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.succOpt", "link" : "superficial\/ClosedSurface.html#succOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "isConnectedComplex", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isConnectedComplex", "link" : "superficial\/ClosedSurface.html#isConnectedComplex:Boolean", "kind" : "def"}, {"label" : "connectedComponent", "tail" : "(v: Vertex): Set[Vertex]", "member" : "superficial.TwoComplex.connectedComponent", "link" : "superficial\/ClosedSurface.html#connectedComponent(v:superficial.Vertex):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "maxSetNbr", "tail" : "(s: Set[Vertex]): Set[Vertex]", "member" : "superficial.TwoComplex.maxSetNbr", "link" : "superficial\/ClosedSurface.html#maxSetNbr(s:Set[superficial.Vertex]):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "setNbr", "tail" : "(s: Set[Vertex]): Set[Vertex]", "member" : "superficial.TwoComplex.setNbr", "link" : "superficial\/ClosedSurface.html#setNbr(s:Set[superficial.Vertex]):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "vertexNbr", "tail" : "(v: Vertex): Set[Vertex]", "member" : "superficial.TwoComplex.vertexNbr", "link" : "superficial\/ClosedSurface.html#vertexNbr(v:superficial.Vertex):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "collapseEdge", "tail" : "(e: Edge): (TwoComplex, ((EdgePath) => EdgePath, (EdgePath) => EdgePath))", "member" : "superficial.TwoComplex.collapseEdge", "link" : "superficial\/ClosedSurface.html#collapseEdge(e:superficial.Edge):(superficial.TwoComplex,(superficial.EdgePath=>superficial.EdgePath,superficial.EdgePath=>superficial.EdgePath))", "kind" : "def"}, {"label" : "normalArcs", "tail" : "(): Set[NormalArc]", "member" : "superficial.TwoComplex.normalArcs", "link" : "superficial\/ClosedSurface.html#normalArcs:Set[superficial.NormalArc]", "kind" : "def"}, {"label" : "edgeIndices", "tail" : "(edge: Edge): Set[(Polygon, Index, Boolean)]", "member" : "superficial.TwoComplex.edgeIndices", "link" : "superficial\/ClosedSurface.html#edgeIndices(edge:superficial.Edge):Set[(superficial.Polygon,superficial.Polygon.Index,Boolean)]", "kind" : "def"}, {"label" : "facesWithEdge", "tail" : "(edge: Edge): Set[Polygon]", "member" : "superficial.TwoComplex.facesWithEdge", "link" : "superficial\/ClosedSurface.html#facesWithEdge(edge:superficial.Edge):Set[superficial.Polygon]", "kind" : "def"}, {"label" : "vertexIndex", "tail" : "(v: Vertex): Option[Int]", "member" : "superficial.TwoComplex.vertexIndex", "link" : "superficial\/ClosedSurface.html#vertexIndex(v:superficial.Vertex):Option[Int]", "kind" : "def"}, {"label" : "indexedVertices", "tail" : ": Set[(Vertex, Int)]", "member" : "superficial.TwoComplex.indexedVertices", "link" : "superficial\/ClosedSurface.html#indexedVertices:scala.collection.immutable.Set[(superficial.Vertex,Int)]", "kind" : "lazy val"}, {"label" : "chi", "tail" : ": Int", "member" : "superficial.TwoComplex.chi", "link" : "superficial\/ClosedSurface.html#chi:Int", "kind" : "lazy val"}, {"label" : "edgeIndex", "tail" : "(edge: Edge): Option[(Int, Boolean)]", "member" : "superficial.TwoComplex.edgeIndex", "link" : "superficial\/ClosedSurface.html#edgeIndex(edge:superficial.Edge):Option[(Int,Boolean)]", "kind" : "def"}, {"label" : "halfEdges", "tail" : ": Set[Edge]", "member" : "superficial.TwoComplex.halfEdges", "link" : "superficial\/ClosedSurface.html#halfEdges:Set[superficial.Edge]", "kind" : "lazy val"}, {"label" : "positiveEdges", "tail" : ": Vector[OrientedEdge]", "member" : "superficial.TwoComplex.positiveEdges", "link" : "superficial\/ClosedSurface.html#positiveEdges:Vector[superficial.OrientedEdge]", "kind" : "lazy val"}, {"label" : "checkComplex", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.checkComplex", "link" : "superficial\/ClosedSurface.html#checkComplex:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/ClosedSurface.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/ClosedSurface.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/ClosedSurface.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/ClosedSurface.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/ClosedSurface.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/ClosedSurface.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/ClosedSurface.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/ClosedSurface.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/ClosedSurface.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/ClosedSurface.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/ClosedSurface.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/ClosedSurface.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/ClosedSurface.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/ClosedSurface.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/ClosedSurface.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/ClosedSurface.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "superficial\/ClosedSurface.html", "kind" : "case class"}, {"name" : "superficial.CollectionOfHomotopyClasses", "object" : "superficial\/CollectionOfHomotopyClasses$.html", "members_object" : [{"label" : "starter", "tail" : "(twoComplex: TwoComplex): CollectionOfHomotopyClasses", "member" : "superficial.CollectionOfHomotopyClasses.starter", "link" : "superficial\/CollectionOfHomotopyClasses$.html#starter(twoComplex:superficial.TwoComplex):superficial.CollectionOfHomotopyClasses", "kind" : "def"}, {"label" : "starter", "tail" : "(face: Polygon): CollectionOfHomotopyClasses", "member" : "superficial.CollectionOfHomotopyClasses.starter", "link" : "superficial\/CollectionOfHomotopyClasses$.html#starter(face:superficial.Polygon):superficial.CollectionOfHomotopyClasses", "kind" : "def"}, {"label" : "apply", "tail" : "(newClasses: Set[HomotopyClassesOfPaths]): CollectionOfHomotopyClasses", "member" : "superficial.CollectionOfHomotopyClasses.apply", "link" : "superficial\/CollectionOfHomotopyClasses$.html#apply(newClasses:Set[superficial.HomotopyClassesOfPaths]):superficial.CollectionOfHomotopyClasses", "kind" : "def"}, {"label" : "dumbApply", "tail" : "(newClasses: Set[HomotopyClassesOfPaths]): CollectionOfHomotopyClasses", "member" : "superficial.CollectionOfHomotopyClasses.dumbApply", "link" : "superficial\/CollectionOfHomotopyClasses$.html#dumbApply(newClasses:Set[superficial.HomotopyClassesOfPaths]):superficial.CollectionOfHomotopyClasses", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/CollectionOfHomotopyClasses$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/CollectionOfHomotopyClasses$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/CollectionOfHomotopyClasses$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/CollectionOfHomotopyClasses$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/CollectionOfHomotopyClasses$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/CollectionOfHomotopyClasses$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/CollectionOfHomotopyClasses$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/CollectionOfHomotopyClasses$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/CollectionOfHomotopyClasses$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/CollectionOfHomotopyClasses$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/CollectionOfHomotopyClasses$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/CollectionOfHomotopyClasses$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/CollectionOfHomotopyClasses$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/CollectionOfHomotopyClasses$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/CollectionOfHomotopyClasses$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/CollectionOfHomotopyClasses$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/CollectionOfHomotopyClasses$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/CollectionOfHomotopyClasses$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/CollectionOfHomotopyClasses$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "superficial\/CollectionOfHomotopyClasses.html", "kind" : "trait", "members_trait" : [{"label" : "mainCourse", "tail" : "(): CollectionOfHomotopyClasses", "member" : "superficial.CollectionOfHomotopyClasses.mainCourse", "link" : "superficial\/CollectionOfHomotopyClasses.html#mainCourse:superficial.CollectionOfHomotopyClasses", "kind" : "def"}, {"label" : "makeWellDefined", "tail" : "(): CollectionOfHomotopyClasses", "member" : "superficial.CollectionOfHomotopyClasses.makeWellDefined", "link" : "superficial\/CollectionOfHomotopyClasses.html#makeWellDefined:superficial.CollectionOfHomotopyClasses", "kind" : "def"}, {"label" : "isWellDefined", "tail" : "(): Boolean", "member" : "superficial.CollectionOfHomotopyClasses.isWellDefined", "link" : "superficial\/CollectionOfHomotopyClasses.html#isWellDefined:Boolean", "kind" : "def"}, {"label" : "expandWith", "tail" : "(newClasses: HomotopyClassesOfPaths): CollectionOfHomotopyClasses", "member" : "superficial.CollectionOfHomotopyClasses.expandWith", "link" : "superficial\/CollectionOfHomotopyClasses.html#expandWith(newClasses:superficial.HomotopyClassesOfPaths):superficial.CollectionOfHomotopyClasses", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/CollectionOfHomotopyClasses.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/CollectionOfHomotopyClasses.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/CollectionOfHomotopyClasses.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/CollectionOfHomotopyClasses.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/CollectionOfHomotopyClasses.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/CollectionOfHomotopyClasses.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/CollectionOfHomotopyClasses.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/CollectionOfHomotopyClasses.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/CollectionOfHomotopyClasses.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/CollectionOfHomotopyClasses.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/CollectionOfHomotopyClasses.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/CollectionOfHomotopyClasses.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/CollectionOfHomotopyClasses.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/CollectionOfHomotopyClasses.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/CollectionOfHomotopyClasses.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/CollectionOfHomotopyClasses.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/CollectionOfHomotopyClasses.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/CollectionOfHomotopyClasses.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/CollectionOfHomotopyClasses.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "classes", "tail" : ": Set[HomotopyClassesOfPaths]", "member" : "superficial.CollectionOfHomotopyClasses.classes", "link" : "superficial\/CollectionOfHomotopyClasses.html#classes:Set[superficial.HomotopyClassesOfPaths]", "kind" : "abstract val"}], "shortDescription" : ""}, {"name" : "superficial.Curve", "shortDescription" : "A curve in the curve system (i.e., the collection of terms) along which we split to get the pants decomposition.", "members_case class" : [{"label" : "dropOpt", "tail" : "(n: Index): Option[Curve]", "member" : "superficial.Curve.dropOpt", "link" : "superficial\/Curve.html#dropOpt(n:superficial.Polygon.Index):Option[superficial.Curve]", "kind" : "def"}, {"label" : "contains", "tail" : "(pb: PantsBoundary): Boolean", "member" : "superficial.Curve.contains", "link" : "superficial\/Curve.html#contains(pb:superficial.PantsBoundary):Boolean", "kind" : "def"}, {"label" : "neighbours", "tail" : ": Set[Index]", "member" : "superficial.Curve.neighbours", "link" : "superficial\/Curve.html#neighbours:Set[superficial.Polygon.Index]", "kind" : "val"}, {"label" : "support", "tail" : ": Set[PantsBoundary]", "member" : "superficial.Curve.support", "link" : "superficial\/Curve.html#support:Set[superficial.PantsBoundary]", "kind" : "val"}, {"member" : "superficial.Curve#<init>", "error" : "unsupported entity"}, {"label" : "right", "tail" : ": PantsBoundary", "member" : "superficial.Curve.right", "link" : "superficial\/Curve.html#right:superficial.PantsBoundary", "kind" : "val"}, {"label" : "left", "tail" : ": PantsBoundary", "member" : "superficial.Curve.left", "link" : "superficial\/Curve.html#left:superficial.PantsBoundary", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "superficial\/Curve.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/Curve.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/Curve.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/Curve.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/Curve.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/Curve.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/Curve.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/Curve.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Curve.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Curve.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Curve.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/Curve.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/Curve.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/Curve.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/Curve.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/Curve.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/Curve.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "superficial\/Curve.html", "kind" : "case class"}, {"name" : "superficial.CurveEdge", "shortDescription" : "An edge on a curve", "members_case class" : [{"label" : "terminal", "tail" : ": Vertex", "member" : "superficial.CurveEdge.terminal", "link" : "superficial\/CurveEdge.html#terminal:superficial.Vertex", "kind" : "lazy val"}, {"label" : "initial", "tail" : ": Vertex", "member" : "superficial.CurveEdge.initial", "link" : "superficial\/CurveEdge.html#initial:superficial.Vertex", "kind" : "lazy val"}, {"label" : "flip", "tail" : ": CurveEdge", "member" : "superficial.CurveEdge.flip", "link" : "superficial\/CurveEdge.html#flip:superficial.CurveEdge", "kind" : "lazy val"}, {"member" : "superficial.CurveEdge#<init>", "error" : "unsupported entity"}, {"label" : "positivelyOriented", "tail" : ": Boolean", "member" : "superficial.CurveEdge.positivelyOriented", "link" : "superficial\/CurveEdge.html#positivelyOriented:Boolean", "kind" : "val"}, {"label" : "top", "tail" : ": Boolean", "member" : "superficial.CurveEdge.top", "link" : "superficial\/CurveEdge.html#top:Boolean", "kind" : "val"}, {"label" : "curve", "tail" : ": Curve", "member" : "superficial.CurveEdge.curve", "link" : "superficial\/CurveEdge.html#curve:superficial.Curve", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "superficial\/CurveEdge.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "del", "tail" : "(): FormalSum[Vertex]", "member" : "superficial.Edge.del", "link" : "superficial\/CurveEdge.html#del:superficial.FormalSum[superficial.Vertex]", "kind" : "def"}, {"label" : "checkFlip", "tail" : "(): Boolean", "member" : "superficial.Edge.checkFlip", "link" : "superficial\/CurveEdge.html#checkFlip:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : ": Boolean", "member" : "superficial.Edge.isEmpty", "link" : "superficial\/CurveEdge.html#isEmpty:Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/CurveEdge.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/CurveEdge.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/CurveEdge.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/CurveEdge.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/CurveEdge.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/CurveEdge.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/CurveEdge.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/CurveEdge.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/CurveEdge.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/CurveEdge.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/CurveEdge.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/CurveEdge.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/CurveEdge.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/CurveEdge.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/CurveEdge.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/CurveEdge.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "superficial\/CurveEdge.html", "kind" : "case class"}, {"name" : "superficial.CurveVertex", "shortDescription" : "vertex on a curve", "members_case class" : [{"member" : "superficial.CurveVertex#<init>", "error" : "unsupported entity"}, {"label" : "first", "tail" : ": Boolean", "member" : "superficial.CurveVertex.first", "link" : "superficial\/CurveVertex.html#first:Boolean", "kind" : "val"}, {"label" : "curve", "tail" : ": Curve", "member" : "superficial.CurveVertex.curve", "link" : "superficial\/CurveVertex.html#curve:superficial.Curve", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "superficial\/CurveVertex.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/CurveVertex.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/CurveVertex.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/CurveVertex.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/CurveVertex.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/CurveVertex.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/CurveVertex.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/CurveVertex.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/CurveVertex.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/CurveVertex.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/CurveVertex.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/CurveVertex.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/CurveVertex.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/CurveVertex.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/CurveVertex.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/CurveVertex.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/CurveVertex.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "superficial\/CurveVertex.html", "kind" : "case class"}, {"name" : "superficial.DoublePaths", "shortDescription" : "", "object" : "superficial\/DoublePaths$.html", "members_object" : [{"label" : "geometricIntersection", "tail" : "(c: EdgePath, d: EdgePath, nonPosQuad: NonPosQuad): Int", "member" : "superficial.DoublePaths.geometricIntersection", "link" : "superficial\/DoublePaths$.html#geometricIntersection(c:superficial.EdgePath,d:superficial.EdgePath,nonPosQuad:superficial.NonPosQuad):Int", "kind" : "def"}, {"label" : "Negative", "tail" : "(cL: EdgePath, cR: EdgePath, d: EdgePath, nonPosQuad: NonPosQuad): Set[Intersection]", "member" : "superficial.DoublePaths.Negative", "link" : "superficial\/DoublePaths$.html#Negative(cL:superficial.EdgePath,cR:superficial.EdgePath,d:superficial.EdgePath,nonPosQuad:superficial.NonPosQuad):Set[superficial.Intersection]", "kind" : "def"}, {"label" : "Zero", "tail" : "(cL: EdgePath, cR: EdgePath, d: EdgePath, nonPosQuad: NonPosQuad): Set[Intersection]", "member" : "superficial.DoublePaths.Zero", "link" : "superficial\/DoublePaths$.html#Zero(cL:superficial.EdgePath,cR:superficial.EdgePath,d:superficial.EdgePath,nonPosQuad:superficial.NonPosQuad):Set[superficial.Intersection]", "kind" : "def"}, {"label" : "mod", "tail" : "(m: Int, n: Int): Int", "member" : "superficial.DoublePaths.mod", "link" : "superficial\/DoublePaths$.html#mod(m:Int,n:Int):Int", "kind" : "def"}, {"label" : "Positive", "tail" : "(cR: EdgePath, d: EdgePath, nonPosQuad: NonPosQuad): Set[Intersection]", "member" : "superficial.DoublePaths.Positive", "link" : "superficial\/DoublePaths$.html#Positive(cR:superficial.EdgePath,d:superficial.EdgePath,nonPosQuad:superficial.NonPosQuad):Set[superficial.Intersection]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/DoublePaths$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/DoublePaths$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/DoublePaths$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/DoublePaths$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/DoublePaths$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/DoublePaths$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/DoublePaths$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/DoublePaths$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/DoublePaths$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/DoublePaths$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/DoublePaths$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/DoublePaths$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/DoublePaths$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/DoublePaths$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/DoublePaths$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/DoublePaths$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/DoublePaths$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/DoublePaths$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/DoublePaths$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "superficial.Edge", "object" : "superficial\/Edge$.html", "members_object" : [{"label" : "symbolic", "tail" : "(name: String, initialName: String, terminalName: String, positivelyOriented: Boolean): Symbolic", "member" : "superficial.Edge.symbolic", "link" : "superficial\/Edge$.html#symbolic(name:String,initialName:String,terminalName:String,positivelyOriented:Boolean):superficial.Edge.Symbolic", "kind" : "def"}, {"label" : "makeEmptyEdge", "tail" : "(v: Vertex): Edge", "member" : "superficial.Edge.makeEmptyEdge", "link" : "superficial\/Edge$.html#makeEmptyEdge(v:superficial.Vertex):superficial.Edge", "kind" : "def"}, {"label" : "Symbolic", "tail" : "", "member" : "superficial.Edge.Symbolic", "link" : "superficial\/Edge$.html#SymbolicextendsOrientedEdgewithProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/Edge$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/Edge$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/Edge$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/Edge$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/Edge$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/Edge$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/Edge$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Edge$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Edge$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Edge$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/Edge$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/Edge$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/Edge$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/Edge$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/Edge$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/Edge$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/Edge$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/Edge$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/Edge$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "superficial\/Edge.html", "kind" : "trait", "members_trait" : [{"label" : "del", "tail" : "(): FormalSum[Vertex]", "member" : "superficial.Edge.del", "link" : "superficial\/Edge.html#del:superficial.FormalSum[superficial.Vertex]", "kind" : "def"}, {"label" : "checkFlip", "tail" : "(): Boolean", "member" : "superficial.Edge.checkFlip", "link" : "superficial\/Edge.html#checkFlip:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : ": Boolean", "member" : "superficial.Edge.isEmpty", "link" : "superficial\/Edge.html#isEmpty:Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/Edge.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/Edge.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/Edge.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/Edge.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/Edge.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/Edge.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/Edge.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Edge.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Edge.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Edge.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/Edge.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/Edge.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/Edge.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/Edge.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/Edge.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/Edge.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/Edge.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/Edge.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/Edge.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "initial", "tail" : "(): Vertex", "member" : "superficial.Edge.initial", "link" : "superficial\/Edge.html#initial:superficial.Vertex", "kind" : "abstract def"}, {"label" : "terminal", "tail" : "(): Vertex", "member" : "superficial.Edge.terminal", "link" : "superficial\/Edge.html#terminal:superficial.Vertex", "kind" : "abstract def"}, {"label" : "flip", "tail" : "(): Edge", "member" : "superficial.Edge.flip", "link" : "superficial\/Edge.html#flip:superficial.Edge", "kind" : "abstract def"}], "shortDescription" : "An oriented edge in a two-complex"}, {"name" : "superficial.EdgePair", "shortDescription" : "", "object" : "superficial\/EdgePair$.html", "members_class" : [{"label" : "Negative", "tail" : ": Oriented", "member" : "superficial.EdgePair.Negative", "link" : "superficial\/EdgePair.html#Negative:superficial.EdgePair.Oriented", "kind" : "lazy val"}, {"label" : "Positive", "tail" : ": Oriented", "member" : "superficial.EdgePair.Positive", "link" : "superficial\/EdgePair.html#Positive:superficial.EdgePair.Oriented", "kind" : "lazy val"}, {"member" : "superficial.EdgePair#<init>", "error" : "unsupported entity"}, {"label" : "terminal", "tail" : ": Vertex", "member" : "superficial.EdgePair.terminal", "link" : "superficial\/EdgePair.html#terminal:superficial.Vertex", "kind" : "val"}, {"label" : "initial", "tail" : ": Vertex", "member" : "superficial.EdgePair.initial", "link" : "superficial\/EdgePair.html#initial:superficial.Vertex", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/EdgePair.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/EdgePair.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/EdgePair.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/EdgePair.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/EdgePair.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/EdgePair.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/EdgePair.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/EdgePair.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/EdgePair.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/EdgePair.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/EdgePair.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/EdgePair.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/EdgePair.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/EdgePair.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/EdgePair.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/EdgePair.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/EdgePair.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/EdgePair.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/EdgePair.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "Oriented", "tail" : "", "member" : "superficial.EdgePair.Oriented", "link" : "superficial\/EdgePair$.html#OrientedextendsOrientedEdgewithProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/EdgePair$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/EdgePair$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/EdgePair$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/EdgePair$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/EdgePair$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/EdgePair$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/EdgePair$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/EdgePair$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/EdgePair$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/EdgePair$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/EdgePair$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/EdgePair$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/EdgePair$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/EdgePair$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/EdgePair$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/EdgePair$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/EdgePair$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/EdgePair$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/EdgePair$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "superficial\/EdgePair.html", "kind" : "class"}, {"name" : "superficial.EdgePath", "object" : "superficial\/EdgePath$.html", "members_object" : [{"label" : "combinePaths", "tail" : "(pathVect: Vector[EdgePath]): EdgePath", "member" : "superficial.EdgePath.combinePaths", "link" : "superficial\/EdgePath$.html#combinePaths(pathVect:Vector[superficial.EdgePath]):superficial.EdgePath", "kind" : "def"}, {"label" : "isCanonicalGeodesicLoop", "tail" : "(loop: EdgePath, nonposQuad: NonPosQuad): Boolean", "member" : "superficial.EdgePath.isCanonicalGeodesicLoop", "link" : "superficial\/EdgePath$.html#isCanonicalGeodesicLoop(loop:superficial.EdgePath,nonposQuad:superficial.NonPosQuad):Boolean", "kind" : "def"}, {"label" : "isGeodesicLoop", "tail" : "(loop: EdgePath, nonposQuad: NonPosQuad): Boolean", "member" : "superficial.EdgePath.isGeodesicLoop", "link" : "superficial\/EdgePath$.html#isGeodesicLoop(loop:superficial.EdgePath,nonposQuad:superficial.NonPosQuad):Boolean", "kind" : "def"}, {"label" : "canoniciseLoop", "tail" : "(loop: EdgePath, nonposQuad: NonPosQuad): EdgePath", "member" : "superficial.EdgePath.canoniciseLoop", "link" : "superficial\/EdgePath$.html#canoniciseLoop(loop:superficial.EdgePath,nonposQuad:superficial.NonPosQuad):superficial.EdgePath", "kind" : "def"}, {"label" : "canoniciseLoopHelper", "tail" : "(loop: EdgePath, n: Int, nonposQuad: NonPosQuad): EdgePath", "member" : "superficial.EdgePath.canoniciseLoopHelper", "link" : "superficial\/EdgePath$.html#canoniciseLoopHelper(loop:superficial.EdgePath,n:Int,nonposQuad:superficial.NonPosQuad):superficial.EdgePath", "kind" : "def"}, {"label" : "canoniciseVectorLoop", "tail" : "(eVect: Vector[Edge], nonposQuad: NonPosQuad): Vector[Edge]", "member" : "superficial.EdgePath.canoniciseVectorLoop", "link" : "superficial\/EdgePath$.html#canoniciseVectorLoop(eVect:Vector[superficial.Edge],nonposQuad:superficial.NonPosQuad):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "shiftRightwards", "tail" : "(e1: Edge, e2: Edge, nonposQuad: NonPosQuad): Vector[Edge]", "member" : "superficial.EdgePath.shiftRightwards", "link" : "superficial\/EdgePath$.html#shiftRightwards(e1:superficial.Edge,e2:superficial.Edge,nonposQuad:superficial.NonPosQuad):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "findQuad", "tail" : "(e1: Edge, e2: Edge, nonposQuad: NonPosQuad): Polygon", "member" : "superficial.EdgePath.findQuad", "link" : "superficial\/EdgePath$.html#findQuad(e1:superficial.Edge,e2:superficial.Edge,nonposQuad:superficial.NonPosQuad):superficial.Polygon", "kind" : "def"}, {"label" : "edgePathToGeodesic", "tail" : "(path: EdgePath, twoComplex: TwoComplex): EdgePath", "member" : "superficial.EdgePath.edgePathToGeodesic", "link" : "superficial\/EdgePath$.html#edgePathToGeodesic(path:superficial.EdgePath,twoComplex:superficial.TwoComplex):superficial.EdgePath", "kind" : "def"}, {"label" : "edgePathReduce", "tail" : "(path: EdgePath, twoComplex: TwoComplex): EdgePath", "member" : "superficial.EdgePath.edgePathReduce", "link" : "superficial\/EdgePath$.html#edgePathReduce(path:superficial.EdgePath,twoComplex:superficial.TwoComplex):superficial.EdgePath", "kind" : "def"}, {"label" : "turnPathToGeodesic", "tail" : "(e: Edge, turnVect: Vector[Int], twoComplex: TwoComplex): (Edge, Vector[Int])", "member" : "superficial.EdgePath.turnPathToGeodesic", "link" : "superficial\/EdgePath$.html#turnPathToGeodesic(e:superficial.Edge,turnVect:Vector[Int],twoComplex:superficial.TwoComplex):(superficial.Edge,Vector[Int])", "kind" : "def"}, {"label" : "turnPathToGeodesicHelper", "tail" : "(edge: Edge, turnVect: Vector[Int], twoComplex: TwoComplex): (Edge, Vector[Int], TwoComplex)", "member" : "superficial.EdgePath.turnPathToGeodesicHelper", "link" : "superficial\/EdgePath$.html#turnPathToGeodesicHelper(edge:superficial.Edge,turnVect:Vector[Int],twoComplex:superficial.TwoComplex):(superficial.Edge,Vector[Int],superficial.TwoComplex)", "kind" : "def"}, {"label" : "turnPathReduce", "tail" : "(edge: Edge, turnVect1: Vector[Int], twoComplex: TwoComplex): (Edge, Vector[Int])", "member" : "superficial.EdgePath.turnPathReduce", "link" : "superficial\/EdgePath$.html#turnPathReduce(edge:superficial.Edge,turnVect1:Vector[Int],twoComplex:superficial.TwoComplex):(superficial.Edge,Vector[Int])", "kind" : "def"}, {"label" : "turnPathStandardForm", "tail" : "(edge: Edge, turnVect: Vector[Int], twoComplex: TwoComplex): Vector[Int]", "member" : "superficial.EdgePath.turnPathStandardForm", "link" : "superficial\/EdgePath$.html#turnPathStandardForm(edge:superficial.Edge,turnVect:Vector[Int],twoComplex:superficial.TwoComplex):Vector[Int]", "kind" : "def"}, {"label" : "isGeodesic", "tail" : "(path: EdgePath, twoComplex: TwoComplex): Boolean", "member" : "superficial.EdgePath.isGeodesic", "link" : "superficial\/EdgePath$.html#isGeodesic(path:superficial.EdgePath,twoComplex:superficial.TwoComplex):Boolean", "kind" : "def"}, {"label" : "findFirstRightBracketTurnPath", "tail" : "(v: Vector[Int]): Option[(Int, Int)]", "member" : "superficial.EdgePath.findFirstRightBracketTurnPath", "link" : "superficial\/EdgePath$.html#findFirstRightBracketTurnPath(v:Vector[Int]):Option[(Int,Int)]", "kind" : "def"}, {"label" : "findFirstLeftBracketTurnPath", "tail" : "(v: Vector[Int]): Option[(Int, Int)]", "member" : "superficial.EdgePath.findFirstLeftBracketTurnPath", "link" : "superficial\/EdgePath$.html#findFirstLeftBracketTurnPath(v:Vector[Int]):Option[(Int,Int)]", "kind" : "def"}, {"label" : "turnPathToEdgePath", "tail" : "(edge: Edge, v: Vector[Int], twoComplex: TwoComplex): EdgePath", "member" : "superficial.EdgePath.turnPathToEdgePath", "link" : "superficial\/EdgePath$.html#turnPathToEdgePath(edge:superficial.Edge,v:Vector[Int],twoComplex:superficial.TwoComplex):superficial.EdgePath", "kind" : "def"}, {"label" : "turnPath", "tail" : "(path: EdgePath, twoComplex: TwoComplex): (Edge, Vector[Int])", "member" : "superficial.EdgePath.turnPath", "link" : "superficial\/EdgePath$.html#turnPath(path:superficial.EdgePath,twoComplex:superficial.TwoComplex):(superficial.Edge,Vector[Int])", "kind" : "def"}, {"label" : "edgeVectors", "tail" : "(path: EdgePath): Vector[Edge]", "member" : "superficial.EdgePath.edgeVectors", "link" : "superficial\/EdgePath$.html#edgeVectors(path:superficial.EdgePath):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "enumerate", "tail" : "(complex: TwoComplex, length: Int, predicate: (EdgePath) => Boolean): LazyList[EdgePath]", "member" : "superficial.EdgePath.enumerate", "link" : "superficial\/EdgePath$.html#enumerate(complex:superficial.TwoComplex,length:Int,predicate:superficial.EdgePath=>Boolean):LazyList[superficial.EdgePath]", "kind" : "def"}, {"label" : "isReduced", "tail" : "(path: EdgePath): Boolean", "member" : "superficial.EdgePath.isReduced", "link" : "superficial\/EdgePath$.html#isReduced(path:superficial.EdgePath):Boolean", "kind" : "def"}, {"label" : "boundary", "tail" : "(poly: Polygon): EdgePath", "member" : "superficial.EdgePath.boundary", "link" : "superficial\/EdgePath$.html#boundary(poly:superficial.Polygon):superficial.EdgePath", "kind" : "def"}, {"label" : "apply", "tail" : "(v: Vector[Edge]): EdgePath", "member" : "superficial.EdgePath.apply", "link" : "superficial\/EdgePath$.html#apply(v:Vector[superficial.Edge]):superficial.EdgePath", "kind" : "def"}, {"label" : "length", "tail" : "(path: EdgePath): Int", "member" : "superficial.EdgePath.length", "link" : "superficial\/EdgePath$.html#length(path:superficial.EdgePath):Int", "kind" : "def"}, {"label" : "Append", "tail" : "", "member" : "superficial.EdgePath.Append", "link" : "superficial\/EdgePath$.html#AppendextendsEdgePathwithProductwithSerializable", "kind" : "final case class"}, {"label" : "Constant", "tail" : "", "member" : "superficial.EdgePath.Constant", "link" : "superficial\/EdgePath$.html#ConstantextendsEdgePathwithProductwithSerializable", "kind" : "final case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/EdgePath$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/EdgePath$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/EdgePath$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/EdgePath$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/EdgePath$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/EdgePath$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/EdgePath$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/EdgePath$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/EdgePath$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/EdgePath$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/EdgePath$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/EdgePath$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/EdgePath$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/EdgePath$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/EdgePath$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/EdgePath$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/EdgePath$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/EdgePath$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/EdgePath$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "superficial\/EdgePath.html", "kind" : "trait", "members_trait" : [{"label" : "breakIntoPrimitiveLoops", "tail" : "(): Vector[EdgePath]", "member" : "superficial.EdgePath.breakIntoPrimitiveLoops", "link" : "superficial\/EdgePath.html#breakIntoPrimitiveLoops:Vector[superficial.EdgePath]", "kind" : "def"}, {"label" : "breakIntoPrimitiveLoopHelper", "tail" : "(center: Vertex, current: EdgePath, accum: Vector[EdgePath]): Vector[EdgePath]", "member" : "superficial.EdgePath.breakIntoPrimitiveLoopHelper", "link" : "superficial\/EdgePath.html#breakIntoPrimitiveLoopHelper(center:superficial.Vertex,current:superficial.EdgePath,accum:Vector[superficial.EdgePath]):Vector[superficial.EdgePath]", "kind" : "def"}, {"label" : "isPrimitiveLoop", "tail" : "(): Boolean", "member" : "superficial.EdgePath.isPrimitiveLoop", "link" : "superficial\/EdgePath.html#isPrimitiveLoop:Boolean", "kind" : "def"}, {"label" : "isPrimitiveLoopHelper", "tail" : "(accum: Set[Vertex]): Boolean", "member" : "superficial.EdgePath.isPrimitiveLoopHelper", "link" : "superficial\/EdgePath.html#isPrimitiveLoopHelper(accum:Set[superficial.Vertex]):Boolean", "kind" : "def"}, {"label" : "findVertexIndex", "tail" : "(vertex: Vertex): Option[Int]", "member" : "superficial.EdgePath.findVertexIndex", "link" : "superficial\/EdgePath.html#findVertexIndex(vertex:superficial.Vertex):Option[Int]", "kind" : "def"}, {"label" : "makeBasePointSame", "tail" : "(otherPath: EdgePath): EdgePath", "member" : "superficial.EdgePath.makeBasePointSame", "link" : "superficial\/EdgePath.html#makeBasePointSame(otherPath:superficial.EdgePath):superficial.EdgePath", "kind" : "def"}, {"label" : "makeBasePointSameHelper", "tail" : "(path: EdgePath): EdgePath", "member" : "superficial.EdgePath.makeBasePointSameHelper", "link" : "superficial\/EdgePath.html#makeBasePointSameHelper(path:superficial.EdgePath):superficial.EdgePath", "kind" : "def"}, {"label" : "isEqualUptoBasepointShift", "tail" : "(otherPath: EdgePath): (Boolean, Int)", "member" : "superficial.EdgePath.isEqualUptoBasepointShift", "link" : "superficial\/EdgePath.html#isEqualUptoBasepointShift(otherPath:superficial.EdgePath):(Boolean,Int)", "kind" : "def"}, {"label" : "isEqualUptoBasepointShiftHelper", "tail" : "(otherPath: EdgePath, remains: Int, current: Int): (Boolean, Int)", "member" : "superficial.EdgePath.isEqualUptoBasepointShiftHelper", "link" : "superficial\/EdgePath.html#isEqualUptoBasepointShiftHelper(otherPath:superficial.EdgePath,remains:Int,current:Int):(Boolean,Int)", "kind" : "def"}, {"label" : "isFreelyHomotopicTo", "tail" : "(loop: EdgePath, nonposQuad: NonPosQuad): Boolean", "member" : "superficial.EdgePath.isFreelyHomotopicTo", "link" : "superficial\/EdgePath.html#isFreelyHomotopicTo(loop:superficial.EdgePath,nonposQuad:superficial.NonPosQuad):Boolean", "kind" : "def"}, {"label" : "isHomotopicTo", "tail" : "(path: EdgePath, nonposQuad: NonPosQuad): Boolean", "member" : "superficial.EdgePath.isHomotopicTo", "link" : "superficial\/EdgePath.html#isHomotopicTo(path:superficial.EdgePath,nonposQuad:superficial.NonPosQuad):Boolean", "kind" : "def"}, {"label" : "selfAIN", "tail" : "(path: EdgePath, nonposQuad: NonPosQuad): Int", "member" : "superficial.EdgePath.selfAIN", "link" : "superficial\/EdgePath.html#selfAIN(path:superficial.EdgePath,nonposQuad:superficial.NonPosQuad):Int", "kind" : "def"}, {"label" : "AIN", "tail" : "(path: EdgePath, nonposQuad: NonPosQuad): Int", "member" : "superficial.EdgePath.AIN", "link" : "superficial\/EdgePath.html#AIN(path:superficial.EdgePath,nonposQuad:superficial.NonPosQuad):Int", "kind" : "def"}, {"label" : "selfGIN", "tail" : "(nonposQuad: NonPosQuad): Int", "member" : "superficial.EdgePath.selfGIN", "link" : "superficial\/EdgePath.html#selfGIN(nonposQuad:superficial.NonPosQuad):Int", "kind" : "def"}, {"label" : "GIN", "tail" : "(path: EdgePath, nonposQuad: NonPosQuad): Int", "member" : "superficial.EdgePath.GIN", "link" : "superficial\/EdgePath.html#GIN(path:superficial.EdgePath,nonposQuad:superficial.NonPosQuad):Int", "kind" : "def"}, {"label" : "nonCrossings", "tail" : "(loop: EdgePath, nonposQuad: NonPosQuad): Vector[((Int, Int), (Int, Int))]", "member" : "superficial.EdgePath.nonCrossings", "link" : "superficial\/EdgePath.html#nonCrossings(loop:superficial.EdgePath,nonposQuad:superficial.NonPosQuad):Vector[((Int,Int),(Int,Int))]", "kind" : "def"}, {"label" : "negativeCrossings", "tail" : "(loop: EdgePath, nonposQuad: NonPosQuad): Vector[((Int, Int), (Int, Int))]", "member" : "superficial.EdgePath.negativeCrossings", "link" : "superficial\/EdgePath.html#negativeCrossings(loop:superficial.EdgePath,nonposQuad:superficial.NonPosQuad):Vector[((Int,Int),(Int,Int))]", "kind" : "def"}, {"label" : "positiveCrossings", "tail" : "(loop: EdgePath, nonposQuad: NonPosQuad): Vector[((Int, Int), (Int, Int))]", "member" : "superficial.EdgePath.positiveCrossings", "link" : "superficial\/EdgePath.html#positiveCrossings(loop:superficial.EdgePath,nonposQuad:superficial.NonPosQuad):Vector[((Int,Int),(Int,Int))]", "kind" : "def"}, {"label" : "extractCrossings", "tail" : "(loop: EdgePath, nonposQuad: NonPosQuad, sign: Int): Vector[((Int, Int), (Int, Int))]", "member" : "superficial.EdgePath.extractCrossings", "link" : "superficial\/EdgePath.html#extractCrossings(loop:superficial.EdgePath,nonposQuad:superficial.NonPosQuad,sign:Int):Vector[((Int,Int),(Int,Int))]", "kind" : "def"}, {"label" : "selfIntersection", "tail" : "(nonposQuad: NonPosQuad): Set[Intersection]", "member" : "superficial.EdgePath.selfIntersection", "link" : "superficial\/EdgePath.html#selfIntersection(nonposQuad:superficial.NonPosQuad):Set[superficial.Intersection]", "kind" : "def"}, {"label" : "intersectionsWith", "tail" : "(otherPath: EdgePath, twoComplex: TwoComplex): Set[Intersection]", "member" : "superficial.EdgePath.intersectionsWith", "link" : "superficial\/EdgePath.html#intersectionsWith(otherPath:superficial.EdgePath,twoComplex:superficial.TwoComplex):Set[superficial.Intersection]", "kind" : "def"}, {"label" : "verticesCovered", "tail" : "(): Set[Vertex]", "member" : "superficial.EdgePath.verticesCovered", "link" : "superficial\/EdgePath.html#verticesCovered:Set[superficial.Vertex]", "kind" : "def"}, {"label" : "loopToGeodesic", "tail" : "(nonposQuad: NonPosQuad): EdgePath", "member" : "superficial.EdgePath.loopToGeodesic", "link" : "superficial\/EdgePath.html#loopToGeodesic(nonposQuad:superficial.NonPosQuad):superficial.EdgePath", "kind" : "def"}, {"label" : "shiftBasePoint", "tail" : "(): EdgePath", "member" : "superficial.EdgePath.shiftBasePoint", "link" : "superficial\/EdgePath.html#shiftBasePoint:superficial.EdgePath", "kind" : "def"}, {"label" : "cyclicalTake", "tail" : "(i: Int, j: Int): EdgePath", "member" : "superficial.EdgePath.cyclicalTake", "link" : "superficial\/EdgePath.html#cyclicalTake(i:Int,j:Int):superficial.EdgePath", "kind" : "def"}, {"label" : "mod", "tail" : "(m: Int, n: Int): Int", "member" : "superficial.EdgePath.mod", "link" : "superficial\/EdgePath.html#mod(m:Int,n:Int):Int", "kind" : "def"}, {"label" : "isLoop", "tail" : ": Boolean", "member" : "superficial.EdgePath.isLoop", "link" : "superficial\/EdgePath.html#isLoop:Boolean", "kind" : "lazy val"}, {"label" : "reverse", "tail" : "(): EdgePath", "member" : "superficial.EdgePath.reverse", "link" : "superficial\/EdgePath.html#reverse:superficial.EdgePath", "kind" : "def"}, {"label" : "inTwoComplex", "tail" : "(twoComplex: TwoComplex): Boolean", "member" : "superficial.EdgePath.inTwoComplex", "link" : "superficial\/EdgePath.html#inTwoComplex(twoComplex:superficial.TwoComplex):Boolean", "kind" : "def"}, {"label" : "+", "tail" : "(e: Edge): EdgePath", "member" : "superficial.EdgePath.+", "link" : "superficial\/EdgePath.html#+(e:superficial.Edge):superficial.EdgePath", "kind" : "def"}, {"label" : "++", "tail" : "(path: EdgePath): EdgePath", "member" : "superficial.EdgePath.++", "link" : "superficial\/EdgePath.html#++(path:superficial.EdgePath):superficial.EdgePath", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/EdgePath.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/EdgePath.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/EdgePath.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/EdgePath.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/EdgePath.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/EdgePath.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/EdgePath.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/EdgePath.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/EdgePath.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/EdgePath.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/EdgePath.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/EdgePath.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/EdgePath.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/EdgePath.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/EdgePath.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/EdgePath.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/EdgePath.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/EdgePath.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/EdgePath.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "terminal", "tail" : ": Vertex", "member" : "superficial.EdgePath.terminal", "link" : "superficial\/EdgePath.html#terminal:superficial.Vertex", "kind" : "abstract val"}, {"label" : "initial", "tail" : ": Vertex", "member" : "superficial.EdgePath.initial", "link" : "superficial\/EdgePath.html#initial:superficial.Vertex", "kind" : "abstract val"}], "shortDescription" : ""}, {"name" : "superficial.EquivalenceClass", "object" : "superficial\/EquivalenceClass$.html", "members_object" : [{"label" : "apply", "tail" : "(newSets: Set[Set[EdgePath]]): EquivalenceClass", "member" : "superficial.EquivalenceClass.apply", "link" : "superficial\/EquivalenceClass$.html#apply(newSets:Set[Set[superficial.EdgePath]]):superficial.EquivalenceClass", "kind" : "def"}, {"label" : "dumbApply", "tail" : "(newSets: Set[Set[EdgePath]]): EquivalenceClass", "member" : "superficial.EquivalenceClass.dumbApply", "link" : "superficial\/EquivalenceClass$.html#dumbApply(newSets:Set[Set[superficial.EdgePath]]):superficial.EquivalenceClass", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/EquivalenceClass$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/EquivalenceClass$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/EquivalenceClass$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/EquivalenceClass$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/EquivalenceClass$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/EquivalenceClass$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/EquivalenceClass$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/EquivalenceClass$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/EquivalenceClass$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/EquivalenceClass$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/EquivalenceClass$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/EquivalenceClass$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/EquivalenceClass$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/EquivalenceClass$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/EquivalenceClass$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/EquivalenceClass$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/EquivalenceClass$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/EquivalenceClass$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/EquivalenceClass$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "superficial\/EquivalenceClass.html", "kind" : "trait", "members_trait" : [{"label" : "merge", "tail" : "(anotherClass: EquivalenceClass): EquivalenceClass", "member" : "superficial.EquivalenceClass.merge", "link" : "superficial\/EquivalenceClass.html#merge(anotherClass:superficial.EquivalenceClass):superficial.EquivalenceClass", "kind" : "def"}, {"label" : "makeWellDefined", "tail" : "(): EquivalenceClass", "member" : "superficial.EquivalenceClass.makeWellDefined", "link" : "superficial\/EquivalenceClass.html#makeWellDefined:superficial.EquivalenceClass", "kind" : "def"}, {"label" : "findIntersectingPair", "tail" : "(): Option[(Set[EdgePath], Set[EdgePath])]", "member" : "superficial.EquivalenceClass.findIntersectingPair", "link" : "superficial\/EquivalenceClass.html#findIntersectingPair:Option[(Set[superficial.EdgePath],Set[superficial.EdgePath])]", "kind" : "def"}, {"label" : "isWellDefined", "tail" : "(): Boolean", "member" : "superficial.EquivalenceClass.isWellDefined", "link" : "superficial\/EquivalenceClass.html#isWellDefined:Boolean", "kind" : "def"}, {"label" : "expandWith", "tail" : "(newSet: Set[EdgePath]): EquivalenceClass", "member" : "superficial.EquivalenceClass.expandWith", "link" : "superficial\/EquivalenceClass.html#expandWith(newSet:Set[superficial.EdgePath]):superficial.EquivalenceClass", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/EquivalenceClass.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/EquivalenceClass.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/EquivalenceClass.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/EquivalenceClass.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/EquivalenceClass.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/EquivalenceClass.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/EquivalenceClass.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/EquivalenceClass.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/EquivalenceClass.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/EquivalenceClass.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/EquivalenceClass.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/EquivalenceClass.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/EquivalenceClass.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/EquivalenceClass.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/EquivalenceClass.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/EquivalenceClass.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/EquivalenceClass.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/EquivalenceClass.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/EquivalenceClass.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "sets", "tail" : ": Set[Set[EdgePath]]", "member" : "superficial.EquivalenceClass.sets", "link" : "superficial\/EquivalenceClass.html#sets:Set[Set[superficial.EdgePath]]", "kind" : "abstract val"}], "shortDescription" : ""}, {"name" : "superficial.Examples", "shortDescription" : "", "object" : "superficial\/Examples$.html", "members_object" : [{"label" : "torusWithBoundary", "tail" : ": TwoComplex", "member" : "superficial.Examples.torusWithBoundary", "link" : "superficial\/Examples$.html#torusWithBoundary:superficial.TwoComplex", "kind" : "val"}, {"label" : "disk", "tail" : ": TwoComplex", "member" : "superficial.Examples.disk", "link" : "superficial\/Examples$.html#disk:superficial.TwoComplex", "kind" : "val"}, {"label" : "wedgeTori", "tail" : ": TwoComplex", "member" : "superficial.Examples.wedgeTori", "link" : "superficial\/Examples$.html#wedgeTori:superficial.TwoComplex", "kind" : "val"}, {"label" : "disjointLoops", "tail" : ": TwoComplex", "member" : "superficial.Examples.disjointLoops", "link" : "superficial\/Examples$.html#disjointLoops:superficial.TwoComplex", "kind" : "val"}, {"label" : "pinchedTorus", "tail" : ": TwoComplex", "member" : "superficial.Examples.pinchedTorus", "link" : "superficial\/Examples$.html#pinchedTorus:superficial.TwoComplex", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/Examples$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/Examples$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/Examples$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/Examples$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/Examples$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/Examples$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/Examples$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Examples$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Examples$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Examples$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/Examples$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/Examples$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/Examples$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/Examples$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/Examples$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/Examples$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/Examples$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/Examples$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/Examples$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "superficial.FormalSum", "shortDescription" : "A formal sum of elements of A with coefficients integers.", "object" : "superficial\/FormalSum$.html", "members_object" : [{"label" : "del1", "tail" : "(c1: FormalSum[Edge]): FormalSum[Vertex]", "member" : "superficial.FormalSum.del1", "link" : "superficial\/FormalSum$.html#del1(c1:superficial.FormalSum[superficial.Edge]):superficial.FormalSum[superficial.Vertex]", "kind" : "def"}, {"label" : "del2", "tail" : "(c2: FormalSum[Polygon]): FormalSum[Edge]", "member" : "superficial.FormalSum.del2", "link" : "superficial\/FormalSum$.html#del2(c2:superficial.FormalSum[superficial.Polygon]):superficial.FormalSum[superficial.Edge]", "kind" : "def"}, {"label" : "reduced", "tail" : "(v: Vector[(A, Int)]): FormalSum[A]", "member" : "superficial.FormalSum.reduced", "link" : "superficial\/FormalSum$.html#reduced[A](v:Vector[(A,Int)]):superficial.FormalSum[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/FormalSum$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/FormalSum$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/FormalSum$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/FormalSum$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/FormalSum$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/FormalSum$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/FormalSum$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/FormalSum$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/FormalSum$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/FormalSum$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/FormalSum$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/FormalSum$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/FormalSum$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/FormalSum$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/FormalSum$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/FormalSum$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/FormalSum$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/FormalSum$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/FormalSum$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "flatMap", "tail" : "(f: (A) => FormalSum[B]): FormalSum[B]", "member" : "superficial.FormalSum.flatMap", "link" : "superficial\/FormalSum.html#flatMap[B](f:A=>superficial.FormalSum[B]):superficial.FormalSum[B]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (A) => B): FormalSum[B]", "member" : "superficial.FormalSum.map", "link" : "superficial\/FormalSum.html#map[B](f:A=>B):superficial.FormalSum[B]", "kind" : "def"}, {"label" : "-", "tail" : "(el: A): FormalSum[A]", "member" : "superficial.FormalSum.-", "link" : "superficial\/FormalSum.html#-(el:A):superficial.FormalSum[A]", "kind" : "def"}, {"label" : "+", "tail" : "(el: A): FormalSum[A]", "member" : "superficial.FormalSum.+", "link" : "superficial\/FormalSum.html#+(el:A):superficial.FormalSum[A]", "kind" : "def"}, {"label" : "++", "tail" : "(that: FormalSum[A]): FormalSum[A]", "member" : "superficial.FormalSum.++", "link" : "superficial\/FormalSum.html#++(that:superficial.FormalSum[A]):superficial.FormalSum[A]", "kind" : "def"}, {"label" : "coeffVec", "tail" : ": Vector[(A, Int)]", "member" : "superficial.FormalSum.coeffVec", "link" : "superficial\/FormalSum.html#coeffVec:scala.collection.immutable.Vector[(A,Int)]", "kind" : "val"}, {"member" : "superficial.FormalSum#<init>", "error" : "unsupported entity"}, {"label" : "coeffs", "tail" : ": Map[A, Int]", "member" : "superficial.FormalSum.coeffs", "link" : "superficial\/FormalSum.html#coeffs:Map[A,Int]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "superficial\/FormalSum.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/FormalSum.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/FormalSum.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/FormalSum.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/FormalSum.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/FormalSum.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/FormalSum.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/FormalSum.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/FormalSum.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/FormalSum.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/FormalSum.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/FormalSum.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/FormalSum.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/FormalSum.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/FormalSum.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/FormalSum.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/FormalSum.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "superficial\/FormalSum.html", "kind" : "case class"}, {"name" : "superficial.Generator", "object" : "superficial\/Generator$.html", "members_object" : [{"label" : "Inverse", "tail" : "", "member" : "superficial.Generator.Inverse", "link" : "superficial\/Generator$.html#InverseextendsGeneratorwithProductwithSerializable", "kind" : "case class"}, {"label" : "s", "tail" : "", "member" : "superficial.Generator.s", "link" : "superficial\/Generator$.html#sextendsGeneratorwithProductwithSerializable", "kind" : "case class"}, {"label" : "b", "tail" : "", "member" : "superficial.Generator.b", "link" : "superficial\/Generator$.html#bextendsGeneratorwithProductwithSerializable", "kind" : "case class"}, {"label" : "a", "tail" : "", "member" : "superficial.Generator.a", "link" : "superficial\/Generator$.html#aextendsGeneratorwithProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/Generator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/Generator$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/Generator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/Generator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/Generator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/Generator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/Generator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Generator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Generator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Generator$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/Generator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/Generator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/Generator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/Generator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/Generator$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/Generator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/Generator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/Generator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/Generator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "superficial\/Generator.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/Generator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/Generator.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/Generator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/Generator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/Generator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/Generator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/Generator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Generator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Generator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Generator.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/Generator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/Generator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/Generator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/Generator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/Generator.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/Generator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/Generator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/Generator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/Generator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Contribution of Ankit-Jaiswal and Soumyo Biswas, independent of the rest of the code."}, {"name" : "superficial.Hexagon", "object" : "superficial\/Hexagon$.html", "members_object" : [{"label" : "Hyperbolic", "tail" : "", "member" : "superficial.Hexagon.Hyperbolic", "link" : "superficial\/Hexagon$.html#HyperbolicextendsProductwithSerializable", "kind" : "case class"}, {"label" : "mod6", "tail" : "(n: Int): Index", "member" : "superficial.Hexagon.mod6", "link" : "superficial\/Hexagon$.html#mod6(n:Int):superficial.Polygon.Index", "kind" : "def"}, {"label" : "distance4", "tail" : "(a: Double, l1: Double, l2: Double, b: Double): Double", "member" : "superficial.Hexagon.distance4", "link" : "superficial\/Hexagon$.html#distance4(a:Double,l1:Double,l2:Double,b:Double):Double", "kind" : "def"}, {"label" : "distance3", "tail" : "(a: Double, l: Double, b: Double): Double", "member" : "superficial.Hexagon.distance3", "link" : "superficial\/Hexagon$.html#distance3(a:Double,l:Double,b:Double):Double", "kind" : "def"}, {"label" : "distance2", "tail" : "(a: Double, b: Double): Double", "member" : "superficial.Hexagon.distance2", "link" : "superficial\/Hexagon$.html#distance2(a:Double,b:Double):Double", "kind" : "def"}, {"label" : "side", "tail" : "(l1: Double, l2: Double, l3: Double): Double", "member" : "superficial.Hexagon.side", "link" : "superficial\/Hexagon$.html#side(l1:Double,l2:Double,l3:Double):Double", "kind" : "def"}, {"label" : "arcsinh", "tail" : "(x: Double): Double", "member" : "superficial.Hexagon.arcsinh", "link" : "superficial\/Hexagon$.html#arcsinh(x:Double):Double", "kind" : "def"}, {"label" : "arccosh", "tail" : "(x: Double): Double", "member" : "superficial.Hexagon.arccosh", "link" : "superficial\/Hexagon$.html#arccosh(x:Double):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/Hexagon$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/Hexagon$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/Hexagon$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/Hexagon$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/Hexagon$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/Hexagon$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/Hexagon$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Hexagon$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Hexagon$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Hexagon$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/Hexagon$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/Hexagon$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/Hexagon$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/Hexagon$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/Hexagon$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/Hexagon$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/Hexagon$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/Hexagon$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/Hexagon$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "superficial\/Hexagon.html", "kind" : "trait", "members_trait" : [{"label" : "sides", "tail" : ": Int", "member" : "superficial.Hexagon.sides", "link" : "superficial\/Hexagon.html#sides:Int", "kind" : "val"}, {"label" : "boundaryIndex", "tail" : "(e: Edge): Set[(Int, Boolean)]", "member" : "superficial.Polygon.boundaryIndex", "link" : "superficial\/Hexagon.html#boundaryIndex(e:superficial.Edge):Set[(Int,Boolean)]", "kind" : "def"}, {"label" : "edges", "tail" : ": Set[Edge]", "member" : "superficial.Polygon.edges", "link" : "superficial\/Hexagon.html#edges:Set[superficial.Edge]", "kind" : "lazy val"}, {"label" : "del", "tail" : "(): FormalSum[Edge]", "member" : "superficial.Polygon.del", "link" : "superficial\/Hexagon.html#del:superficial.FormalSum[superficial.Edge]", "kind" : "def"}, {"label" : "checkPoly", "tail" : "(): Boolean", "member" : "superficial.Polygon.checkPoly", "link" : "superficial\/Hexagon.html#checkPoly:Boolean", "kind" : "def"}, {"label" : "checkBoundary", "tail" : "(): Boolean", "member" : "superficial.Polygon.checkBoundary", "link" : "superficial\/Hexagon.html#checkBoundary:Boolean", "kind" : "def"}, {"label" : "basePoint", "tail" : ": Vertex", "member" : "superficial.Polygon.basePoint", "link" : "superficial\/Hexagon.html#basePoint:superficial.Vertex", "kind" : "lazy val"}, {"label" : "indices", "tail" : ": Vector[Index]", "member" : "superficial.Polygon.indices", "link" : "superficial\/Hexagon.html#indices:Vector[superficial.Polygon.Index]", "kind" : "lazy val"}, {"label" : "faces", "tail" : ": Set[Polygon]", "member" : "superficial.Polygon.faces", "link" : "superficial\/Hexagon.html#faces:scala.collection.immutable.Set[superficial.Polygon]", "kind" : "lazy val"}, {"label" : "turnEdge", "tail" : "(e: Edge, t: Int): Edge", "member" : "superficial.TwoComplex.turnEdge", "link" : "superficial\/Hexagon.html#turnEdge(e:superficial.Edge,t:Int):superficial.Edge", "kind" : "def"}, {"label" : "angleBetween", "tail" : "(e1: Edge, e2: Edge): Int", "member" : "superficial.TwoComplex.angleBetween", "link" : "superficial\/Hexagon.html#angleBetween(e1:superficial.Edge,e2:superficial.Edge):Int", "kind" : "def"}, {"label" : "turnIndex", "tail" : "(e1: Edge, e2: Edge): Int", "member" : "superficial.TwoComplex.turnIndex", "link" : "superficial\/Hexagon.html#turnIndex(e1:superficial.Edge,e2:superficial.Edge):Int", "kind" : "def"}, {"label" : "vectorEdgesToTheRightOf", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorEdgesToTheRightOf", "link" : "superficial\/Hexagon.html#vectorEdgesToTheRightOf(e:superficial.Edge):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorEdgesToTheLeftOf", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorEdgesToTheLeftOf", "link" : "superficial\/Hexagon.html#vectorEdgesToTheLeftOf(e:superficial.Edge):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorRightTurns", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorRightTurns", "link" : "superficial\/Hexagon.html#vectorRightTurns(e:superficial.Edge):scala.collection.immutable.Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorLeftTurns", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorLeftTurns", "link" : "superficial\/Hexagon.html#vectorLeftTurns(e:superficial.Edge):scala.collection.immutable.Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorOrbitFin", "tail" : "(e: Edge, opt: (Edge) => Option[Edge], accum: Vector[Edge], n: Int): Vector[Edge]", "member" : "superficial.TwoComplex.vectorOrbitFin", "link" : "superficial\/Hexagon.html#vectorOrbitFin(e:superficial.Edge,opt:superficial.Edge=>Option[superficial.Edge],accum:Vector[superficial.Edge],n:Int):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorOrbit", "tail" : "(e: Edge, opt: (Edge) => Option[Edge], accum: Vector[Edge]): Vector[Edge]", "member" : "superficial.TwoComplex.vectorOrbit", "link" : "superficial\/Hexagon.html#vectorOrbit(e:superficial.Edge,opt:superficial.Edge=>Option[superficial.Edge],accum:Vector[superficial.Edge]):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "SwR", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SwR", "link" : "superficial\/Hexagon.html#SwR(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SwL", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SwL", "link" : "superficial\/Hexagon.html#SwL(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SR", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SR", "link" : "superficial\/Hexagon.html#SR(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SL", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SL", "link" : "superficial\/Hexagon.html#SL(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "R", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.R", "link" : "superficial\/Hexagon.html#R(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "L", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.L", "link" : "superficial\/Hexagon.html#L(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "slightRight", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.slightRight", "link" : "superficial\/Hexagon.html#slightRight(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "slightLeft", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.slightLeft", "link" : "superficial\/Hexagon.html#slightLeft(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "turnRight", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.turnRight", "link" : "superficial\/Hexagon.html#turnRight(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "turnLeft", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.turnLeft", "link" : "superficial\/Hexagon.html#turnLeft(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "subComplex", "tail" : "(vs: Set[Vertex]): TwoComplex", "member" : "superficial.TwoComplex.subComplex", "link" : "superficial\/Hexagon.html#subComplex(vs:Set[superficial.Vertex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addTwoComplexes", "tail" : "(complexes: Set[TwoComplex]): TwoComplex", "member" : "superficial.TwoComplex.addTwoComplexes", "link" : "superficial\/Hexagon.html#addTwoComplexes(complexes:Set[superficial.TwoComplex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addFaces", "tail" : "(fcs: Set[Polygon]): TwoComplex", "member" : "superficial.TwoComplex.addFaces", "link" : "superficial\/Hexagon.html#addFaces(fcs:Set[superficial.Polygon]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addEdges", "tail" : "(eds: Set[Edge]): TwoComplex", "member" : "superficial.TwoComplex.addEdges", "link" : "superficial\/Hexagon.html#addEdges(eds:Set[superficial.Edge]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addVertices", "tail" : "(vs: Set[Vertex]): TwoComplex", "member" : "superficial.TwoComplex.addVertices", "link" : "superficial\/Hexagon.html#addVertices(vs:Set[superficial.Vertex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "isSurfaceWithBoundary", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isSurfaceWithBoundary", "link" : "superficial\/Hexagon.html#isSurfaceWithBoundary:Boolean", "kind" : "def"}, {"label" : "isClosedSurface", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isClosedSurface", "link" : "superficial\/Hexagon.html#isClosedSurface:Boolean", "kind" : "def"}, {"label" : "isEdgeAtBoundary", "tail" : "(e: Edge): Boolean", "member" : "superficial.TwoComplex.isEdgeAtBoundary", "link" : "superficial\/Hexagon.html#isEdgeAtBoundary(e:superficial.Edge):Boolean", "kind" : "def"}, {"label" : "edgeOccurences", "tail" : "(e: Edge): Int", "member" : "superficial.TwoComplex.edgeOccurences", "link" : "superficial\/Hexagon.html#edgeOccurences(e:superficial.Edge):Int", "kind" : "def"}, {"label" : "transitiveRotations", "tail" : "(v: Vertex): Boolean", "member" : "superficial.TwoComplex.transitiveRotations", "link" : "superficial\/Hexagon.html#transitiveRotations(v:superficial.Vertex):Boolean", "kind" : "def"}, {"label" : "degree", "tail" : "(v: Vertex): Int", "member" : "superficial.TwoComplex.degree", "link" : "superficial\/Hexagon.html#degree(v:superficial.Vertex):Int", "kind" : "def"}, {"label" : "edgesEndingAt", "tail" : "(v: Vertex): Set[Edge]", "member" : "superficial.TwoComplex.edgesEndingAt", "link" : "superficial\/Hexagon.html#edgesEndingAt(v:superficial.Vertex):scala.collection.immutable.Set[superficial.Edge]", "kind" : "def"}, {"label" : "allEdgesToTheRightOf", "tail" : "(e: Edge): Set[Edge]", "member" : "superficial.TwoComplex.allEdgesToTheRightOf", "link" : "superficial\/Hexagon.html#allEdgesToTheRightOf(e:superficial.Edge):Set[superficial.Edge]", "kind" : "def"}, {"label" : "allEdgesToTheLeftOf", "tail" : "(e: Edge): Set[Edge]", "member" : "superficial.TwoComplex.allEdgesToTheLeftOf", "link" : "superficial\/Hexagon.html#allEdgesToTheLeftOf(e:superficial.Edge):Set[superficial.Edge]", "kind" : "def"}, {"label" : "orbit", "tail" : "(e: Edge, steps: Int, opt: (Edge) => Option[Edge], accum: Set[Edge]): Set[Edge]", "member" : "superficial.TwoComplex.orbit", "link" : "superficial\/Hexagon.html#orbit(e:superficial.Edge,steps:Int,opt:superficial.Edge=>Option[superficial.Edge],accum:Set[superficial.Edge]):Set[superficial.Edge]", "kind" : "def"}, {"label" : "rotateRightOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.rotateRightOpt", "link" : "superficial\/Hexagon.html#rotateRightOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "rotateLeftOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.rotateLeftOpt", "link" : "superficial\/Hexagon.html#rotateLeftOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "predOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.predOpt", "link" : "superficial\/Hexagon.html#predOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "succOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.succOpt", "link" : "superficial\/Hexagon.html#succOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "isConnectedComplex", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isConnectedComplex", "link" : "superficial\/Hexagon.html#isConnectedComplex:Boolean", "kind" : "def"}, {"label" : "connectedComponent", "tail" : "(v: Vertex): Set[Vertex]", "member" : "superficial.TwoComplex.connectedComponent", "link" : "superficial\/Hexagon.html#connectedComponent(v:superficial.Vertex):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "maxSetNbr", "tail" : "(s: Set[Vertex]): Set[Vertex]", "member" : "superficial.TwoComplex.maxSetNbr", "link" : "superficial\/Hexagon.html#maxSetNbr(s:Set[superficial.Vertex]):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "setNbr", "tail" : "(s: Set[Vertex]): Set[Vertex]", "member" : "superficial.TwoComplex.setNbr", "link" : "superficial\/Hexagon.html#setNbr(s:Set[superficial.Vertex]):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "vertexNbr", "tail" : "(v: Vertex): Set[Vertex]", "member" : "superficial.TwoComplex.vertexNbr", "link" : "superficial\/Hexagon.html#vertexNbr(v:superficial.Vertex):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "collapseEdge", "tail" : "(e: Edge): (TwoComplex, ((EdgePath) => EdgePath, (EdgePath) => EdgePath))", "member" : "superficial.TwoComplex.collapseEdge", "link" : "superficial\/Hexagon.html#collapseEdge(e:superficial.Edge):(superficial.TwoComplex,(superficial.EdgePath=>superficial.EdgePath,superficial.EdgePath=>superficial.EdgePath))", "kind" : "def"}, {"label" : "normalArcs", "tail" : "(): Set[NormalArc]", "member" : "superficial.TwoComplex.normalArcs", "link" : "superficial\/Hexagon.html#normalArcs:Set[superficial.NormalArc]", "kind" : "def"}, {"label" : "edgeIndices", "tail" : "(edge: Edge): Set[(Polygon, Index, Boolean)]", "member" : "superficial.TwoComplex.edgeIndices", "link" : "superficial\/Hexagon.html#edgeIndices(edge:superficial.Edge):Set[(superficial.Polygon,superficial.Polygon.Index,Boolean)]", "kind" : "def"}, {"label" : "facesWithEdge", "tail" : "(edge: Edge): Set[Polygon]", "member" : "superficial.TwoComplex.facesWithEdge", "link" : "superficial\/Hexagon.html#facesWithEdge(edge:superficial.Edge):Set[superficial.Polygon]", "kind" : "def"}, {"label" : "vertexIndex", "tail" : "(v: Vertex): Option[Int]", "member" : "superficial.TwoComplex.vertexIndex", "link" : "superficial\/Hexagon.html#vertexIndex(v:superficial.Vertex):Option[Int]", "kind" : "def"}, {"label" : "indexedVertices", "tail" : ": Set[(Vertex, Int)]", "member" : "superficial.TwoComplex.indexedVertices", "link" : "superficial\/Hexagon.html#indexedVertices:scala.collection.immutable.Set[(superficial.Vertex,Int)]", "kind" : "lazy val"}, {"label" : "chi", "tail" : ": Int", "member" : "superficial.TwoComplex.chi", "link" : "superficial\/Hexagon.html#chi:Int", "kind" : "lazy val"}, {"label" : "edgeIndex", "tail" : "(edge: Edge): Option[(Int, Boolean)]", "member" : "superficial.TwoComplex.edgeIndex", "link" : "superficial\/Hexagon.html#edgeIndex(edge:superficial.Edge):Option[(Int,Boolean)]", "kind" : "def"}, {"label" : "halfEdges", "tail" : ": Set[Edge]", "member" : "superficial.TwoComplex.halfEdges", "link" : "superficial\/Hexagon.html#halfEdges:Set[superficial.Edge]", "kind" : "lazy val"}, {"label" : "positiveEdges", "tail" : ": Vector[OrientedEdge]", "member" : "superficial.TwoComplex.positiveEdges", "link" : "superficial\/Hexagon.html#positiveEdges:Vector[superficial.OrientedEdge]", "kind" : "lazy val"}, {"label" : "checkComplex", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.checkComplex", "link" : "superficial\/Hexagon.html#checkComplex:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/Hexagon.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/Hexagon.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/Hexagon.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/Hexagon.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/Hexagon.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/Hexagon.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/Hexagon.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Hexagon.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Hexagon.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Hexagon.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/Hexagon.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/Hexagon.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/Hexagon.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/Hexagon.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/Hexagon.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/Hexagon.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/Hexagon.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/Hexagon.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/Hexagon.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "vertices", "tail" : ": Set[Vertex]", "member" : "superficial.Polygon.vertices", "link" : "superficial\/Hexagon.html#vertices:Set[superficial.Vertex]", "kind" : "abstract val"}, {"label" : "boundary", "tail" : ": Vector[Edge]", "member" : "superficial.Polygon.boundary", "link" : "superficial\/Hexagon.html#boundary:Vector[superficial.Edge]", "kind" : "abstract val"}], "shortDescription" : "A hexagon"}, {"name" : "superficial.HomotopyClassesOfPaths", "object" : "superficial\/HomotopyClassesOfPaths$.html", "members_object" : [{"label" : "starter", "tail" : "(face: Polygon, i: Int, j: Int): HomotopyClassesOfPaths", "member" : "superficial.HomotopyClassesOfPaths.starter", "link" : "superficial\/HomotopyClassesOfPaths$.html#starter(face:superficial.Polygon,i:Int,j:Int):superficial.HomotopyClassesOfPaths", "kind" : "def"}, {"label" : "apply", "tail" : "(initialV: Vertex, terminalV: Vertex, classes: Set[Set[EdgePath]]): HomotopyClassesOfPaths", "member" : "superficial.HomotopyClassesOfPaths.apply", "link" : "superficial\/HomotopyClassesOfPaths$.html#apply(initialV:superficial.Vertex,terminalV:superficial.Vertex,classes:Set[Set[superficial.EdgePath]]):superficial.HomotopyClassesOfPaths", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/HomotopyClassesOfPaths$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/HomotopyClassesOfPaths$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/HomotopyClassesOfPaths$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/HomotopyClassesOfPaths$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/HomotopyClassesOfPaths$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/HomotopyClassesOfPaths$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/HomotopyClassesOfPaths$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/HomotopyClassesOfPaths$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/HomotopyClassesOfPaths$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/HomotopyClassesOfPaths$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/HomotopyClassesOfPaths$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/HomotopyClassesOfPaths$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/HomotopyClassesOfPaths$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/HomotopyClassesOfPaths$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/HomotopyClassesOfPaths$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/HomotopyClassesOfPaths$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/HomotopyClassesOfPaths$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/HomotopyClassesOfPaths$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/HomotopyClassesOfPaths$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "superficial\/HomotopyClassesOfPaths.html", "kind" : "trait", "members_trait" : [{"label" : "multiply", "tail" : "(anotherClass: HomotopyClassesOfPaths): HomotopyClassesOfPaths", "member" : "superficial.HomotopyClassesOfPaths.multiply", "link" : "superficial\/HomotopyClassesOfPaths.html#multiply(anotherClass:superficial.HomotopyClassesOfPaths):superficial.HomotopyClassesOfPaths", "kind" : "def"}, {"label" : "merge", "tail" : "(anotherClass: HomotopyClassesOfPaths): HomotopyClassesOfPaths", "member" : "superficial.HomotopyClassesOfPaths.merge", "link" : "superficial\/HomotopyClassesOfPaths.html#merge(anotherClass:superficial.HomotopyClassesOfPaths):superficial.HomotopyClassesOfPaths", "kind" : "def"}, {"label" : "expandWith", "tail" : "(toAdd: Set[EdgePath]): HomotopyClassesOfPaths", "member" : "superficial.HomotopyClassesOfPaths.expandWith", "link" : "superficial\/HomotopyClassesOfPaths.html#expandWith(toAdd:Set[superficial.EdgePath]):superficial.HomotopyClassesOfPaths", "kind" : "def"}, {"label" : "isWellDefined", "tail" : "(): Boolean", "member" : "superficial.HomotopyClassesOfPaths.isWellDefined", "link" : "superficial\/HomotopyClassesOfPaths.html#isWellDefined:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/HomotopyClassesOfPaths.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/HomotopyClassesOfPaths.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/HomotopyClassesOfPaths.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/HomotopyClassesOfPaths.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/HomotopyClassesOfPaths.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/HomotopyClassesOfPaths.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/HomotopyClassesOfPaths.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/HomotopyClassesOfPaths.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/HomotopyClassesOfPaths.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/HomotopyClassesOfPaths.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/HomotopyClassesOfPaths.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/HomotopyClassesOfPaths.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/HomotopyClassesOfPaths.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/HomotopyClassesOfPaths.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/HomotopyClassesOfPaths.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/HomotopyClassesOfPaths.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/HomotopyClassesOfPaths.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/HomotopyClassesOfPaths.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/HomotopyClassesOfPaths.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "homotopyClasses", "tail" : ": EquivalenceClass", "member" : "superficial.HomotopyClassesOfPaths.homotopyClasses", "link" : "superficial\/HomotopyClassesOfPaths.html#homotopyClasses:superficial.EquivalenceClass", "kind" : "abstract val"}, {"label" : "terminal", "tail" : ": Vertex", "member" : "superficial.HomotopyClassesOfPaths.terminal", "link" : "superficial\/HomotopyClassesOfPaths.html#terminal:superficial.Vertex", "kind" : "abstract val"}, {"label" : "initial", "tail" : ": Vertex", "member" : "superficial.HomotopyClassesOfPaths.initial", "link" : "superficial\/HomotopyClassesOfPaths.html#initial:superficial.Vertex", "kind" : "abstract val"}], "shortDescription" : ""}, {"name" : "superficial.Intersection", "object" : "superficial\/Intersection$.html", "members_object" : [{"label" : "mergeAll", "tail" : "(allInter: Vector[Intersection], thisLimit: Int, thatLimit: Int): Vector[Intersection]", "member" : "superficial.Intersection.mergeAll", "link" : "superficial\/Intersection$.html#mergeAll(allInter:Vector[superficial.Intersection],thisLimit:Int,thatLimit:Int):Vector[superficial.Intersection]", "kind" : "def"}, {"label" : "findMergablePair", "tail" : "(inside: Set[Intersection], thisLimit: Int, thatLimit: Int): Option[(Intersection, Intersection)]", "member" : "superficial.Intersection.findMergablePair", "link" : "superficial\/Intersection$.html#findMergablePair(inside:Set[superficial.Intersection],thisLimit:Int,thatLimit:Int):Option[(superficial.Intersection,superficial.Intersection)]", "kind" : "def"}, {"label" : "apply", "tail" : "(newStart: (Int, Int), newEnd: (Int, Int), newTurnBefore: Int, newTurnAfter: Int): Intersection", "member" : "superficial.Intersection.apply", "link" : "superficial\/Intersection$.html#apply(newStart:(Int,Int),newEnd:(Int,Int),newTurnBefore:Int,newTurnAfter:Int):superficial.Intersection", "kind" : "def"}, {"label" : "InterCons", "tail" : "", "member" : "superficial.Intersection.InterCons", "link" : "superficial\/Intersection$.html#InterConsextendsIntersectionwithProductwithSerializable", "kind" : "final case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/Intersection$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/Intersection$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/Intersection$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/Intersection$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/Intersection$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/Intersection$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/Intersection$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Intersection$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Intersection$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Intersection$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/Intersection$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/Intersection$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/Intersection$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/Intersection$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/Intersection$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/Intersection$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/Intersection$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/Intersection$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/Intersection$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "superficial\/Intersection.html", "kind" : "trait", "members_trait" : [{"label" : "isCrossing", "tail" : "(thisPath: EdgePath, thatPath: EdgePath, twoComplex: TwoComplex): Boolean", "member" : "superficial.Intersection.isCrossing", "link" : "superficial\/Intersection.html#isCrossing(thisPath:superficial.EdgePath,thatPath:superficial.EdgePath,twoComplex:superficial.TwoComplex):Boolean", "kind" : "def"}, {"label" : "length", "tail" : "(): Int", "member" : "superficial.Intersection.length", "link" : "superficial\/Intersection.html#length:Int", "kind" : "def"}, {"label" : "getSign", "tail" : "(thisPath: EdgePath, thatPath: EdgePath, twoComplex: TwoComplex): Int", "member" : "superficial.Intersection.getSign", "link" : "superficial\/Intersection.html#getSign(thisPath:superficial.EdgePath,thatPath:superficial.EdgePath,twoComplex:superficial.TwoComplex):Int", "kind" : "def"}, {"label" : "getEdgePathWithSigns", "tail" : "(thisPath: EdgePath, thatPath: EdgePath, twoComplex: TwoComplex): (EdgePath, Int)", "member" : "superficial.Intersection.getEdgePathWithSigns", "link" : "superficial\/Intersection.html#getEdgePathWithSigns(thisPath:superficial.EdgePath,thatPath:superficial.EdgePath,twoComplex:superficial.TwoComplex):(superficial.EdgePath,Int)", "kind" : "def"}, {"label" : "findMergable", "tail" : "(inside: Vector[Intersection], thisLimit: Int, thatLimit: Int): Option[Intersection]", "member" : "superficial.Intersection.findMergable", "link" : "superficial\/Intersection.html#findMergable(inside:Vector[superficial.Intersection],thisLimit:Int,thatLimit:Int):Option[superficial.Intersection]", "kind" : "def"}, {"label" : "mergeWith", "tail" : "(other: Intersection, thisLimit: Int, thatLimit: Int): Intersection", "member" : "superficial.Intersection.mergeWith", "link" : "superficial\/Intersection.html#mergeWith(other:superficial.Intersection,thisLimit:Int,thatLimit:Int):superficial.Intersection", "kind" : "def"}, {"label" : "isMergableWith", "tail" : "(other: Intersection, thisLimit: Int, thatLimit: Int): Boolean", "member" : "superficial.Intersection.isMergableWith", "link" : "superficial\/Intersection.html#isMergableWith(other:superficial.Intersection,thisLimit:Int,thatLimit:Int):Boolean", "kind" : "def"}, {"label" : "isValidBetween", "tail" : "(thisPath: EdgePath, thatPath: EdgePath, twoComplex: TwoComplex): Boolean", "member" : "superficial.Intersection.isValidBetween", "link" : "superficial\/Intersection.html#isValidBetween(thisPath:superficial.EdgePath,thatPath:superficial.EdgePath,twoComplex:superficial.TwoComplex):Boolean", "kind" : "def"}, {"label" : "mod", "tail" : "(m: Int, n: Int): Int", "member" : "superficial.Intersection.mod", "link" : "superficial\/Intersection.html#mod(m:Int,n:Int):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/Intersection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/Intersection.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/Intersection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/Intersection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/Intersection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/Intersection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/Intersection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Intersection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Intersection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Intersection.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/Intersection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/Intersection.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/Intersection.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/Intersection.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/Intersection.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/Intersection.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/Intersection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/Intersection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/Intersection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "turnAfter", "tail" : ": Int", "member" : "superficial.Intersection.turnAfter", "link" : "superficial\/Intersection.html#turnAfter:Int", "kind" : "abstract val"}, {"label" : "turnBefore", "tail" : ": Int", "member" : "superficial.Intersection.turnBefore", "link" : "superficial\/Intersection.html#turnBefore:Int", "kind" : "abstract val"}, {"label" : "end", "tail" : ": (Int, Int)", "member" : "superficial.Intersection.end", "link" : "superficial\/Intersection.html#end:(Int,Int)", "kind" : "abstract val"}, {"label" : "start", "tail" : ": (Int, Int)", "member" : "superficial.Intersection.start", "link" : "superficial\/Intersection.html#start:(Int,Int)", "kind" : "abstract val"}], "shortDescription" : ""}, {"name" : "superficial.NonPosQuad", "object" : "superficial\/NonPosQuad$.html", "members_object" : [{"label" : "apply", "tail" : "(twoComplex: TwoComplex): NonPosQuad", "member" : "superficial.NonPosQuad.apply", "link" : "superficial\/NonPosQuad$.html#apply(twoComplex:superficial.TwoComplex):superficial.NonPosQuad", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/NonPosQuad$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/NonPosQuad$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/NonPosQuad$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/NonPosQuad$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/NonPosQuad$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/NonPosQuad$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/NonPosQuad$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/NonPosQuad$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/NonPosQuad$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/NonPosQuad$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/NonPosQuad$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/NonPosQuad$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/NonPosQuad$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/NonPosQuad$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/NonPosQuad$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/NonPosQuad$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/NonPosQuad$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/NonPosQuad$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/NonPosQuad$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "superficial\/NonPosQuad.html", "kind" : "trait", "members_trait" : [{"label" : "turnEdge", "tail" : "(e: Edge, t: Int): Edge", "member" : "superficial.NonPosQuad.turnEdge", "link" : "superficial\/NonPosQuad.html#turnEdge(e:superficial.Edge,t:Int):superficial.Edge", "kind" : "def"}, {"label" : "turnIndex", "tail" : "(e1: Edge, e2: Edge): Int", "member" : "superficial.NonPosQuad.turnIndex", "link" : "superficial\/NonPosQuad.html#turnIndex(e1:superficial.Edge,e2:superficial.Edge):Int", "kind" : "def"}, {"label" : "angleBetween", "tail" : "(e1: Edge, e2: Edge): Int", "member" : "superficial.TwoComplex.angleBetween", "link" : "superficial\/NonPosQuad.html#angleBetween(e1:superficial.Edge,e2:superficial.Edge):Int", "kind" : "def"}, {"label" : "vectorEdgesToTheRightOf", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorEdgesToTheRightOf", "link" : "superficial\/NonPosQuad.html#vectorEdgesToTheRightOf(e:superficial.Edge):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorEdgesToTheLeftOf", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorEdgesToTheLeftOf", "link" : "superficial\/NonPosQuad.html#vectorEdgesToTheLeftOf(e:superficial.Edge):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorRightTurns", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorRightTurns", "link" : "superficial\/NonPosQuad.html#vectorRightTurns(e:superficial.Edge):scala.collection.immutable.Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorLeftTurns", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorLeftTurns", "link" : "superficial\/NonPosQuad.html#vectorLeftTurns(e:superficial.Edge):scala.collection.immutable.Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorOrbitFin", "tail" : "(e: Edge, opt: (Edge) => Option[Edge], accum: Vector[Edge], n: Int): Vector[Edge]", "member" : "superficial.TwoComplex.vectorOrbitFin", "link" : "superficial\/NonPosQuad.html#vectorOrbitFin(e:superficial.Edge,opt:superficial.Edge=>Option[superficial.Edge],accum:Vector[superficial.Edge],n:Int):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorOrbit", "tail" : "(e: Edge, opt: (Edge) => Option[Edge], accum: Vector[Edge]): Vector[Edge]", "member" : "superficial.TwoComplex.vectorOrbit", "link" : "superficial\/NonPosQuad.html#vectorOrbit(e:superficial.Edge,opt:superficial.Edge=>Option[superficial.Edge],accum:Vector[superficial.Edge]):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "SwR", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SwR", "link" : "superficial\/NonPosQuad.html#SwR(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SwL", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SwL", "link" : "superficial\/NonPosQuad.html#SwL(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SR", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SR", "link" : "superficial\/NonPosQuad.html#SR(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SL", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SL", "link" : "superficial\/NonPosQuad.html#SL(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "R", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.R", "link" : "superficial\/NonPosQuad.html#R(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "L", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.L", "link" : "superficial\/NonPosQuad.html#L(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "slightRight", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.slightRight", "link" : "superficial\/NonPosQuad.html#slightRight(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "slightLeft", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.slightLeft", "link" : "superficial\/NonPosQuad.html#slightLeft(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "turnRight", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.turnRight", "link" : "superficial\/NonPosQuad.html#turnRight(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "turnLeft", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.turnLeft", "link" : "superficial\/NonPosQuad.html#turnLeft(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "subComplex", "tail" : "(vs: Set[Vertex]): TwoComplex", "member" : "superficial.TwoComplex.subComplex", "link" : "superficial\/NonPosQuad.html#subComplex(vs:Set[superficial.Vertex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addTwoComplexes", "tail" : "(complexes: Set[TwoComplex]): TwoComplex", "member" : "superficial.TwoComplex.addTwoComplexes", "link" : "superficial\/NonPosQuad.html#addTwoComplexes(complexes:Set[superficial.TwoComplex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addFaces", "tail" : "(fcs: Set[Polygon]): TwoComplex", "member" : "superficial.TwoComplex.addFaces", "link" : "superficial\/NonPosQuad.html#addFaces(fcs:Set[superficial.Polygon]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addEdges", "tail" : "(eds: Set[Edge]): TwoComplex", "member" : "superficial.TwoComplex.addEdges", "link" : "superficial\/NonPosQuad.html#addEdges(eds:Set[superficial.Edge]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addVertices", "tail" : "(vs: Set[Vertex]): TwoComplex", "member" : "superficial.TwoComplex.addVertices", "link" : "superficial\/NonPosQuad.html#addVertices(vs:Set[superficial.Vertex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "isSurfaceWithBoundary", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isSurfaceWithBoundary", "link" : "superficial\/NonPosQuad.html#isSurfaceWithBoundary:Boolean", "kind" : "def"}, {"label" : "isClosedSurface", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isClosedSurface", "link" : "superficial\/NonPosQuad.html#isClosedSurface:Boolean", "kind" : "def"}, {"label" : "isEdgeAtBoundary", "tail" : "(e: Edge): Boolean", "member" : "superficial.TwoComplex.isEdgeAtBoundary", "link" : "superficial\/NonPosQuad.html#isEdgeAtBoundary(e:superficial.Edge):Boolean", "kind" : "def"}, {"label" : "edgeOccurences", "tail" : "(e: Edge): Int", "member" : "superficial.TwoComplex.edgeOccurences", "link" : "superficial\/NonPosQuad.html#edgeOccurences(e:superficial.Edge):Int", "kind" : "def"}, {"label" : "transitiveRotations", "tail" : "(v: Vertex): Boolean", "member" : "superficial.TwoComplex.transitiveRotations", "link" : "superficial\/NonPosQuad.html#transitiveRotations(v:superficial.Vertex):Boolean", "kind" : "def"}, {"label" : "degree", "tail" : "(v: Vertex): Int", "member" : "superficial.TwoComplex.degree", "link" : "superficial\/NonPosQuad.html#degree(v:superficial.Vertex):Int", "kind" : "def"}, {"label" : "edgesEndingAt", "tail" : "(v: Vertex): Set[Edge]", "member" : "superficial.TwoComplex.edgesEndingAt", "link" : "superficial\/NonPosQuad.html#edgesEndingAt(v:superficial.Vertex):scala.collection.immutable.Set[superficial.Edge]", "kind" : "def"}, {"label" : "allEdgesToTheRightOf", "tail" : "(e: Edge): Set[Edge]", "member" : "superficial.TwoComplex.allEdgesToTheRightOf", "link" : "superficial\/NonPosQuad.html#allEdgesToTheRightOf(e:superficial.Edge):Set[superficial.Edge]", "kind" : "def"}, {"label" : "allEdgesToTheLeftOf", "tail" : "(e: Edge): Set[Edge]", "member" : "superficial.TwoComplex.allEdgesToTheLeftOf", "link" : "superficial\/NonPosQuad.html#allEdgesToTheLeftOf(e:superficial.Edge):Set[superficial.Edge]", "kind" : "def"}, {"label" : "orbit", "tail" : "(e: Edge, steps: Int, opt: (Edge) => Option[Edge], accum: Set[Edge]): Set[Edge]", "member" : "superficial.TwoComplex.orbit", "link" : "superficial\/NonPosQuad.html#orbit(e:superficial.Edge,steps:Int,opt:superficial.Edge=>Option[superficial.Edge],accum:Set[superficial.Edge]):Set[superficial.Edge]", "kind" : "def"}, {"label" : "rotateRightOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.rotateRightOpt", "link" : "superficial\/NonPosQuad.html#rotateRightOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "rotateLeftOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.rotateLeftOpt", "link" : "superficial\/NonPosQuad.html#rotateLeftOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "predOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.predOpt", "link" : "superficial\/NonPosQuad.html#predOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "succOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.succOpt", "link" : "superficial\/NonPosQuad.html#succOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "isConnectedComplex", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isConnectedComplex", "link" : "superficial\/NonPosQuad.html#isConnectedComplex:Boolean", "kind" : "def"}, {"label" : "connectedComponent", "tail" : "(v: Vertex): Set[Vertex]", "member" : "superficial.TwoComplex.connectedComponent", "link" : "superficial\/NonPosQuad.html#connectedComponent(v:superficial.Vertex):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "maxSetNbr", "tail" : "(s: Set[Vertex]): Set[Vertex]", "member" : "superficial.TwoComplex.maxSetNbr", "link" : "superficial\/NonPosQuad.html#maxSetNbr(s:Set[superficial.Vertex]):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "setNbr", "tail" : "(s: Set[Vertex]): Set[Vertex]", "member" : "superficial.TwoComplex.setNbr", "link" : "superficial\/NonPosQuad.html#setNbr(s:Set[superficial.Vertex]):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "vertexNbr", "tail" : "(v: Vertex): Set[Vertex]", "member" : "superficial.TwoComplex.vertexNbr", "link" : "superficial\/NonPosQuad.html#vertexNbr(v:superficial.Vertex):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "collapseEdge", "tail" : "(e: Edge): (TwoComplex, ((EdgePath) => EdgePath, (EdgePath) => EdgePath))", "member" : "superficial.TwoComplex.collapseEdge", "link" : "superficial\/NonPosQuad.html#collapseEdge(e:superficial.Edge):(superficial.TwoComplex,(superficial.EdgePath=>superficial.EdgePath,superficial.EdgePath=>superficial.EdgePath))", "kind" : "def"}, {"label" : "normalArcs", "tail" : "(): Set[NormalArc]", "member" : "superficial.TwoComplex.normalArcs", "link" : "superficial\/NonPosQuad.html#normalArcs:Set[superficial.NormalArc]", "kind" : "def"}, {"label" : "edgeIndices", "tail" : "(edge: Edge): Set[(Polygon, Index, Boolean)]", "member" : "superficial.TwoComplex.edgeIndices", "link" : "superficial\/NonPosQuad.html#edgeIndices(edge:superficial.Edge):Set[(superficial.Polygon,superficial.Polygon.Index,Boolean)]", "kind" : "def"}, {"label" : "facesWithEdge", "tail" : "(edge: Edge): Set[Polygon]", "member" : "superficial.TwoComplex.facesWithEdge", "link" : "superficial\/NonPosQuad.html#facesWithEdge(edge:superficial.Edge):Set[superficial.Polygon]", "kind" : "def"}, {"label" : "vertexIndex", "tail" : "(v: Vertex): Option[Int]", "member" : "superficial.TwoComplex.vertexIndex", "link" : "superficial\/NonPosQuad.html#vertexIndex(v:superficial.Vertex):Option[Int]", "kind" : "def"}, {"label" : "indexedVertices", "tail" : ": Set[(Vertex, Int)]", "member" : "superficial.TwoComplex.indexedVertices", "link" : "superficial\/NonPosQuad.html#indexedVertices:scala.collection.immutable.Set[(superficial.Vertex,Int)]", "kind" : "lazy val"}, {"label" : "chi", "tail" : ": Int", "member" : "superficial.TwoComplex.chi", "link" : "superficial\/NonPosQuad.html#chi:Int", "kind" : "lazy val"}, {"label" : "edgeIndex", "tail" : "(edge: Edge): Option[(Int, Boolean)]", "member" : "superficial.TwoComplex.edgeIndex", "link" : "superficial\/NonPosQuad.html#edgeIndex(edge:superficial.Edge):Option[(Int,Boolean)]", "kind" : "def"}, {"label" : "halfEdges", "tail" : ": Set[Edge]", "member" : "superficial.TwoComplex.halfEdges", "link" : "superficial\/NonPosQuad.html#halfEdges:Set[superficial.Edge]", "kind" : "lazy val"}, {"label" : "positiveEdges", "tail" : ": Vector[OrientedEdge]", "member" : "superficial.TwoComplex.positiveEdges", "link" : "superficial\/NonPosQuad.html#positiveEdges:Vector[superficial.OrientedEdge]", "kind" : "lazy val"}, {"label" : "checkComplex", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.checkComplex", "link" : "superficial\/NonPosQuad.html#checkComplex:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/NonPosQuad.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/NonPosQuad.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/NonPosQuad.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/NonPosQuad.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/NonPosQuad.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/NonPosQuad.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/NonPosQuad.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/NonPosQuad.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/NonPosQuad.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/NonPosQuad.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/NonPosQuad.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/NonPosQuad.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/NonPosQuad.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/NonPosQuad.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/NonPosQuad.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/NonPosQuad.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/NonPosQuad.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/NonPosQuad.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/NonPosQuad.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "vertices", "tail" : ": Set[Vertex]", "member" : "superficial.TwoComplex.vertices", "link" : "superficial\/NonPosQuad.html#vertices:Set[superficial.Vertex]", "kind" : "abstract val"}, {"label" : "edges", "tail" : ": Set[Edge]", "member" : "superficial.TwoComplex.edges", "link" : "superficial\/NonPosQuad.html#edges:Set[superficial.Edge]", "kind" : "abstract val"}, {"label" : "faces", "tail" : ": Set[Polygon]", "member" : "superficial.TwoComplex.faces", "link" : "superficial\/NonPosQuad.html#faces:Set[superficial.Polygon]", "kind" : "abstract val"}], "shortDescription" : ""}, {"name" : "superficial.NormalArc", "shortDescription" : "A normal arc in a face", "object" : "superficial\/NormalArc$.html", "members_object" : [{"label" : "enumerate", "tail" : "(complex: TwoComplex): Set[NormalArc]", "member" : "superficial.NormalArc.enumerate", "link" : "superficial\/NormalArc$.html#enumerate(complex:superficial.TwoComplex):Set[superficial.NormalArc]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/NormalArc$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/NormalArc$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/NormalArc$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/NormalArc$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/NormalArc$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/NormalArc$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/NormalArc$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/NormalArc$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/NormalArc$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/NormalArc$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/NormalArc$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/NormalArc$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/NormalArc$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/NormalArc$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/NormalArc$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/NormalArc$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/NormalArc$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/NormalArc$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/NormalArc$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "crosses", "tail" : "(that: NormalArc): Boolean", "member" : "superficial.NormalArc.crosses", "link" : "superficial\/NormalArc.html#crosses(that:superficial.NormalArc):Boolean", "kind" : "def"}, {"label" : "vertexLinking", "tail" : "(): Boolean", "member" : "superficial.NormalArc.vertexLinking", "link" : "superficial\/NormalArc.html#vertexLinking:Boolean", "kind" : "def"}, {"label" : "initialEdge", "tail" : ": Edge", "member" : "superficial.NormalArc.initialEdge", "link" : "superficial\/NormalArc.html#initialEdge:superficial.Edge", "kind" : "val"}, {"label" : "terminalEdge", "tail" : ": Edge", "member" : "superficial.NormalArc.terminalEdge", "link" : "superficial\/NormalArc.html#terminalEdge:superficial.Edge", "kind" : "val"}, {"member" : "superficial.NormalArc#<init>", "error" : "unsupported entity"}, {"label" : "face", "tail" : ": Polygon", "member" : "superficial.NormalArc.face", "link" : "superficial\/NormalArc.html#face:superficial.Polygon", "kind" : "val"}, {"label" : "terminal", "tail" : ": Index", "member" : "superficial.NormalArc.terminal", "link" : "superficial\/NormalArc.html#terminal:superficial.Polygon.Index", "kind" : "val"}, {"label" : "initial", "tail" : ": Index", "member" : "superficial.NormalArc.initial", "link" : "superficial\/NormalArc.html#initial:superficial.Polygon.Index", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "superficial\/NormalArc.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/NormalArc.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/NormalArc.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/NormalArc.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/NormalArc.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/NormalArc.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/NormalArc.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/NormalArc.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/NormalArc.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/NormalArc.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/NormalArc.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/NormalArc.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/NormalArc.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/NormalArc.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/NormalArc.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/NormalArc.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/NormalArc.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "superficial\/NormalArc.html", "kind" : "case class"}, {"name" : "superficial.NormalPath", "shortDescription" : "", "object" : "superficial\/NormalPath$.html", "members_object" : [{"label" : "enumerate", "tail" : "(complex: TwoComplex, maxLength: Option[Int], p: (NormalPath) => Boolean): Set[NormalPath]", "member" : "superficial.NormalPath.enumerate", "link" : "superficial\/NormalPath$.html#enumerate(complex:superficial.TwoComplex,maxLength:Option[Int],p:superficial.NormalPath=>Boolean):Set[superficial.NormalPath]", "kind" : "def"}, {"label" : "enumerateRec", "tail" : "(complex: TwoComplex, maxAppendLength: Option[Int], p: (NormalPath) => Boolean, latest: Set[NormalPath], accum: Set[NormalPath]): Set[NormalPath]", "member" : "superficial.NormalPath.enumerateRec", "link" : "superficial\/NormalPath$.html#enumerateRec(complex:superficial.TwoComplex,maxAppendLength:Option[Int],p:superficial.NormalPath=>Boolean,latest:Set[superficial.NormalPath],accum:Set[superficial.NormalPath]):Set[superficial.NormalPath]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/NormalPath$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/NormalPath$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/NormalPath$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/NormalPath$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/NormalPath$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/NormalPath$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/NormalPath$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/NormalPath$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/NormalPath$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/NormalPath$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/NormalPath$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/NormalPath$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/NormalPath$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/NormalPath$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/NormalPath$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/NormalPath$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/NormalPath$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/NormalPath$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/NormalPath$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "geodesicCandidate", "tail" : "(): Boolean", "member" : "superficial.NormalPath.geodesicCandidate", "link" : "superficial\/NormalPath.html#geodesicCandidate:Boolean", "kind" : "def"}, {"label" : "withCross", "tail" : "(): Boolean", "member" : "superficial.NormalPath.withCross", "link" : "superficial\/NormalPath.html#withCross:Boolean", "kind" : "def"}, {"label" : "distinctEdges", "tail" : "(): Vector[(NormalArc, NormalArc)]", "member" : "superficial.NormalPath.distinctEdges", "link" : "superficial\/NormalPath.html#distinctEdges:scala.collection.immutable.Vector[(superficial.NormalArc,superficial.NormalArc)]", "kind" : "def"}, {"label" : "linkingPair", "tail" : "(): Boolean", "member" : "superficial.NormalPath.linkingPair", "link" : "superficial\/NormalPath.html#linkingPair:Boolean", "kind" : "def"}, {"label" : "distinctFaces", "tail" : "(): Boolean", "member" : "superficial.NormalPath.distinctFaces", "link" : "superficial\/NormalPath.html#distinctFaces:Boolean", "kind" : "def"}, {"label" : "initialEdge", "tail" : ": Edge", "member" : "superficial.NormalPath.initialEdge", "link" : "superficial\/NormalPath.html#initialEdge:superficial.Edge", "kind" : "val"}, {"label" : "initialIndex", "tail" : ": Index", "member" : "superficial.NormalPath.initialIndex", "link" : "superficial\/NormalPath.html#initialIndex:superficial.Polygon.Index", "kind" : "val"}, {"label" : "initialFace", "tail" : ": Polygon", "member" : "superficial.NormalPath.initialFace", "link" : "superficial\/NormalPath.html#initialFace:superficial.Polygon", "kind" : "val"}, {"label" : "terminalEdge", "tail" : ": Edge", "member" : "superficial.NormalPath.terminalEdge", "link" : "superficial\/NormalPath.html#terminalEdge:superficial.Edge", "kind" : "val"}, {"label" : "terminalIndex", "tail" : ": Index", "member" : "superficial.NormalPath.terminalIndex", "link" : "superficial\/NormalPath.html#terminalIndex:superficial.Polygon.Index", "kind" : "val"}, {"label" : "terminalFace", "tail" : ": Polygon", "member" : "superficial.NormalPath.terminalFace", "link" : "superficial\/NormalPath.html#terminalFace:superficial.Polygon", "kind" : "val"}, {"label" : "isClosed", "tail" : ": Boolean", "member" : "superficial.NormalPath.isClosed", "link" : "superficial\/NormalPath.html#isClosed:Boolean", "kind" : "val"}, {"label" : ":+", "tail" : "(arc: NormalArc): NormalPath", "member" : "superficial.NormalPath.:+", "link" : "superficial\/NormalPath.html#:+(arc:superficial.NormalArc):superficial.NormalPath", "kind" : "def"}, {"label" : "+:", "tail" : "(arc: NormalArc): NormalPath", "member" : "superficial.NormalPath.+:", "link" : "superficial\/NormalPath.html#+:(arc:superficial.NormalArc):superficial.NormalPath", "kind" : "def"}, {"member" : "superficial.NormalPath#<init>", "error" : "unsupported entity"}, {"label" : "edges", "tail" : ": Vector[NormalArc]", "member" : "superficial.NormalPath.edges", "link" : "superficial\/NormalPath.html#edges:Vector[superficial.NormalArc]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "superficial\/NormalPath.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/NormalPath.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/NormalPath.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/NormalPath.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/NormalPath.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/NormalPath.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/NormalPath.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/NormalPath.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/NormalPath.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/NormalPath.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/NormalPath.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/NormalPath.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/NormalPath.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/NormalPath.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/NormalPath.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/NormalPath.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/NormalPath.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "superficial\/NormalPath.html", "kind" : "case class"}, {"name" : "superficial.OrientableSurface", "shortDescription" : "Contribution of Ankit-Jaiswal and Soumyo Biswas, independent of the rest of the code.", "members_case class" : [{"label" : "isSimple", "tail" : "(xs: Word): Boolean", "member" : "superficial.OrientableSurface.isSimple", "link" : "superficial\/OrientableSurface.html#isSimple(xs:OrientableSurface.this.Word):Boolean", "kind" : "def"}, {"label" : "satisfyEquation", "tail" : "(xs: Word, i: Int, j: Int): Boolean", "member" : "superficial.OrientableSurface.satisfyEquation", "link" : "superficial\/OrientableSurface.html#satisfyEquation(xs:OrientableSurface.this.Word,i:Int,j:Int):Boolean", "kind" : "def"}, {"label" : "windingT", "tail" : "(xs: Word): Int", "member" : "superficial.OrientableSurface.windingT", "link" : "superficial\/OrientableSurface.html#windingT(xs:OrientableSurface.this.Word):Int", "kind" : "def"}, {"label" : "countRespectingR", "tail" : "(xs: Word): Int", "member" : "superficial.OrientableSurface.countRespectingR", "link" : "superficial\/OrientableSurface.html#countRespectingR(xs:OrientableSurface.this.Word):Int", "kind" : "def"}, {"label" : "respectsR", "tail" : "(xs: Word, m: Int): Boolean", "member" : "superficial.OrientableSurface.respectsR", "link" : "superficial\/OrientableSurface.html#respectsR(xs:OrientableSurface.this.Word,m:Int):Boolean", "kind" : "def"}, {"label" : "greekR", "tail" : ": Vector[Product with Generator with Serializable]", "member" : "superficial.OrientableSurface.greekR", "link" : "superficial\/OrientableSurface.html#greekR:scala.collection.immutable.Vector[Productwithsuperficial.Generatorwithjava.io.Serializable]", "kind" : "val"}, {"label" : "vecInvS", "tail" : ": Vector[Inverse]", "member" : "superficial.OrientableSurface.vecInvS", "link" : "superficial\/OrientableSurface.html#vecInvS:scala.collection.immutable.Vector[superficial.Generator.Inverse]", "kind" : "val"}, {"label" : "vecB", "tail" : ": Vector[b]", "member" : "superficial.OrientableSurface.vecB", "link" : "superficial\/OrientableSurface.html#vecB:scala.collection.immutable.Vector[superficial.Generator.b]", "kind" : "val"}, {"label" : "vecInvA", "tail" : ": Vector[Inverse]", "member" : "superficial.OrientableSurface.vecInvA", "link" : "superficial\/OrientableSurface.html#vecInvA:scala.collection.immutable.Vector[superficial.Generator.Inverse]", "kind" : "val"}, {"label" : "subred3", "tail" : "(xs: Word, i: Int): Word", "member" : "superficial.OrientableSurface.subred3", "link" : "superficial\/OrientableSurface.html#subred3(xs:OrientableSurface.this.Word,i:Int):OrientableSurface.this.Word", "kind" : "def"}, {"label" : "red3", "tail" : "(xs: Word): Word", "member" : "superficial.OrientableSurface.red3", "link" : "superficial\/OrientableSurface.html#red3(xs:OrientableSurface.this.Word):OrientableSurface.this.Word", "kind" : "def"}, {"label" : "subred2", "tail" : "(xs: Word, i: Int, n: Int): Word", "member" : "superficial.OrientableSurface.subred2", "link" : "superficial\/OrientableSurface.html#subred2(xs:OrientableSurface.this.Word,i:Int,n:Int):OrientableSurface.this.Word", "kind" : "def"}, {"label" : "invRelInv", "tail" : "(xs: Word): Word", "member" : "superficial.OrientableSurface.invRelInv", "link" : "superficial\/OrientableSurface.html#invRelInv(xs:OrientableSurface.this.Word):OrientableSurface.this.Word", "kind" : "def"}, {"label" : "relInv", "tail" : "(xs: Word): Word", "member" : "superficial.OrientableSurface.relInv", "link" : "superficial\/OrientableSurface.html#relInv(xs:OrientableSurface.this.Word):OrientableSurface.this.Word", "kind" : "def"}, {"label" : "inv", "tail" : "(xs: Word): Word", "member" : "superficial.OrientableSurface.inv", "link" : "superficial\/OrientableSurface.html#inv(xs:OrientableSurface.this.Word):OrientableSurface.this.Word", "kind" : "def"}, {"label" : "red2", "tail" : "(xs: Word): Word", "member" : "superficial.OrientableSurface.red2", "link" : "superficial\/OrientableSurface.html#red2(xs:OrientableSurface.this.Word):OrientableSurface.this.Word", "kind" : "def"}, {"label" : "subred1", "tail" : "(xs: Word): Word", "member" : "superficial.OrientableSurface.subred1", "link" : "superficial\/OrientableSurface.html#subred1(xs:OrientableSurface.this.Word):OrientableSurface.this.Word", "kind" : "def"}, {"label" : "red1", "tail" : "(xs: Word): Word", "member" : "superficial.OrientableSurface.red1", "link" : "superficial\/OrientableSurface.html#red1(xs:OrientableSurface.this.Word):OrientableSurface.this.Word", "kind" : "def"}, {"label" : "reduce", "tail" : "(xs: Word): Word", "member" : "superficial.OrientableSurface.reduce", "link" : "superficial\/OrientableSurface.html#reduce(xs:OrientableSurface.this.Word):OrientableSurface.this.Word", "kind" : "def"}, {"label" : "d", "tail" : ": Int", "member" : "superficial.OrientableSurface.d", "link" : "superficial\/OrientableSurface.html#d:Int", "kind" : "val"}, {"label" : "relationInv", "tail" : ": Word", "member" : "superficial.OrientableSurface.relationInv", "link" : "superficial\/OrientableSurface.html#relationInv:OrientableSurface.this.Word", "kind" : "val"}, {"label" : "relation", "tail" : ": Word", "member" : "superficial.OrientableSurface.relation", "link" : "superficial\/OrientableSurface.html#relation:OrientableSurface.this.Word", "kind" : "val"}, {"label" : "Word", "tail" : "", "member" : "superficial.OrientableSurface.Word", "link" : "superficial\/OrientableSurface.html#Word=Vector[superficial.Generator]", "kind" : "type"}, {"member" : "superficial.OrientableSurface#<init>", "error" : "unsupported entity"}, {"label" : "r", "tail" : ": Int", "member" : "superficial.OrientableSurface.r", "link" : "superficial\/OrientableSurface.html#r:Int", "kind" : "val"}, {"label" : "g", "tail" : ": Int", "member" : "superficial.OrientableSurface.g", "link" : "superficial\/OrientableSurface.html#g:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "superficial\/OrientableSurface.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/OrientableSurface.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/OrientableSurface.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/OrientableSurface.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/OrientableSurface.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/OrientableSurface.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/OrientableSurface.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/OrientableSurface.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/OrientableSurface.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/OrientableSurface.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/OrientableSurface.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/OrientableSurface.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/OrientableSurface.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/OrientableSurface.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/OrientableSurface.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/OrientableSurface.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/OrientableSurface.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "superficial\/OrientableSurface.html", "kind" : "case class"}, {"name" : "superficial.OrientedEdge", "trait" : "superficial\/OrientedEdge.html", "kind" : "trait", "members_trait" : [{"label" : "del", "tail" : "(): FormalSum[Vertex]", "member" : "superficial.Edge.del", "link" : "superficial\/OrientedEdge.html#del:superficial.FormalSum[superficial.Vertex]", "kind" : "def"}, {"label" : "checkFlip", "tail" : "(): Boolean", "member" : "superficial.Edge.checkFlip", "link" : "superficial\/OrientedEdge.html#checkFlip:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : ": Boolean", "member" : "superficial.Edge.isEmpty", "link" : "superficial\/OrientedEdge.html#isEmpty:Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/OrientedEdge.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/OrientedEdge.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/OrientedEdge.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/OrientedEdge.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/OrientedEdge.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/OrientedEdge.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/OrientedEdge.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/OrientedEdge.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/OrientedEdge.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/OrientedEdge.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/OrientedEdge.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/OrientedEdge.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/OrientedEdge.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/OrientedEdge.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/OrientedEdge.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/OrientedEdge.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/OrientedEdge.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/OrientedEdge.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/OrientedEdge.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "flip", "tail" : "(): OrientedEdge", "member" : "superficial.OrientedEdge.flip", "link" : "superficial\/OrientedEdge.html#flip:superficial.OrientedEdge", "kind" : "abstract def"}, {"label" : "positivelyOriented", "tail" : ": Boolean", "member" : "superficial.OrientedEdge.positivelyOriented", "link" : "superficial\/OrientedEdge.html#positivelyOriented:Boolean", "kind" : "abstract val"}, {"label" : "initial", "tail" : "(): Vertex", "member" : "superficial.Edge.initial", "link" : "superficial\/OrientedEdge.html#initial:superficial.Vertex", "kind" : "abstract def"}, {"label" : "terminal", "tail" : "(): Vertex", "member" : "superficial.Edge.terminal", "link" : "superficial\/OrientedEdge.html#terminal:superficial.Vertex", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "superficial.PantsBoundary", "shortDescription" : "label for boundary of pants, may be a curve in the curve systemor a component of the boundary of the surface; if part of the curve systemit will be identified with another PantsBoundary", "members_case class" : [{"label" : "<", "tail" : "(that: PantsBoundary): Boolean", "member" : "superficial.PantsBoundary.<", "link" : "superficial\/PantsBoundary.html#<(that:superficial.PantsBoundary):Boolean", "kind" : "def"}, {"label" : "dropOpt", "tail" : "(n: Index): Option[PantsBoundary]", "member" : "superficial.PantsBoundary.dropOpt", "link" : "superficial\/PantsBoundary.html#dropOpt(n:superficial.Polygon.Index):Option[superficial.PantsBoundary]", "kind" : "def"}, {"label" : "prev", "tail" : "(): PantsBoundary", "member" : "superficial.PantsBoundary.prev", "link" : "superficial\/PantsBoundary.html#prev:superficial.PantsBoundary", "kind" : "def"}, {"member" : "superficial.PantsBoundary#<init>", "error" : "unsupported entity"}, {"label" : "direction", "tail" : ": Z3", "member" : "superficial.PantsBoundary.direction", "link" : "superficial\/PantsBoundary.html#direction:superficial.Z3", "kind" : "val"}, {"label" : "pants", "tail" : ": Index", "member" : "superficial.PantsBoundary.pants", "link" : "superficial\/PantsBoundary.html#pants:superficial.Polygon.Index", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "superficial\/PantsBoundary.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/PantsBoundary.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/PantsBoundary.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/PantsBoundary.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/PantsBoundary.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/PantsBoundary.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/PantsBoundary.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/PantsBoundary.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/PantsBoundary.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/PantsBoundary.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/PantsBoundary.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/PantsBoundary.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/PantsBoundary.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/PantsBoundary.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/PantsBoundary.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/PantsBoundary.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/PantsBoundary.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "superficial\/PantsBoundary.html", "kind" : "case class"}, {"name" : "superficial.PantsHexagon", "shortDescription" : "Hexagon in a pair of pants", "members_case class" : [{"label" : "boundary", "tail" : ": Vector[Edge]", "member" : "superficial.PantsHexagon.boundary", "link" : "superficial\/PantsHexagon.html#boundary:Vector[superficial.Edge]", "kind" : "val"}, {"label" : "vertices", "tail" : ": Set[Vertex]", "member" : "superficial.PantsHexagon.vertices", "link" : "superficial\/PantsHexagon.html#vertices:Set[superficial.Vertex]", "kind" : "val"}, {"member" : "superficial.PantsHexagon#<init>", "error" : "unsupported entity"}, {"label" : "cs", "tail" : ": Set[Curve]", "member" : "superficial.PantsHexagon.cs", "link" : "superficial\/PantsHexagon.html#cs:Set[superficial.Curve]", "kind" : "val"}, {"label" : "top", "tail" : ": Boolean", "member" : "superficial.PantsHexagon.top", "link" : "superficial\/PantsHexagon.html#top:Boolean", "kind" : "val"}, {"label" : "pants", "tail" : ": Index", "member" : "superficial.PantsHexagon.pants", "link" : "superficial\/PantsHexagon.html#pants:superficial.Polygon.Index", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "superficial\/PantsHexagon.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "sides", "tail" : ": Int", "member" : "superficial.Hexagon.sides", "link" : "superficial\/PantsHexagon.html#sides:Int", "kind" : "val"}, {"label" : "boundaryIndex", "tail" : "(e: Edge): Set[(Int, Boolean)]", "member" : "superficial.Polygon.boundaryIndex", "link" : "superficial\/PantsHexagon.html#boundaryIndex(e:superficial.Edge):Set[(Int,Boolean)]", "kind" : "def"}, {"label" : "edges", "tail" : ": Set[Edge]", "member" : "superficial.Polygon.edges", "link" : "superficial\/PantsHexagon.html#edges:Set[superficial.Edge]", "kind" : "lazy val"}, {"label" : "del", "tail" : "(): FormalSum[Edge]", "member" : "superficial.Polygon.del", "link" : "superficial\/PantsHexagon.html#del:superficial.FormalSum[superficial.Edge]", "kind" : "def"}, {"label" : "checkPoly", "tail" : "(): Boolean", "member" : "superficial.Polygon.checkPoly", "link" : "superficial\/PantsHexagon.html#checkPoly:Boolean", "kind" : "def"}, {"label" : "checkBoundary", "tail" : "(): Boolean", "member" : "superficial.Polygon.checkBoundary", "link" : "superficial\/PantsHexagon.html#checkBoundary:Boolean", "kind" : "def"}, {"label" : "basePoint", "tail" : ": Vertex", "member" : "superficial.Polygon.basePoint", "link" : "superficial\/PantsHexagon.html#basePoint:superficial.Vertex", "kind" : "lazy val"}, {"label" : "indices", "tail" : ": Vector[Index]", "member" : "superficial.Polygon.indices", "link" : "superficial\/PantsHexagon.html#indices:Vector[superficial.Polygon.Index]", "kind" : "lazy val"}, {"label" : "faces", "tail" : ": Set[Polygon]", "member" : "superficial.Polygon.faces", "link" : "superficial\/PantsHexagon.html#faces:scala.collection.immutable.Set[superficial.Polygon]", "kind" : "lazy val"}, {"label" : "turnEdge", "tail" : "(e: Edge, t: Int): Edge", "member" : "superficial.TwoComplex.turnEdge", "link" : "superficial\/PantsHexagon.html#turnEdge(e:superficial.Edge,t:Int):superficial.Edge", "kind" : "def"}, {"label" : "angleBetween", "tail" : "(e1: Edge, e2: Edge): Int", "member" : "superficial.TwoComplex.angleBetween", "link" : "superficial\/PantsHexagon.html#angleBetween(e1:superficial.Edge,e2:superficial.Edge):Int", "kind" : "def"}, {"label" : "turnIndex", "tail" : "(e1: Edge, e2: Edge): Int", "member" : "superficial.TwoComplex.turnIndex", "link" : "superficial\/PantsHexagon.html#turnIndex(e1:superficial.Edge,e2:superficial.Edge):Int", "kind" : "def"}, {"label" : "vectorEdgesToTheRightOf", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorEdgesToTheRightOf", "link" : "superficial\/PantsHexagon.html#vectorEdgesToTheRightOf(e:superficial.Edge):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorEdgesToTheLeftOf", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorEdgesToTheLeftOf", "link" : "superficial\/PantsHexagon.html#vectorEdgesToTheLeftOf(e:superficial.Edge):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorRightTurns", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorRightTurns", "link" : "superficial\/PantsHexagon.html#vectorRightTurns(e:superficial.Edge):scala.collection.immutable.Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorLeftTurns", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorLeftTurns", "link" : "superficial\/PantsHexagon.html#vectorLeftTurns(e:superficial.Edge):scala.collection.immutable.Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorOrbitFin", "tail" : "(e: Edge, opt: (Edge) => Option[Edge], accum: Vector[Edge], n: Int): Vector[Edge]", "member" : "superficial.TwoComplex.vectorOrbitFin", "link" : "superficial\/PantsHexagon.html#vectorOrbitFin(e:superficial.Edge,opt:superficial.Edge=>Option[superficial.Edge],accum:Vector[superficial.Edge],n:Int):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorOrbit", "tail" : "(e: Edge, opt: (Edge) => Option[Edge], accum: Vector[Edge]): Vector[Edge]", "member" : "superficial.TwoComplex.vectorOrbit", "link" : "superficial\/PantsHexagon.html#vectorOrbit(e:superficial.Edge,opt:superficial.Edge=>Option[superficial.Edge],accum:Vector[superficial.Edge]):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "SwR", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SwR", "link" : "superficial\/PantsHexagon.html#SwR(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SwL", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SwL", "link" : "superficial\/PantsHexagon.html#SwL(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SR", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SR", "link" : "superficial\/PantsHexagon.html#SR(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SL", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SL", "link" : "superficial\/PantsHexagon.html#SL(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "R", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.R", "link" : "superficial\/PantsHexagon.html#R(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "L", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.L", "link" : "superficial\/PantsHexagon.html#L(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "slightRight", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.slightRight", "link" : "superficial\/PantsHexagon.html#slightRight(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "slightLeft", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.slightLeft", "link" : "superficial\/PantsHexagon.html#slightLeft(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "turnRight", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.turnRight", "link" : "superficial\/PantsHexagon.html#turnRight(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "turnLeft", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.turnLeft", "link" : "superficial\/PantsHexagon.html#turnLeft(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "subComplex", "tail" : "(vs: Set[Vertex]): TwoComplex", "member" : "superficial.TwoComplex.subComplex", "link" : "superficial\/PantsHexagon.html#subComplex(vs:Set[superficial.Vertex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addTwoComplexes", "tail" : "(complexes: Set[TwoComplex]): TwoComplex", "member" : "superficial.TwoComplex.addTwoComplexes", "link" : "superficial\/PantsHexagon.html#addTwoComplexes(complexes:Set[superficial.TwoComplex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addFaces", "tail" : "(fcs: Set[Polygon]): TwoComplex", "member" : "superficial.TwoComplex.addFaces", "link" : "superficial\/PantsHexagon.html#addFaces(fcs:Set[superficial.Polygon]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addEdges", "tail" : "(eds: Set[Edge]): TwoComplex", "member" : "superficial.TwoComplex.addEdges", "link" : "superficial\/PantsHexagon.html#addEdges(eds:Set[superficial.Edge]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addVertices", "tail" : "(vs: Set[Vertex]): TwoComplex", "member" : "superficial.TwoComplex.addVertices", "link" : "superficial\/PantsHexagon.html#addVertices(vs:Set[superficial.Vertex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "isSurfaceWithBoundary", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isSurfaceWithBoundary", "link" : "superficial\/PantsHexagon.html#isSurfaceWithBoundary:Boolean", "kind" : "def"}, {"label" : "isClosedSurface", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isClosedSurface", "link" : "superficial\/PantsHexagon.html#isClosedSurface:Boolean", "kind" : "def"}, {"label" : "isEdgeAtBoundary", "tail" : "(e: Edge): Boolean", "member" : "superficial.TwoComplex.isEdgeAtBoundary", "link" : "superficial\/PantsHexagon.html#isEdgeAtBoundary(e:superficial.Edge):Boolean", "kind" : "def"}, {"label" : "edgeOccurences", "tail" : "(e: Edge): Int", "member" : "superficial.TwoComplex.edgeOccurences", "link" : "superficial\/PantsHexagon.html#edgeOccurences(e:superficial.Edge):Int", "kind" : "def"}, {"label" : "transitiveRotations", "tail" : "(v: Vertex): Boolean", "member" : "superficial.TwoComplex.transitiveRotations", "link" : "superficial\/PantsHexagon.html#transitiveRotations(v:superficial.Vertex):Boolean", "kind" : "def"}, {"label" : "degree", "tail" : "(v: Vertex): Int", "member" : "superficial.TwoComplex.degree", "link" : "superficial\/PantsHexagon.html#degree(v:superficial.Vertex):Int", "kind" : "def"}, {"label" : "edgesEndingAt", "tail" : "(v: Vertex): Set[Edge]", "member" : "superficial.TwoComplex.edgesEndingAt", "link" : "superficial\/PantsHexagon.html#edgesEndingAt(v:superficial.Vertex):scala.collection.immutable.Set[superficial.Edge]", "kind" : "def"}, {"label" : "allEdgesToTheRightOf", "tail" : "(e: Edge): Set[Edge]", "member" : "superficial.TwoComplex.allEdgesToTheRightOf", "link" : "superficial\/PantsHexagon.html#allEdgesToTheRightOf(e:superficial.Edge):Set[superficial.Edge]", "kind" : "def"}, {"label" : "allEdgesToTheLeftOf", "tail" : "(e: Edge): Set[Edge]", "member" : "superficial.TwoComplex.allEdgesToTheLeftOf", "link" : "superficial\/PantsHexagon.html#allEdgesToTheLeftOf(e:superficial.Edge):Set[superficial.Edge]", "kind" : "def"}, {"label" : "orbit", "tail" : "(e: Edge, steps: Int, opt: (Edge) => Option[Edge], accum: Set[Edge]): Set[Edge]", "member" : "superficial.TwoComplex.orbit", "link" : "superficial\/PantsHexagon.html#orbit(e:superficial.Edge,steps:Int,opt:superficial.Edge=>Option[superficial.Edge],accum:Set[superficial.Edge]):Set[superficial.Edge]", "kind" : "def"}, {"label" : "rotateRightOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.rotateRightOpt", "link" : "superficial\/PantsHexagon.html#rotateRightOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "rotateLeftOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.rotateLeftOpt", "link" : "superficial\/PantsHexagon.html#rotateLeftOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "predOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.predOpt", "link" : "superficial\/PantsHexagon.html#predOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "succOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.succOpt", "link" : "superficial\/PantsHexagon.html#succOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "isConnectedComplex", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isConnectedComplex", "link" : "superficial\/PantsHexagon.html#isConnectedComplex:Boolean", "kind" : "def"}, {"label" : "connectedComponent", "tail" : "(v: Vertex): Set[Vertex]", "member" : "superficial.TwoComplex.connectedComponent", "link" : "superficial\/PantsHexagon.html#connectedComponent(v:superficial.Vertex):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "maxSetNbr", "tail" : "(s: Set[Vertex]): Set[Vertex]", "member" : "superficial.TwoComplex.maxSetNbr", "link" : "superficial\/PantsHexagon.html#maxSetNbr(s:Set[superficial.Vertex]):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "setNbr", "tail" : "(s: Set[Vertex]): Set[Vertex]", "member" : "superficial.TwoComplex.setNbr", "link" : "superficial\/PantsHexagon.html#setNbr(s:Set[superficial.Vertex]):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "vertexNbr", "tail" : "(v: Vertex): Set[Vertex]", "member" : "superficial.TwoComplex.vertexNbr", "link" : "superficial\/PantsHexagon.html#vertexNbr(v:superficial.Vertex):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "collapseEdge", "tail" : "(e: Edge): (TwoComplex, ((EdgePath) => EdgePath, (EdgePath) => EdgePath))", "member" : "superficial.TwoComplex.collapseEdge", "link" : "superficial\/PantsHexagon.html#collapseEdge(e:superficial.Edge):(superficial.TwoComplex,(superficial.EdgePath=>superficial.EdgePath,superficial.EdgePath=>superficial.EdgePath))", "kind" : "def"}, {"label" : "normalArcs", "tail" : "(): Set[NormalArc]", "member" : "superficial.TwoComplex.normalArcs", "link" : "superficial\/PantsHexagon.html#normalArcs:Set[superficial.NormalArc]", "kind" : "def"}, {"label" : "edgeIndices", "tail" : "(edge: Edge): Set[(Polygon, Index, Boolean)]", "member" : "superficial.TwoComplex.edgeIndices", "link" : "superficial\/PantsHexagon.html#edgeIndices(edge:superficial.Edge):Set[(superficial.Polygon,superficial.Polygon.Index,Boolean)]", "kind" : "def"}, {"label" : "facesWithEdge", "tail" : "(edge: Edge): Set[Polygon]", "member" : "superficial.TwoComplex.facesWithEdge", "link" : "superficial\/PantsHexagon.html#facesWithEdge(edge:superficial.Edge):Set[superficial.Polygon]", "kind" : "def"}, {"label" : "vertexIndex", "tail" : "(v: Vertex): Option[Int]", "member" : "superficial.TwoComplex.vertexIndex", "link" : "superficial\/PantsHexagon.html#vertexIndex(v:superficial.Vertex):Option[Int]", "kind" : "def"}, {"label" : "indexedVertices", "tail" : ": Set[(Vertex, Int)]", "member" : "superficial.TwoComplex.indexedVertices", "link" : "superficial\/PantsHexagon.html#indexedVertices:scala.collection.immutable.Set[(superficial.Vertex,Int)]", "kind" : "lazy val"}, {"label" : "chi", "tail" : ": Int", "member" : "superficial.TwoComplex.chi", "link" : "superficial\/PantsHexagon.html#chi:Int", "kind" : "lazy val"}, {"label" : "edgeIndex", "tail" : "(edge: Edge): Option[(Int, Boolean)]", "member" : "superficial.TwoComplex.edgeIndex", "link" : "superficial\/PantsHexagon.html#edgeIndex(edge:superficial.Edge):Option[(Int,Boolean)]", "kind" : "def"}, {"label" : "halfEdges", "tail" : ": Set[Edge]", "member" : "superficial.TwoComplex.halfEdges", "link" : "superficial\/PantsHexagon.html#halfEdges:Set[superficial.Edge]", "kind" : "lazy val"}, {"label" : "positiveEdges", "tail" : ": Vector[OrientedEdge]", "member" : "superficial.TwoComplex.positiveEdges", "link" : "superficial\/PantsHexagon.html#positiveEdges:Vector[superficial.OrientedEdge]", "kind" : "lazy val"}, {"label" : "checkComplex", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.checkComplex", "link" : "superficial\/PantsHexagon.html#checkComplex:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/PantsHexagon.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/PantsHexagon.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/PantsHexagon.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/PantsHexagon.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/PantsHexagon.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/PantsHexagon.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/PantsHexagon.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/PantsHexagon.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/PantsHexagon.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/PantsHexagon.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/PantsHexagon.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/PantsHexagon.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/PantsHexagon.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/PantsHexagon.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/PantsHexagon.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/PantsHexagon.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "superficial\/PantsHexagon.html", "kind" : "case class"}, {"name" : "superficial.PantsSeam", "shortDescription" : "An edge that is the seam of a pair of pants", "members_case class" : [{"label" : "flip", "tail" : ": PantsSeam", "member" : "superficial.PantsSeam.flip", "link" : "superficial\/PantsSeam.html#flip:superficial.PantsSeam", "kind" : "lazy val"}, {"member" : "superficial.PantsSeam#<init>", "error" : "unsupported entity"}, {"label" : "positivelyOriented", "tail" : ": Boolean", "member" : "superficial.PantsSeam.positivelyOriented", "link" : "superficial\/PantsSeam.html#positivelyOriented:Boolean", "kind" : "val"}, {"label" : "terminal", "tail" : ": Vertex", "member" : "superficial.PantsSeam.terminal", "link" : "superficial\/PantsSeam.html#terminal:superficial.Vertex", "kind" : "val"}, {"label" : "initial", "tail" : ": Vertex", "member" : "superficial.PantsSeam.initial", "link" : "superficial\/PantsSeam.html#initial:superficial.Vertex", "kind" : "val"}, {"label" : "pants", "tail" : ": Index", "member" : "superficial.PantsSeam.pants", "link" : "superficial\/PantsSeam.html#pants:superficial.Polygon.Index", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "superficial\/PantsSeam.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "del", "tail" : "(): FormalSum[Vertex]", "member" : "superficial.Edge.del", "link" : "superficial\/PantsSeam.html#del:superficial.FormalSum[superficial.Vertex]", "kind" : "def"}, {"label" : "checkFlip", "tail" : "(): Boolean", "member" : "superficial.Edge.checkFlip", "link" : "superficial\/PantsSeam.html#checkFlip:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : ": Boolean", "member" : "superficial.Edge.isEmpty", "link" : "superficial\/PantsSeam.html#isEmpty:Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/PantsSeam.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/PantsSeam.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/PantsSeam.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/PantsSeam.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/PantsSeam.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/PantsSeam.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/PantsSeam.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/PantsSeam.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/PantsSeam.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/PantsSeam.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/PantsSeam.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/PantsSeam.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/PantsSeam.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/PantsSeam.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/PantsSeam.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/PantsSeam.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "superficial\/PantsSeam.html", "kind" : "case class"}, {"name" : "superficial.PantsSurface", "shortDescription" : "Surface with a pants decomposition (compact, possibly with boundary and possibly disconnected)", "object" : "superficial\/PantsSurface$.html", "members_object" : [{"label" : "fillSeams", "tail" : "(pants: Index, segments: Vector[Vector[Edge]]): Vector[Edge]", "member" : "superficial.PantsSurface.fillSeams", "link" : "superficial\/PantsSurface$.html#fillSeams(pants:superficial.Polygon.Index,segments:Vector[Vector[superficial.Edge]]):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "fillSeamsRec", "tail" : "(pants: Index, segments: Vector[Vector[Edge]], gapLess: Vector[Edge]): Vector[Edge]", "member" : "superficial.PantsSurface.fillSeamsRec", "link" : "superficial\/PantsSurface$.html#fillSeamsRec(pants:superficial.Polygon.Index,segments:Vector[Vector[superficial.Edge]],gapLess:Vector[superficial.Edge]):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "skewVertices", "tail" : "(pb: PantsBoundary, top: Boolean, cs: Set[SkewCurve]): Set[Vertex]", "member" : "superficial.PantsSurface.skewVertices", "link" : "superficial\/PantsSurface$.html#skewVertices(pb:superficial.PantsBoundary,top:Boolean,cs:Set[superficial.SkewCurve]):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "skewEdges", "tail" : "(pb: PantsBoundary, top: Boolean, positivelyOriented: Boolean, cs: Set[SkewCurve]): Vector[Edge]", "member" : "superficial.PantsSurface.skewEdges", "link" : "superficial\/PantsSurface$.html#skewEdges(pb:superficial.PantsBoundary,top:Boolean,positivelyOriented:Boolean,cs:Set[superficial.SkewCurve]):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "seam", "tail" : "(pants: Index, direction: Z3, cs: Set[Curve], top: Boolean): PantsSeam", "member" : "superficial.PantsSurface.seam", "link" : "superficial\/PantsSurface$.html#seam(pants:superficial.Polygon.Index,direction:superficial.Z3,cs:Set[superficial.Curve],top:Boolean):superficial.PantsSeam", "kind" : "def"}, {"label" : "vertex", "tail" : "(pb: PantsBoundary, first: Boolean, cs: Set[Curve]): Vertex", "member" : "superficial.PantsSurface.vertex", "link" : "superficial\/PantsSurface$.html#vertex(pb:superficial.PantsBoundary,first:Boolean,cs:Set[superficial.Curve]):superficial.Vertex", "kind" : "def"}, {"label" : "edge", "tail" : "(pb: PantsBoundary, top: Boolean, positivelyOriented: Boolean, cs: Set[Curve]): Edge", "member" : "superficial.PantsSurface.edge", "link" : "superficial\/PantsSurface$.html#edge(pb:superficial.PantsBoundary,top:Boolean,positivelyOriented:Boolean,cs:Set[superficial.Curve]):superficial.Edge", "kind" : "def"}, {"label" : "getSkewCurve", "tail" : "(pb: PantsBoundary, cs: Set[SkewCurve]): Option[(SkewCurve, Boolean)]", "member" : "superficial.PantsSurface.getSkewCurve", "link" : "superficial\/PantsSurface$.html#getSkewCurve(pb:superficial.PantsBoundary,cs:Set[superficial.SkewCurve]):Option[(superficial.SkewCurve,Boolean)]", "kind" : "def"}, {"label" : "getCurve", "tail" : "(pb: PantsBoundary, cs: Set[Curve]): Option[(Curve, Boolean)]", "member" : "superficial.PantsSurface.getCurve", "link" : "superficial\/PantsSurface$.html#getCurve(pb:superficial.PantsBoundary,cs:Set[superficial.Curve]):Option[(superficial.Curve,Boolean)]", "kind" : "def"}, {"label" : "allClosed", "tail" : ": LazyList[Vector[PantsSurface]]", "member" : "superficial.PantsSurface.allClosed", "link" : "superficial\/PantsSurface$.html#allClosed:LazyList[Vector[superficial.PantsSurface]]", "kind" : "val"}, {"label" : "getAll", "tail" : "(n: Int): Vector[PantsSurface]", "member" : "superficial.PantsSurface.getAll", "link" : "superficial\/PantsSurface$.html#getAll(n:Int):Vector[superficial.PantsSurface]", "kind" : "def"}, {"label" : "all", "tail" : ": LazyList[Vector[PantsSurface]]", "member" : "superficial.PantsSurface.all", "link" : "superficial\/PantsSurface$.html#all:LazyList[Vector[superficial.PantsSurface]]", "kind" : "val"}, {"label" : "distinct", "tail" : "(surfaces: Vector[PantsSurface]): Vector[PantsSurface]", "member" : "superficial.PantsSurface.distinct", "link" : "superficial\/PantsSurface$.html#distinct(surfaces:Vector[superficial.PantsSurface]):Vector[superficial.PantsSurface]", "kind" : "def"}, {"label" : "isomorphic", "tail" : "(first: PantsSurface, second: PantsSurface): Boolean", "member" : "superficial.PantsSurface.isomorphic", "link" : "superficial\/PantsSurface$.html#isomorphic(first:superficial.PantsSurface,second:superficial.PantsSurface):Boolean", "kind" : "def"}, {"label" : "margulis", "tail" : ": Double", "member" : "superficial.PantsSurface.margulis", "link" : "superficial\/PantsSurface$.html#margulis:Double", "kind" : "val"}, {"label" : "bers", "tail" : "(g: Int): Int", "member" : "superficial.PantsSurface.bers", "link" : "superficial\/PantsSurface$.html#bers(g:Int):Int", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/PantsSurface$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/PantsSurface$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/PantsSurface$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/PantsSurface$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/PantsSurface$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/PantsSurface$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/PantsSurface$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/PantsSurface$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/PantsSurface$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/PantsSurface$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/PantsSurface$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/PantsSurface$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/PantsSurface$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/PantsSurface$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/PantsSurface$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/PantsSurface$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/PantsSurface$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/PantsSurface$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/PantsSurface$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "allGlued", "tail" : "(): Set[PantsSurface]", "member" : "superficial.PantsSurface.allGlued", "link" : "superficial\/PantsSurface.html#allGlued:Set[superficial.PantsSurface]", "kind" : "def"}, {"label" : "allGlue3", "tail" : "(): Set[PantsSurface]", "member" : "superficial.PantsSurface.allGlue3", "link" : "superficial\/PantsSurface.html#allGlue3:Set[superficial.PantsSurface]", "kind" : "def"}, {"label" : "allGlue2", "tail" : "(): Set[PantsSurface]", "member" : "superficial.PantsSurface.allGlue2", "link" : "superficial\/PantsSurface.html#allGlue2:Set[superficial.PantsSurface]", "kind" : "def"}, {"label" : "allGlueLoop", "tail" : "(): Set[PantsSurface]", "member" : "superficial.PantsSurface.allGlueLoop", "link" : "superficial\/PantsSurface.html#allGlueLoop:Set[superficial.PantsSurface]", "kind" : "def"}, {"label" : "allGlue1", "tail" : "(): Set[PantsSurface]", "member" : "superficial.PantsSurface.allGlue1", "link" : "superficial\/PantsSurface.html#allGlue1:Set[superficial.PantsSurface]", "kind" : "def"}, {"label" : "glueLoop", "tail" : "(pb: PantsBoundary): PantsSurface", "member" : "superficial.PantsSurface.glueLoop", "link" : "superficial\/PantsSurface.html#glueLoop(pb:superficial.PantsBoundary):superficial.PantsSurface", "kind" : "def"}, {"label" : "glue3", "tail" : "(pb1: PantsBoundary, pb2: PantsBoundary, pb3: PantsBoundary): PantsSurface", "member" : "superficial.PantsSurface.glue3", "link" : "superficial\/PantsSurface.html#glue3(pb1:superficial.PantsBoundary,pb2:superficial.PantsBoundary,pb3:superficial.PantsBoundary):superficial.PantsSurface", "kind" : "def"}, {"label" : "glue2", "tail" : "(pb1: PantsBoundary, pb2: PantsBoundary): PantsSurface", "member" : "superficial.PantsSurface.glue2", "link" : "superficial\/PantsSurface.html#glue2(pb1:superficial.PantsBoundary,pb2:superficial.PantsBoundary):superficial.PantsSurface", "kind" : "def"}, {"label" : "glue1", "tail" : "(pb: PantsBoundary): PantsSurface", "member" : "superficial.PantsSurface.glue1", "link" : "superficial\/PantsSurface.html#glue1(pb:superficial.PantsBoundary):superficial.PantsSurface", "kind" : "def"}, {"label" : "peripheral", "tail" : ": Set[Index]", "member" : "superficial.PantsSurface.peripheral", "link" : "superficial\/PantsSurface.html#peripheral:Set[superficial.Polygon.Index]", "kind" : "lazy val"}, {"label" : "isConnected", "tail" : ": Boolean", "member" : "superficial.PantsSurface.isConnected", "link" : "superficial\/PantsSurface.html#isConnected:Boolean", "kind" : "lazy val"}, {"label" : "component", "tail" : "(pantSet: Set[Index]): Set[Index]", "member" : "superficial.PantsSurface.component", "link" : "superficial\/PantsSurface.html#component(pantSet:Set[superficial.Polygon.Index]):Set[superficial.Polygon.Index]", "kind" : "final def"}, {"label" : "neighbourhood", "tail" : "(pantSet: Set[Index]): Set[Index]", "member" : "superficial.PantsSurface.neighbourhood", "link" : "superficial\/PantsSurface.html#neighbourhood(pantSet:Set[superficial.Polygon.Index]):Set[superficial.Polygon.Index]", "kind" : "def"}, {"label" : "drop", "tail" : "(n: Index): PantsSurface", "member" : "superficial.PantsSurface.drop", "link" : "superficial\/PantsSurface.html#drop(n:superficial.Polygon.Index):superficial.PantsSurface", "kind" : "def"}, {"label" : "innerCurves", "tail" : "(index: Index): Int", "member" : "superficial.PantsSurface.innerCurves", "link" : "superficial\/PantsSurface.html#innerCurves(index:superficial.Polygon.Index):Int", "kind" : "def"}, {"label" : "isClosed", "tail" : "(): Boolean", "member" : "superficial.PantsSurface.isClosed", "link" : "superficial\/PantsSurface.html#isClosed:Boolean", "kind" : "def"}, {"label" : "boundaryIndices", "tail" : ": Set[Index]", "member" : "superficial.PantsSurface.boundaryIndices", "link" : "superficial\/PantsSurface.html#boundaryIndices:Set[superficial.Polygon.Index]", "kind" : "val"}, {"label" : "loopIndices", "tail" : ": Set[Index]", "member" : "superficial.PantsSurface.loopIndices", "link" : "superficial\/PantsSurface.html#loopIndices:Set[superficial.Polygon.Index]", "kind" : "val"}, {"label" : "boundaryCurves", "tail" : ": Set[PantsBoundary]", "member" : "superficial.PantsSurface.boundaryCurves", "link" : "superficial\/PantsSurface.html#boundaryCurves:Set[superficial.PantsBoundary]", "kind" : "val"}, {"label" : "csSupp", "tail" : ": Set[PantsBoundary]", "member" : "superficial.PantsSurface.csSupp", "link" : "superficial\/PantsSurface.html#csSupp:Set[superficial.PantsBoundary]", "kind" : "val"}, {"label" : "allCurves", "tail" : ": Set[PantsBoundary]", "member" : "superficial.PantsSurface.allCurves", "link" : "superficial\/PantsSurface.html#allCurves:Set[superficial.PantsBoundary]", "kind" : "val"}, {"label" : "fundamentalClass", "tail" : ": FormalSum[Polygon]", "member" : "superficial.PantsSurface.fundamentalClass", "link" : "superficial\/PantsSurface.html#fundamentalClass:superficial.FormalSum[superficial.Polygon]", "kind" : "val"}, {"label" : "topFaces", "tail" : ": Vector[PantsHexagon]", "member" : "superficial.PantsSurface.topFaces", "link" : "superficial\/PantsSurface.html#topFaces:Vector[superficial.PantsHexagon]", "kind" : "val"}, {"label" : "faces", "tail" : ": Set[Polygon]", "member" : "superficial.PantsSurface.faces", "link" : "superficial\/PantsSurface.html#faces:Set[superficial.Polygon]", "kind" : "val"}, {"label" : "indices", "tail" : ": Vector[Index]", "member" : "superficial.PantsSurface.indices", "link" : "superficial\/PantsSurface.html#indices:Vector[superficial.Polygon.Index]", "kind" : "val"}, {"member" : "superficial.PantsSurface#<init>", "error" : "unsupported entity"}, {"label" : "cs", "tail" : ": Set[Curve]", "member" : "superficial.PantsSurface.cs", "link" : "superficial\/PantsSurface.html#cs:Set[superficial.Curve]", "kind" : "val"}, {"label" : "numPants", "tail" : ": Index", "member" : "superficial.PantsSurface.numPants", "link" : "superficial\/PantsSurface.html#numPants:superficial.Polygon.Index", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "superficial\/PantsSurface.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "vertices", "tail" : ": Set[Vertex]", "member" : "superficial.PureTwoComplex.vertices", "link" : "superficial\/PantsSurface.html#vertices:Set[superficial.Vertex]", "kind" : "lazy val"}, {"label" : "edges", "tail" : ": Set[Edge]", "member" : "superficial.PureTwoComplex.edges", "link" : "superficial\/PantsSurface.html#edges:Set[superficial.Edge]", "kind" : "lazy val"}, {"label" : "turnEdge", "tail" : "(e: Edge, t: Int): Edge", "member" : "superficial.TwoComplex.turnEdge", "link" : "superficial\/PantsSurface.html#turnEdge(e:superficial.Edge,t:Int):superficial.Edge", "kind" : "def"}, {"label" : "angleBetween", "tail" : "(e1: Edge, e2: Edge): Int", "member" : "superficial.TwoComplex.angleBetween", "link" : "superficial\/PantsSurface.html#angleBetween(e1:superficial.Edge,e2:superficial.Edge):Int", "kind" : "def"}, {"label" : "turnIndex", "tail" : "(e1: Edge, e2: Edge): Int", "member" : "superficial.TwoComplex.turnIndex", "link" : "superficial\/PantsSurface.html#turnIndex(e1:superficial.Edge,e2:superficial.Edge):Int", "kind" : "def"}, {"label" : "vectorEdgesToTheRightOf", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorEdgesToTheRightOf", "link" : "superficial\/PantsSurface.html#vectorEdgesToTheRightOf(e:superficial.Edge):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorEdgesToTheLeftOf", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorEdgesToTheLeftOf", "link" : "superficial\/PantsSurface.html#vectorEdgesToTheLeftOf(e:superficial.Edge):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorRightTurns", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorRightTurns", "link" : "superficial\/PantsSurface.html#vectorRightTurns(e:superficial.Edge):scala.collection.immutable.Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorLeftTurns", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorLeftTurns", "link" : "superficial\/PantsSurface.html#vectorLeftTurns(e:superficial.Edge):scala.collection.immutable.Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorOrbitFin", "tail" : "(e: Edge, opt: (Edge) => Option[Edge], accum: Vector[Edge], n: Int): Vector[Edge]", "member" : "superficial.TwoComplex.vectorOrbitFin", "link" : "superficial\/PantsSurface.html#vectorOrbitFin(e:superficial.Edge,opt:superficial.Edge=>Option[superficial.Edge],accum:Vector[superficial.Edge],n:Int):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorOrbit", "tail" : "(e: Edge, opt: (Edge) => Option[Edge], accum: Vector[Edge]): Vector[Edge]", "member" : "superficial.TwoComplex.vectorOrbit", "link" : "superficial\/PantsSurface.html#vectorOrbit(e:superficial.Edge,opt:superficial.Edge=>Option[superficial.Edge],accum:Vector[superficial.Edge]):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "SwR", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SwR", "link" : "superficial\/PantsSurface.html#SwR(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SwL", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SwL", "link" : "superficial\/PantsSurface.html#SwL(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SR", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SR", "link" : "superficial\/PantsSurface.html#SR(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SL", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SL", "link" : "superficial\/PantsSurface.html#SL(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "R", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.R", "link" : "superficial\/PantsSurface.html#R(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "L", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.L", "link" : "superficial\/PantsSurface.html#L(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "slightRight", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.slightRight", "link" : "superficial\/PantsSurface.html#slightRight(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "slightLeft", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.slightLeft", "link" : "superficial\/PantsSurface.html#slightLeft(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "turnRight", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.turnRight", "link" : "superficial\/PantsSurface.html#turnRight(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "turnLeft", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.turnLeft", "link" : "superficial\/PantsSurface.html#turnLeft(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "subComplex", "tail" : "(vs: Set[Vertex]): TwoComplex", "member" : "superficial.TwoComplex.subComplex", "link" : "superficial\/PantsSurface.html#subComplex(vs:Set[superficial.Vertex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addTwoComplexes", "tail" : "(complexes: Set[TwoComplex]): TwoComplex", "member" : "superficial.TwoComplex.addTwoComplexes", "link" : "superficial\/PantsSurface.html#addTwoComplexes(complexes:Set[superficial.TwoComplex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addFaces", "tail" : "(fcs: Set[Polygon]): TwoComplex", "member" : "superficial.TwoComplex.addFaces", "link" : "superficial\/PantsSurface.html#addFaces(fcs:Set[superficial.Polygon]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addEdges", "tail" : "(eds: Set[Edge]): TwoComplex", "member" : "superficial.TwoComplex.addEdges", "link" : "superficial\/PantsSurface.html#addEdges(eds:Set[superficial.Edge]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addVertices", "tail" : "(vs: Set[Vertex]): TwoComplex", "member" : "superficial.TwoComplex.addVertices", "link" : "superficial\/PantsSurface.html#addVertices(vs:Set[superficial.Vertex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "isSurfaceWithBoundary", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isSurfaceWithBoundary", "link" : "superficial\/PantsSurface.html#isSurfaceWithBoundary:Boolean", "kind" : "def"}, {"label" : "isClosedSurface", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isClosedSurface", "link" : "superficial\/PantsSurface.html#isClosedSurface:Boolean", "kind" : "def"}, {"label" : "isEdgeAtBoundary", "tail" : "(e: Edge): Boolean", "member" : "superficial.TwoComplex.isEdgeAtBoundary", "link" : "superficial\/PantsSurface.html#isEdgeAtBoundary(e:superficial.Edge):Boolean", "kind" : "def"}, {"label" : "edgeOccurences", "tail" : "(e: Edge): Int", "member" : "superficial.TwoComplex.edgeOccurences", "link" : "superficial\/PantsSurface.html#edgeOccurences(e:superficial.Edge):Int", "kind" : "def"}, {"label" : "transitiveRotations", "tail" : "(v: Vertex): Boolean", "member" : "superficial.TwoComplex.transitiveRotations", "link" : "superficial\/PantsSurface.html#transitiveRotations(v:superficial.Vertex):Boolean", "kind" : "def"}, {"label" : "degree", "tail" : "(v: Vertex): Int", "member" : "superficial.TwoComplex.degree", "link" : "superficial\/PantsSurface.html#degree(v:superficial.Vertex):Int", "kind" : "def"}, {"label" : "edgesEndingAt", "tail" : "(v: Vertex): Set[Edge]", "member" : "superficial.TwoComplex.edgesEndingAt", "link" : "superficial\/PantsSurface.html#edgesEndingAt(v:superficial.Vertex):scala.collection.immutable.Set[superficial.Edge]", "kind" : "def"}, {"label" : "allEdgesToTheRightOf", "tail" : "(e: Edge): Set[Edge]", "member" : "superficial.TwoComplex.allEdgesToTheRightOf", "link" : "superficial\/PantsSurface.html#allEdgesToTheRightOf(e:superficial.Edge):Set[superficial.Edge]", "kind" : "def"}, {"label" : "allEdgesToTheLeftOf", "tail" : "(e: Edge): Set[Edge]", "member" : "superficial.TwoComplex.allEdgesToTheLeftOf", "link" : "superficial\/PantsSurface.html#allEdgesToTheLeftOf(e:superficial.Edge):Set[superficial.Edge]", "kind" : "def"}, {"label" : "orbit", "tail" : "(e: Edge, steps: Int, opt: (Edge) => Option[Edge], accum: Set[Edge]): Set[Edge]", "member" : "superficial.TwoComplex.orbit", "link" : "superficial\/PantsSurface.html#orbit(e:superficial.Edge,steps:Int,opt:superficial.Edge=>Option[superficial.Edge],accum:Set[superficial.Edge]):Set[superficial.Edge]", "kind" : "def"}, {"label" : "rotateRightOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.rotateRightOpt", "link" : "superficial\/PantsSurface.html#rotateRightOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "rotateLeftOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.rotateLeftOpt", "link" : "superficial\/PantsSurface.html#rotateLeftOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "predOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.predOpt", "link" : "superficial\/PantsSurface.html#predOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "succOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.succOpt", "link" : "superficial\/PantsSurface.html#succOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "isConnectedComplex", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isConnectedComplex", "link" : "superficial\/PantsSurface.html#isConnectedComplex:Boolean", "kind" : "def"}, {"label" : "connectedComponent", "tail" : "(v: Vertex): Set[Vertex]", "member" : "superficial.TwoComplex.connectedComponent", "link" : "superficial\/PantsSurface.html#connectedComponent(v:superficial.Vertex):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "maxSetNbr", "tail" : "(s: Set[Vertex]): Set[Vertex]", "member" : "superficial.TwoComplex.maxSetNbr", "link" : "superficial\/PantsSurface.html#maxSetNbr(s:Set[superficial.Vertex]):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "setNbr", "tail" : "(s: Set[Vertex]): Set[Vertex]", "member" : "superficial.TwoComplex.setNbr", "link" : "superficial\/PantsSurface.html#setNbr(s:Set[superficial.Vertex]):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "vertexNbr", "tail" : "(v: Vertex): Set[Vertex]", "member" : "superficial.TwoComplex.vertexNbr", "link" : "superficial\/PantsSurface.html#vertexNbr(v:superficial.Vertex):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "collapseEdge", "tail" : "(e: Edge): (TwoComplex, ((EdgePath) => EdgePath, (EdgePath) => EdgePath))", "member" : "superficial.TwoComplex.collapseEdge", "link" : "superficial\/PantsSurface.html#collapseEdge(e:superficial.Edge):(superficial.TwoComplex,(superficial.EdgePath=>superficial.EdgePath,superficial.EdgePath=>superficial.EdgePath))", "kind" : "def"}, {"label" : "normalArcs", "tail" : "(): Set[NormalArc]", "member" : "superficial.TwoComplex.normalArcs", "link" : "superficial\/PantsSurface.html#normalArcs:Set[superficial.NormalArc]", "kind" : "def"}, {"label" : "edgeIndices", "tail" : "(edge: Edge): Set[(Polygon, Index, Boolean)]", "member" : "superficial.TwoComplex.edgeIndices", "link" : "superficial\/PantsSurface.html#edgeIndices(edge:superficial.Edge):Set[(superficial.Polygon,superficial.Polygon.Index,Boolean)]", "kind" : "def"}, {"label" : "facesWithEdge", "tail" : "(edge: Edge): Set[Polygon]", "member" : "superficial.TwoComplex.facesWithEdge", "link" : "superficial\/PantsSurface.html#facesWithEdge(edge:superficial.Edge):Set[superficial.Polygon]", "kind" : "def"}, {"label" : "vertexIndex", "tail" : "(v: Vertex): Option[Int]", "member" : "superficial.TwoComplex.vertexIndex", "link" : "superficial\/PantsSurface.html#vertexIndex(v:superficial.Vertex):Option[Int]", "kind" : "def"}, {"label" : "indexedVertices", "tail" : ": Set[(Vertex, Int)]", "member" : "superficial.TwoComplex.indexedVertices", "link" : "superficial\/PantsSurface.html#indexedVertices:scala.collection.immutable.Set[(superficial.Vertex,Int)]", "kind" : "lazy val"}, {"label" : "chi", "tail" : ": Int", "member" : "superficial.TwoComplex.chi", "link" : "superficial\/PantsSurface.html#chi:Int", "kind" : "lazy val"}, {"label" : "edgeIndex", "tail" : "(edge: Edge): Option[(Int, Boolean)]", "member" : "superficial.TwoComplex.edgeIndex", "link" : "superficial\/PantsSurface.html#edgeIndex(edge:superficial.Edge):Option[(Int,Boolean)]", "kind" : "def"}, {"label" : "halfEdges", "tail" : ": Set[Edge]", "member" : "superficial.TwoComplex.halfEdges", "link" : "superficial\/PantsSurface.html#halfEdges:Set[superficial.Edge]", "kind" : "lazy val"}, {"label" : "positiveEdges", "tail" : ": Vector[OrientedEdge]", "member" : "superficial.TwoComplex.positiveEdges", "link" : "superficial\/PantsSurface.html#positiveEdges:Vector[superficial.OrientedEdge]", "kind" : "lazy val"}, {"label" : "checkComplex", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.checkComplex", "link" : "superficial\/PantsSurface.html#checkComplex:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/PantsSurface.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/PantsSurface.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/PantsSurface.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/PantsSurface.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/PantsSurface.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/PantsSurface.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/PantsSurface.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/PantsSurface.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/PantsSurface.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/PantsSurface.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/PantsSurface.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/PantsSurface.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/PantsSurface.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/PantsSurface.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/PantsSurface.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/PantsSurface.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "superficial\/PantsSurface.html", "kind" : "case class"}, {"name" : "superficial.Polygon", "object" : "superficial\/Polygon$.html", "members_object" : [{"label" : "PolygonVertex", "tail" : "", "member" : "superficial.Polygon.PolygonVertex", "link" : "superficial\/Polygon$.html#PolygonVertexextendsVertexwithProductwithSerializable", "kind" : "case class"}, {"label" : "PolygonEdge", "tail" : "", "member" : "superficial.Polygon.PolygonEdge", "link" : "superficial\/Polygon$.html#PolygonEdgeextendsEdgewithProductwithSerializable", "kind" : "case class"}, {"label" : "Symbolic", "tail" : "", "member" : "superficial.Polygon.Symbolic", "link" : "superficial\/Polygon$.html#SymbolicextendsPolygonwithProductwithSerializable", "kind" : "case class"}, {"label" : "degenerate", "tail" : "(v: Vertex): Polygon", "member" : "superficial.Polygon.degenerate", "link" : "superficial\/Polygon$.html#degenerate(v:superficial.Vertex):superficial.Polygon", "kind" : "def"}, {"label" : "apply", "tail" : "(bdy: Vector[Edge]): Polygon", "member" : "superficial.Polygon.apply", "link" : "superficial\/Polygon$.html#apply(bdy:Vector[superficial.Edge]):superficial.Polygon", "kind" : "def"}, {"label" : "apply", "tail" : "(n: Int): Polygon", "member" : "superficial.Polygon.apply", "link" : "superficial\/Polygon$.html#apply(n:Int):superficial.Polygon", "kind" : "def"}, {"label" : "Index", "tail" : "", "member" : "superficial.Polygon.Index", "link" : "superficial\/Polygon$.html#Index=Int", "kind" : "type"}, {"label" : "checkBoundary", "tail" : "(v: Vector[Edge]): Boolean", "member" : "superficial.Polygon.checkBoundary", "link" : "superficial\/Polygon$.html#checkBoundary(v:Vector[superficial.Edge]):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/Polygon$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/Polygon$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/Polygon$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/Polygon$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/Polygon$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/Polygon$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/Polygon$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Polygon$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Polygon$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Polygon$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/Polygon$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/Polygon$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/Polygon$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/Polygon$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/Polygon$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/Polygon$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/Polygon$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/Polygon$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/Polygon$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "superficial\/Polygon.html", "kind" : "trait", "members_trait" : [{"label" : "boundaryIndex", "tail" : "(e: Edge): Set[(Int, Boolean)]", "member" : "superficial.Polygon.boundaryIndex", "link" : "superficial\/Polygon.html#boundaryIndex(e:superficial.Edge):Set[(Int,Boolean)]", "kind" : "def"}, {"label" : "edges", "tail" : ": Set[Edge]", "member" : "superficial.Polygon.edges", "link" : "superficial\/Polygon.html#edges:Set[superficial.Edge]", "kind" : "lazy val"}, {"label" : "del", "tail" : "(): FormalSum[Edge]", "member" : "superficial.Polygon.del", "link" : "superficial\/Polygon.html#del:superficial.FormalSum[superficial.Edge]", "kind" : "def"}, {"label" : "checkPoly", "tail" : "(): Boolean", "member" : "superficial.Polygon.checkPoly", "link" : "superficial\/Polygon.html#checkPoly:Boolean", "kind" : "def"}, {"label" : "checkBoundary", "tail" : "(): Boolean", "member" : "superficial.Polygon.checkBoundary", "link" : "superficial\/Polygon.html#checkBoundary:Boolean", "kind" : "def"}, {"label" : "basePoint", "tail" : ": Vertex", "member" : "superficial.Polygon.basePoint", "link" : "superficial\/Polygon.html#basePoint:superficial.Vertex", "kind" : "lazy val"}, {"label" : "indices", "tail" : ": Vector[Index]", "member" : "superficial.Polygon.indices", "link" : "superficial\/Polygon.html#indices:Vector[superficial.Polygon.Index]", "kind" : "lazy val"}, {"label" : "faces", "tail" : ": Set[Polygon]", "member" : "superficial.Polygon.faces", "link" : "superficial\/Polygon.html#faces:scala.collection.immutable.Set[superficial.Polygon]", "kind" : "lazy val"}, {"label" : "turnEdge", "tail" : "(e: Edge, t: Int): Edge", "member" : "superficial.TwoComplex.turnEdge", "link" : "superficial\/Polygon.html#turnEdge(e:superficial.Edge,t:Int):superficial.Edge", "kind" : "def"}, {"label" : "angleBetween", "tail" : "(e1: Edge, e2: Edge): Int", "member" : "superficial.TwoComplex.angleBetween", "link" : "superficial\/Polygon.html#angleBetween(e1:superficial.Edge,e2:superficial.Edge):Int", "kind" : "def"}, {"label" : "turnIndex", "tail" : "(e1: Edge, e2: Edge): Int", "member" : "superficial.TwoComplex.turnIndex", "link" : "superficial\/Polygon.html#turnIndex(e1:superficial.Edge,e2:superficial.Edge):Int", "kind" : "def"}, {"label" : "vectorEdgesToTheRightOf", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorEdgesToTheRightOf", "link" : "superficial\/Polygon.html#vectorEdgesToTheRightOf(e:superficial.Edge):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorEdgesToTheLeftOf", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorEdgesToTheLeftOf", "link" : "superficial\/Polygon.html#vectorEdgesToTheLeftOf(e:superficial.Edge):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorRightTurns", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorRightTurns", "link" : "superficial\/Polygon.html#vectorRightTurns(e:superficial.Edge):scala.collection.immutable.Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorLeftTurns", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorLeftTurns", "link" : "superficial\/Polygon.html#vectorLeftTurns(e:superficial.Edge):scala.collection.immutable.Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorOrbitFin", "tail" : "(e: Edge, opt: (Edge) => Option[Edge], accum: Vector[Edge], n: Int): Vector[Edge]", "member" : "superficial.TwoComplex.vectorOrbitFin", "link" : "superficial\/Polygon.html#vectorOrbitFin(e:superficial.Edge,opt:superficial.Edge=>Option[superficial.Edge],accum:Vector[superficial.Edge],n:Int):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorOrbit", "tail" : "(e: Edge, opt: (Edge) => Option[Edge], accum: Vector[Edge]): Vector[Edge]", "member" : "superficial.TwoComplex.vectorOrbit", "link" : "superficial\/Polygon.html#vectorOrbit(e:superficial.Edge,opt:superficial.Edge=>Option[superficial.Edge],accum:Vector[superficial.Edge]):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "SwR", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SwR", "link" : "superficial\/Polygon.html#SwR(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SwL", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SwL", "link" : "superficial\/Polygon.html#SwL(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SR", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SR", "link" : "superficial\/Polygon.html#SR(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SL", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SL", "link" : "superficial\/Polygon.html#SL(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "R", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.R", "link" : "superficial\/Polygon.html#R(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "L", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.L", "link" : "superficial\/Polygon.html#L(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "slightRight", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.slightRight", "link" : "superficial\/Polygon.html#slightRight(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "slightLeft", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.slightLeft", "link" : "superficial\/Polygon.html#slightLeft(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "turnRight", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.turnRight", "link" : "superficial\/Polygon.html#turnRight(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "turnLeft", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.turnLeft", "link" : "superficial\/Polygon.html#turnLeft(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "subComplex", "tail" : "(vs: Set[Vertex]): TwoComplex", "member" : "superficial.TwoComplex.subComplex", "link" : "superficial\/Polygon.html#subComplex(vs:Set[superficial.Vertex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addTwoComplexes", "tail" : "(complexes: Set[TwoComplex]): TwoComplex", "member" : "superficial.TwoComplex.addTwoComplexes", "link" : "superficial\/Polygon.html#addTwoComplexes(complexes:Set[superficial.TwoComplex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addFaces", "tail" : "(fcs: Set[Polygon]): TwoComplex", "member" : "superficial.TwoComplex.addFaces", "link" : "superficial\/Polygon.html#addFaces(fcs:Set[superficial.Polygon]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addEdges", "tail" : "(eds: Set[Edge]): TwoComplex", "member" : "superficial.TwoComplex.addEdges", "link" : "superficial\/Polygon.html#addEdges(eds:Set[superficial.Edge]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addVertices", "tail" : "(vs: Set[Vertex]): TwoComplex", "member" : "superficial.TwoComplex.addVertices", "link" : "superficial\/Polygon.html#addVertices(vs:Set[superficial.Vertex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "isSurfaceWithBoundary", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isSurfaceWithBoundary", "link" : "superficial\/Polygon.html#isSurfaceWithBoundary:Boolean", "kind" : "def"}, {"label" : "isClosedSurface", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isClosedSurface", "link" : "superficial\/Polygon.html#isClosedSurface:Boolean", "kind" : "def"}, {"label" : "isEdgeAtBoundary", "tail" : "(e: Edge): Boolean", "member" : "superficial.TwoComplex.isEdgeAtBoundary", "link" : "superficial\/Polygon.html#isEdgeAtBoundary(e:superficial.Edge):Boolean", "kind" : "def"}, {"label" : "edgeOccurences", "tail" : "(e: Edge): Int", "member" : "superficial.TwoComplex.edgeOccurences", "link" : "superficial\/Polygon.html#edgeOccurences(e:superficial.Edge):Int", "kind" : "def"}, {"label" : "transitiveRotations", "tail" : "(v: Vertex): Boolean", "member" : "superficial.TwoComplex.transitiveRotations", "link" : "superficial\/Polygon.html#transitiveRotations(v:superficial.Vertex):Boolean", "kind" : "def"}, {"label" : "degree", "tail" : "(v: Vertex): Int", "member" : "superficial.TwoComplex.degree", "link" : "superficial\/Polygon.html#degree(v:superficial.Vertex):Int", "kind" : "def"}, {"label" : "edgesEndingAt", "tail" : "(v: Vertex): Set[Edge]", "member" : "superficial.TwoComplex.edgesEndingAt", "link" : "superficial\/Polygon.html#edgesEndingAt(v:superficial.Vertex):scala.collection.immutable.Set[superficial.Edge]", "kind" : "def"}, {"label" : "allEdgesToTheRightOf", "tail" : "(e: Edge): Set[Edge]", "member" : "superficial.TwoComplex.allEdgesToTheRightOf", "link" : "superficial\/Polygon.html#allEdgesToTheRightOf(e:superficial.Edge):Set[superficial.Edge]", "kind" : "def"}, {"label" : "allEdgesToTheLeftOf", "tail" : "(e: Edge): Set[Edge]", "member" : "superficial.TwoComplex.allEdgesToTheLeftOf", "link" : "superficial\/Polygon.html#allEdgesToTheLeftOf(e:superficial.Edge):Set[superficial.Edge]", "kind" : "def"}, {"label" : "orbit", "tail" : "(e: Edge, steps: Int, opt: (Edge) => Option[Edge], accum: Set[Edge]): Set[Edge]", "member" : "superficial.TwoComplex.orbit", "link" : "superficial\/Polygon.html#orbit(e:superficial.Edge,steps:Int,opt:superficial.Edge=>Option[superficial.Edge],accum:Set[superficial.Edge]):Set[superficial.Edge]", "kind" : "def"}, {"label" : "rotateRightOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.rotateRightOpt", "link" : "superficial\/Polygon.html#rotateRightOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "rotateLeftOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.rotateLeftOpt", "link" : "superficial\/Polygon.html#rotateLeftOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "predOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.predOpt", "link" : "superficial\/Polygon.html#predOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "succOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.succOpt", "link" : "superficial\/Polygon.html#succOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "isConnectedComplex", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isConnectedComplex", "link" : "superficial\/Polygon.html#isConnectedComplex:Boolean", "kind" : "def"}, {"label" : "connectedComponent", "tail" : "(v: Vertex): Set[Vertex]", "member" : "superficial.TwoComplex.connectedComponent", "link" : "superficial\/Polygon.html#connectedComponent(v:superficial.Vertex):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "maxSetNbr", "tail" : "(s: Set[Vertex]): Set[Vertex]", "member" : "superficial.TwoComplex.maxSetNbr", "link" : "superficial\/Polygon.html#maxSetNbr(s:Set[superficial.Vertex]):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "setNbr", "tail" : "(s: Set[Vertex]): Set[Vertex]", "member" : "superficial.TwoComplex.setNbr", "link" : "superficial\/Polygon.html#setNbr(s:Set[superficial.Vertex]):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "vertexNbr", "tail" : "(v: Vertex): Set[Vertex]", "member" : "superficial.TwoComplex.vertexNbr", "link" : "superficial\/Polygon.html#vertexNbr(v:superficial.Vertex):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "collapseEdge", "tail" : "(e: Edge): (TwoComplex, ((EdgePath) => EdgePath, (EdgePath) => EdgePath))", "member" : "superficial.TwoComplex.collapseEdge", "link" : "superficial\/Polygon.html#collapseEdge(e:superficial.Edge):(superficial.TwoComplex,(superficial.EdgePath=>superficial.EdgePath,superficial.EdgePath=>superficial.EdgePath))", "kind" : "def"}, {"label" : "normalArcs", "tail" : "(): Set[NormalArc]", "member" : "superficial.TwoComplex.normalArcs", "link" : "superficial\/Polygon.html#normalArcs:Set[superficial.NormalArc]", "kind" : "def"}, {"label" : "edgeIndices", "tail" : "(edge: Edge): Set[(Polygon, Index, Boolean)]", "member" : "superficial.TwoComplex.edgeIndices", "link" : "superficial\/Polygon.html#edgeIndices(edge:superficial.Edge):Set[(superficial.Polygon,superficial.Polygon.Index,Boolean)]", "kind" : "def"}, {"label" : "facesWithEdge", "tail" : "(edge: Edge): Set[Polygon]", "member" : "superficial.TwoComplex.facesWithEdge", "link" : "superficial\/Polygon.html#facesWithEdge(edge:superficial.Edge):Set[superficial.Polygon]", "kind" : "def"}, {"label" : "vertexIndex", "tail" : "(v: Vertex): Option[Int]", "member" : "superficial.TwoComplex.vertexIndex", "link" : "superficial\/Polygon.html#vertexIndex(v:superficial.Vertex):Option[Int]", "kind" : "def"}, {"label" : "indexedVertices", "tail" : ": Set[(Vertex, Int)]", "member" : "superficial.TwoComplex.indexedVertices", "link" : "superficial\/Polygon.html#indexedVertices:scala.collection.immutable.Set[(superficial.Vertex,Int)]", "kind" : "lazy val"}, {"label" : "chi", "tail" : ": Int", "member" : "superficial.TwoComplex.chi", "link" : "superficial\/Polygon.html#chi:Int", "kind" : "lazy val"}, {"label" : "edgeIndex", "tail" : "(edge: Edge): Option[(Int, Boolean)]", "member" : "superficial.TwoComplex.edgeIndex", "link" : "superficial\/Polygon.html#edgeIndex(edge:superficial.Edge):Option[(Int,Boolean)]", "kind" : "def"}, {"label" : "halfEdges", "tail" : ": Set[Edge]", "member" : "superficial.TwoComplex.halfEdges", "link" : "superficial\/Polygon.html#halfEdges:Set[superficial.Edge]", "kind" : "lazy val"}, {"label" : "positiveEdges", "tail" : ": Vector[OrientedEdge]", "member" : "superficial.TwoComplex.positiveEdges", "link" : "superficial\/Polygon.html#positiveEdges:Vector[superficial.OrientedEdge]", "kind" : "lazy val"}, {"label" : "checkComplex", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.checkComplex", "link" : "superficial\/Polygon.html#checkComplex:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/Polygon.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/Polygon.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/Polygon.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/Polygon.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/Polygon.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/Polygon.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/Polygon.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Polygon.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Polygon.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Polygon.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/Polygon.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/Polygon.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/Polygon.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/Polygon.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/Polygon.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/Polygon.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/Polygon.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/Polygon.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/Polygon.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "vertices", "tail" : ": Set[Vertex]", "member" : "superficial.Polygon.vertices", "link" : "superficial\/Polygon.html#vertices:Set[superficial.Vertex]", "kind" : "abstract val"}, {"label" : "boundary", "tail" : ": Vector[Edge]", "member" : "superficial.Polygon.boundary", "link" : "superficial\/Polygon.html#boundary:Vector[superficial.Edge]", "kind" : "abstract val"}, {"label" : "sides", "tail" : ": Int", "member" : "superficial.Polygon.sides", "link" : "superficial\/Polygon.html#sides:Int", "kind" : "abstract val"}], "shortDescription" : "Abstract polygon, with given edges and vertices, i.e."}, {"name" : "superficial.PrimitiveExamples", "shortDescription" : "", "object" : "superficial\/PrimitiveExamples$.html", "members_object" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/PrimitiveExamples$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/PrimitiveExamples$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/PrimitiveExamples$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/PrimitiveExamples$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/PrimitiveExamples$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/PrimitiveExamples$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/PrimitiveExamples$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/PrimitiveExamples$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/PrimitiveExamples$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/PrimitiveExamples$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/PrimitiveExamples$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/PrimitiveExamples$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/PrimitiveExamples$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/PrimitiveExamples$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/PrimitiveExamples$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/PrimitiveExamples$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/PrimitiveExamples$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/PrimitiveExamples$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/PrimitiveExamples$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "superficial.PureComplex", "shortDescription" : "", "members_case class" : [{"label" : "faces", "tail" : ": Set[Polygon]", "member" : "superficial.PureComplex.faces", "link" : "superficial\/PureComplex.html#faces:Set[superficial.Polygon]", "kind" : "val"}, {"member" : "superficial.PureComplex#<init>", "error" : "unsupported entity"}, {"label" : "polys", "tail" : ": Set[Polygon]", "member" : "superficial.PureComplex.polys", "link" : "superficial\/PureComplex.html#polys:Set[superficial.Polygon]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "superficial\/PureComplex.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "vertices", "tail" : ": Set[Vertex]", "member" : "superficial.PureTwoComplex.vertices", "link" : "superficial\/PureComplex.html#vertices:Set[superficial.Vertex]", "kind" : "lazy val"}, {"label" : "edges", "tail" : ": Set[Edge]", "member" : "superficial.PureTwoComplex.edges", "link" : "superficial\/PureComplex.html#edges:Set[superficial.Edge]", "kind" : "lazy val"}, {"label" : "turnEdge", "tail" : "(e: Edge, t: Int): Edge", "member" : "superficial.TwoComplex.turnEdge", "link" : "superficial\/PureComplex.html#turnEdge(e:superficial.Edge,t:Int):superficial.Edge", "kind" : "def"}, {"label" : "angleBetween", "tail" : "(e1: Edge, e2: Edge): Int", "member" : "superficial.TwoComplex.angleBetween", "link" : "superficial\/PureComplex.html#angleBetween(e1:superficial.Edge,e2:superficial.Edge):Int", "kind" : "def"}, {"label" : "turnIndex", "tail" : "(e1: Edge, e2: Edge): Int", "member" : "superficial.TwoComplex.turnIndex", "link" : "superficial\/PureComplex.html#turnIndex(e1:superficial.Edge,e2:superficial.Edge):Int", "kind" : "def"}, {"label" : "vectorEdgesToTheRightOf", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorEdgesToTheRightOf", "link" : "superficial\/PureComplex.html#vectorEdgesToTheRightOf(e:superficial.Edge):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorEdgesToTheLeftOf", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorEdgesToTheLeftOf", "link" : "superficial\/PureComplex.html#vectorEdgesToTheLeftOf(e:superficial.Edge):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorRightTurns", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorRightTurns", "link" : "superficial\/PureComplex.html#vectorRightTurns(e:superficial.Edge):scala.collection.immutable.Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorLeftTurns", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorLeftTurns", "link" : "superficial\/PureComplex.html#vectorLeftTurns(e:superficial.Edge):scala.collection.immutable.Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorOrbitFin", "tail" : "(e: Edge, opt: (Edge) => Option[Edge], accum: Vector[Edge], n: Int): Vector[Edge]", "member" : "superficial.TwoComplex.vectorOrbitFin", "link" : "superficial\/PureComplex.html#vectorOrbitFin(e:superficial.Edge,opt:superficial.Edge=>Option[superficial.Edge],accum:Vector[superficial.Edge],n:Int):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorOrbit", "tail" : "(e: Edge, opt: (Edge) => Option[Edge], accum: Vector[Edge]): Vector[Edge]", "member" : "superficial.TwoComplex.vectorOrbit", "link" : "superficial\/PureComplex.html#vectorOrbit(e:superficial.Edge,opt:superficial.Edge=>Option[superficial.Edge],accum:Vector[superficial.Edge]):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "SwR", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SwR", "link" : "superficial\/PureComplex.html#SwR(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SwL", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SwL", "link" : "superficial\/PureComplex.html#SwL(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SR", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SR", "link" : "superficial\/PureComplex.html#SR(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SL", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SL", "link" : "superficial\/PureComplex.html#SL(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "R", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.R", "link" : "superficial\/PureComplex.html#R(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "L", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.L", "link" : "superficial\/PureComplex.html#L(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "slightRight", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.slightRight", "link" : "superficial\/PureComplex.html#slightRight(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "slightLeft", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.slightLeft", "link" : "superficial\/PureComplex.html#slightLeft(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "turnRight", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.turnRight", "link" : "superficial\/PureComplex.html#turnRight(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "turnLeft", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.turnLeft", "link" : "superficial\/PureComplex.html#turnLeft(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "subComplex", "tail" : "(vs: Set[Vertex]): TwoComplex", "member" : "superficial.TwoComplex.subComplex", "link" : "superficial\/PureComplex.html#subComplex(vs:Set[superficial.Vertex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addTwoComplexes", "tail" : "(complexes: Set[TwoComplex]): TwoComplex", "member" : "superficial.TwoComplex.addTwoComplexes", "link" : "superficial\/PureComplex.html#addTwoComplexes(complexes:Set[superficial.TwoComplex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addFaces", "tail" : "(fcs: Set[Polygon]): TwoComplex", "member" : "superficial.TwoComplex.addFaces", "link" : "superficial\/PureComplex.html#addFaces(fcs:Set[superficial.Polygon]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addEdges", "tail" : "(eds: Set[Edge]): TwoComplex", "member" : "superficial.TwoComplex.addEdges", "link" : "superficial\/PureComplex.html#addEdges(eds:Set[superficial.Edge]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addVertices", "tail" : "(vs: Set[Vertex]): TwoComplex", "member" : "superficial.TwoComplex.addVertices", "link" : "superficial\/PureComplex.html#addVertices(vs:Set[superficial.Vertex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "isSurfaceWithBoundary", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isSurfaceWithBoundary", "link" : "superficial\/PureComplex.html#isSurfaceWithBoundary:Boolean", "kind" : "def"}, {"label" : "isClosedSurface", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isClosedSurface", "link" : "superficial\/PureComplex.html#isClosedSurface:Boolean", "kind" : "def"}, {"label" : "isEdgeAtBoundary", "tail" : "(e: Edge): Boolean", "member" : "superficial.TwoComplex.isEdgeAtBoundary", "link" : "superficial\/PureComplex.html#isEdgeAtBoundary(e:superficial.Edge):Boolean", "kind" : "def"}, {"label" : "edgeOccurences", "tail" : "(e: Edge): Int", "member" : "superficial.TwoComplex.edgeOccurences", "link" : "superficial\/PureComplex.html#edgeOccurences(e:superficial.Edge):Int", "kind" : "def"}, {"label" : "transitiveRotations", "tail" : "(v: Vertex): Boolean", "member" : "superficial.TwoComplex.transitiveRotations", "link" : "superficial\/PureComplex.html#transitiveRotations(v:superficial.Vertex):Boolean", "kind" : "def"}, {"label" : "degree", "tail" : "(v: Vertex): Int", "member" : "superficial.TwoComplex.degree", "link" : "superficial\/PureComplex.html#degree(v:superficial.Vertex):Int", "kind" : "def"}, {"label" : "edgesEndingAt", "tail" : "(v: Vertex): Set[Edge]", "member" : "superficial.TwoComplex.edgesEndingAt", "link" : "superficial\/PureComplex.html#edgesEndingAt(v:superficial.Vertex):scala.collection.immutable.Set[superficial.Edge]", "kind" : "def"}, {"label" : "allEdgesToTheRightOf", "tail" : "(e: Edge): Set[Edge]", "member" : "superficial.TwoComplex.allEdgesToTheRightOf", "link" : "superficial\/PureComplex.html#allEdgesToTheRightOf(e:superficial.Edge):Set[superficial.Edge]", "kind" : "def"}, {"label" : "allEdgesToTheLeftOf", "tail" : "(e: Edge): Set[Edge]", "member" : "superficial.TwoComplex.allEdgesToTheLeftOf", "link" : "superficial\/PureComplex.html#allEdgesToTheLeftOf(e:superficial.Edge):Set[superficial.Edge]", "kind" : "def"}, {"label" : "orbit", "tail" : "(e: Edge, steps: Int, opt: (Edge) => Option[Edge], accum: Set[Edge]): Set[Edge]", "member" : "superficial.TwoComplex.orbit", "link" : "superficial\/PureComplex.html#orbit(e:superficial.Edge,steps:Int,opt:superficial.Edge=>Option[superficial.Edge],accum:Set[superficial.Edge]):Set[superficial.Edge]", "kind" : "def"}, {"label" : "rotateRightOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.rotateRightOpt", "link" : "superficial\/PureComplex.html#rotateRightOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "rotateLeftOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.rotateLeftOpt", "link" : "superficial\/PureComplex.html#rotateLeftOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "predOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.predOpt", "link" : "superficial\/PureComplex.html#predOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "succOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.succOpt", "link" : "superficial\/PureComplex.html#succOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "isConnectedComplex", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isConnectedComplex", "link" : "superficial\/PureComplex.html#isConnectedComplex:Boolean", "kind" : "def"}, {"label" : "connectedComponent", "tail" : "(v: Vertex): Set[Vertex]", "member" : "superficial.TwoComplex.connectedComponent", "link" : "superficial\/PureComplex.html#connectedComponent(v:superficial.Vertex):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "maxSetNbr", "tail" : "(s: Set[Vertex]): Set[Vertex]", "member" : "superficial.TwoComplex.maxSetNbr", "link" : "superficial\/PureComplex.html#maxSetNbr(s:Set[superficial.Vertex]):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "setNbr", "tail" : "(s: Set[Vertex]): Set[Vertex]", "member" : "superficial.TwoComplex.setNbr", "link" : "superficial\/PureComplex.html#setNbr(s:Set[superficial.Vertex]):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "vertexNbr", "tail" : "(v: Vertex): Set[Vertex]", "member" : "superficial.TwoComplex.vertexNbr", "link" : "superficial\/PureComplex.html#vertexNbr(v:superficial.Vertex):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "collapseEdge", "tail" : "(e: Edge): (TwoComplex, ((EdgePath) => EdgePath, (EdgePath) => EdgePath))", "member" : "superficial.TwoComplex.collapseEdge", "link" : "superficial\/PureComplex.html#collapseEdge(e:superficial.Edge):(superficial.TwoComplex,(superficial.EdgePath=>superficial.EdgePath,superficial.EdgePath=>superficial.EdgePath))", "kind" : "def"}, {"label" : "normalArcs", "tail" : "(): Set[NormalArc]", "member" : "superficial.TwoComplex.normalArcs", "link" : "superficial\/PureComplex.html#normalArcs:Set[superficial.NormalArc]", "kind" : "def"}, {"label" : "edgeIndices", "tail" : "(edge: Edge): Set[(Polygon, Index, Boolean)]", "member" : "superficial.TwoComplex.edgeIndices", "link" : "superficial\/PureComplex.html#edgeIndices(edge:superficial.Edge):Set[(superficial.Polygon,superficial.Polygon.Index,Boolean)]", "kind" : "def"}, {"label" : "facesWithEdge", "tail" : "(edge: Edge): Set[Polygon]", "member" : "superficial.TwoComplex.facesWithEdge", "link" : "superficial\/PureComplex.html#facesWithEdge(edge:superficial.Edge):Set[superficial.Polygon]", "kind" : "def"}, {"label" : "vertexIndex", "tail" : "(v: Vertex): Option[Int]", "member" : "superficial.TwoComplex.vertexIndex", "link" : "superficial\/PureComplex.html#vertexIndex(v:superficial.Vertex):Option[Int]", "kind" : "def"}, {"label" : "indexedVertices", "tail" : ": Set[(Vertex, Int)]", "member" : "superficial.TwoComplex.indexedVertices", "link" : "superficial\/PureComplex.html#indexedVertices:scala.collection.immutable.Set[(superficial.Vertex,Int)]", "kind" : "lazy val"}, {"label" : "chi", "tail" : ": Int", "member" : "superficial.TwoComplex.chi", "link" : "superficial\/PureComplex.html#chi:Int", "kind" : "lazy val"}, {"label" : "edgeIndex", "tail" : "(edge: Edge): Option[(Int, Boolean)]", "member" : "superficial.TwoComplex.edgeIndex", "link" : "superficial\/PureComplex.html#edgeIndex(edge:superficial.Edge):Option[(Int,Boolean)]", "kind" : "def"}, {"label" : "halfEdges", "tail" : ": Set[Edge]", "member" : "superficial.TwoComplex.halfEdges", "link" : "superficial\/PureComplex.html#halfEdges:Set[superficial.Edge]", "kind" : "lazy val"}, {"label" : "positiveEdges", "tail" : ": Vector[OrientedEdge]", "member" : "superficial.TwoComplex.positiveEdges", "link" : "superficial\/PureComplex.html#positiveEdges:Vector[superficial.OrientedEdge]", "kind" : "lazy val"}, {"label" : "checkComplex", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.checkComplex", "link" : "superficial\/PureComplex.html#checkComplex:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/PureComplex.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/PureComplex.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/PureComplex.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/PureComplex.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/PureComplex.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/PureComplex.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/PureComplex.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/PureComplex.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/PureComplex.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/PureComplex.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/PureComplex.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/PureComplex.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/PureComplex.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/PureComplex.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/PureComplex.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/PureComplex.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "superficial\/PureComplex.html", "kind" : "case class"}, {"name" : "superficial.PureTwoComplex", "trait" : "superficial\/PureTwoComplex.html", "kind" : "trait", "members_trait" : [{"label" : "vertices", "tail" : ": Set[Vertex]", "member" : "superficial.PureTwoComplex.vertices", "link" : "superficial\/PureTwoComplex.html#vertices:Set[superficial.Vertex]", "kind" : "lazy val"}, {"label" : "edges", "tail" : ": Set[Edge]", "member" : "superficial.PureTwoComplex.edges", "link" : "superficial\/PureTwoComplex.html#edges:Set[superficial.Edge]", "kind" : "lazy val"}, {"label" : "turnEdge", "tail" : "(e: Edge, t: Int): Edge", "member" : "superficial.TwoComplex.turnEdge", "link" : "superficial\/PureTwoComplex.html#turnEdge(e:superficial.Edge,t:Int):superficial.Edge", "kind" : "def"}, {"label" : "angleBetween", "tail" : "(e1: Edge, e2: Edge): Int", "member" : "superficial.TwoComplex.angleBetween", "link" : "superficial\/PureTwoComplex.html#angleBetween(e1:superficial.Edge,e2:superficial.Edge):Int", "kind" : "def"}, {"label" : "turnIndex", "tail" : "(e1: Edge, e2: Edge): Int", "member" : "superficial.TwoComplex.turnIndex", "link" : "superficial\/PureTwoComplex.html#turnIndex(e1:superficial.Edge,e2:superficial.Edge):Int", "kind" : "def"}, {"label" : "vectorEdgesToTheRightOf", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorEdgesToTheRightOf", "link" : "superficial\/PureTwoComplex.html#vectorEdgesToTheRightOf(e:superficial.Edge):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorEdgesToTheLeftOf", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorEdgesToTheLeftOf", "link" : "superficial\/PureTwoComplex.html#vectorEdgesToTheLeftOf(e:superficial.Edge):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorRightTurns", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorRightTurns", "link" : "superficial\/PureTwoComplex.html#vectorRightTurns(e:superficial.Edge):scala.collection.immutable.Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorLeftTurns", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorLeftTurns", "link" : "superficial\/PureTwoComplex.html#vectorLeftTurns(e:superficial.Edge):scala.collection.immutable.Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorOrbitFin", "tail" : "(e: Edge, opt: (Edge) => Option[Edge], accum: Vector[Edge], n: Int): Vector[Edge]", "member" : "superficial.TwoComplex.vectorOrbitFin", "link" : "superficial\/PureTwoComplex.html#vectorOrbitFin(e:superficial.Edge,opt:superficial.Edge=>Option[superficial.Edge],accum:Vector[superficial.Edge],n:Int):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorOrbit", "tail" : "(e: Edge, opt: (Edge) => Option[Edge], accum: Vector[Edge]): Vector[Edge]", "member" : "superficial.TwoComplex.vectorOrbit", "link" : "superficial\/PureTwoComplex.html#vectorOrbit(e:superficial.Edge,opt:superficial.Edge=>Option[superficial.Edge],accum:Vector[superficial.Edge]):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "SwR", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SwR", "link" : "superficial\/PureTwoComplex.html#SwR(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SwL", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SwL", "link" : "superficial\/PureTwoComplex.html#SwL(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SR", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SR", "link" : "superficial\/PureTwoComplex.html#SR(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SL", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SL", "link" : "superficial\/PureTwoComplex.html#SL(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "R", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.R", "link" : "superficial\/PureTwoComplex.html#R(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "L", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.L", "link" : "superficial\/PureTwoComplex.html#L(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "slightRight", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.slightRight", "link" : "superficial\/PureTwoComplex.html#slightRight(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "slightLeft", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.slightLeft", "link" : "superficial\/PureTwoComplex.html#slightLeft(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "turnRight", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.turnRight", "link" : "superficial\/PureTwoComplex.html#turnRight(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "turnLeft", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.turnLeft", "link" : "superficial\/PureTwoComplex.html#turnLeft(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "subComplex", "tail" : "(vs: Set[Vertex]): TwoComplex", "member" : "superficial.TwoComplex.subComplex", "link" : "superficial\/PureTwoComplex.html#subComplex(vs:Set[superficial.Vertex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addTwoComplexes", "tail" : "(complexes: Set[TwoComplex]): TwoComplex", "member" : "superficial.TwoComplex.addTwoComplexes", "link" : "superficial\/PureTwoComplex.html#addTwoComplexes(complexes:Set[superficial.TwoComplex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addFaces", "tail" : "(fcs: Set[Polygon]): TwoComplex", "member" : "superficial.TwoComplex.addFaces", "link" : "superficial\/PureTwoComplex.html#addFaces(fcs:Set[superficial.Polygon]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addEdges", "tail" : "(eds: Set[Edge]): TwoComplex", "member" : "superficial.TwoComplex.addEdges", "link" : "superficial\/PureTwoComplex.html#addEdges(eds:Set[superficial.Edge]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addVertices", "tail" : "(vs: Set[Vertex]): TwoComplex", "member" : "superficial.TwoComplex.addVertices", "link" : "superficial\/PureTwoComplex.html#addVertices(vs:Set[superficial.Vertex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "isSurfaceWithBoundary", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isSurfaceWithBoundary", "link" : "superficial\/PureTwoComplex.html#isSurfaceWithBoundary:Boolean", "kind" : "def"}, {"label" : "isClosedSurface", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isClosedSurface", "link" : "superficial\/PureTwoComplex.html#isClosedSurface:Boolean", "kind" : "def"}, {"label" : "isEdgeAtBoundary", "tail" : "(e: Edge): Boolean", "member" : "superficial.TwoComplex.isEdgeAtBoundary", "link" : "superficial\/PureTwoComplex.html#isEdgeAtBoundary(e:superficial.Edge):Boolean", "kind" : "def"}, {"label" : "edgeOccurences", "tail" : "(e: Edge): Int", "member" : "superficial.TwoComplex.edgeOccurences", "link" : "superficial\/PureTwoComplex.html#edgeOccurences(e:superficial.Edge):Int", "kind" : "def"}, {"label" : "transitiveRotations", "tail" : "(v: Vertex): Boolean", "member" : "superficial.TwoComplex.transitiveRotations", "link" : "superficial\/PureTwoComplex.html#transitiveRotations(v:superficial.Vertex):Boolean", "kind" : "def"}, {"label" : "degree", "tail" : "(v: Vertex): Int", "member" : "superficial.TwoComplex.degree", "link" : "superficial\/PureTwoComplex.html#degree(v:superficial.Vertex):Int", "kind" : "def"}, {"label" : "edgesEndingAt", "tail" : "(v: Vertex): Set[Edge]", "member" : "superficial.TwoComplex.edgesEndingAt", "link" : "superficial\/PureTwoComplex.html#edgesEndingAt(v:superficial.Vertex):scala.collection.immutable.Set[superficial.Edge]", "kind" : "def"}, {"label" : "allEdgesToTheRightOf", "tail" : "(e: Edge): Set[Edge]", "member" : "superficial.TwoComplex.allEdgesToTheRightOf", "link" : "superficial\/PureTwoComplex.html#allEdgesToTheRightOf(e:superficial.Edge):Set[superficial.Edge]", "kind" : "def"}, {"label" : "allEdgesToTheLeftOf", "tail" : "(e: Edge): Set[Edge]", "member" : "superficial.TwoComplex.allEdgesToTheLeftOf", "link" : "superficial\/PureTwoComplex.html#allEdgesToTheLeftOf(e:superficial.Edge):Set[superficial.Edge]", "kind" : "def"}, {"label" : "orbit", "tail" : "(e: Edge, steps: Int, opt: (Edge) => Option[Edge], accum: Set[Edge]): Set[Edge]", "member" : "superficial.TwoComplex.orbit", "link" : "superficial\/PureTwoComplex.html#orbit(e:superficial.Edge,steps:Int,opt:superficial.Edge=>Option[superficial.Edge],accum:Set[superficial.Edge]):Set[superficial.Edge]", "kind" : "def"}, {"label" : "rotateRightOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.rotateRightOpt", "link" : "superficial\/PureTwoComplex.html#rotateRightOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "rotateLeftOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.rotateLeftOpt", "link" : "superficial\/PureTwoComplex.html#rotateLeftOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "predOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.predOpt", "link" : "superficial\/PureTwoComplex.html#predOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "succOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.succOpt", "link" : "superficial\/PureTwoComplex.html#succOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "isConnectedComplex", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isConnectedComplex", "link" : "superficial\/PureTwoComplex.html#isConnectedComplex:Boolean", "kind" : "def"}, {"label" : "connectedComponent", "tail" : "(v: Vertex): Set[Vertex]", "member" : "superficial.TwoComplex.connectedComponent", "link" : "superficial\/PureTwoComplex.html#connectedComponent(v:superficial.Vertex):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "maxSetNbr", "tail" : "(s: Set[Vertex]): Set[Vertex]", "member" : "superficial.TwoComplex.maxSetNbr", "link" : "superficial\/PureTwoComplex.html#maxSetNbr(s:Set[superficial.Vertex]):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "setNbr", "tail" : "(s: Set[Vertex]): Set[Vertex]", "member" : "superficial.TwoComplex.setNbr", "link" : "superficial\/PureTwoComplex.html#setNbr(s:Set[superficial.Vertex]):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "vertexNbr", "tail" : "(v: Vertex): Set[Vertex]", "member" : "superficial.TwoComplex.vertexNbr", "link" : "superficial\/PureTwoComplex.html#vertexNbr(v:superficial.Vertex):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "collapseEdge", "tail" : "(e: Edge): (TwoComplex, ((EdgePath) => EdgePath, (EdgePath) => EdgePath))", "member" : "superficial.TwoComplex.collapseEdge", "link" : "superficial\/PureTwoComplex.html#collapseEdge(e:superficial.Edge):(superficial.TwoComplex,(superficial.EdgePath=>superficial.EdgePath,superficial.EdgePath=>superficial.EdgePath))", "kind" : "def"}, {"label" : "normalArcs", "tail" : "(): Set[NormalArc]", "member" : "superficial.TwoComplex.normalArcs", "link" : "superficial\/PureTwoComplex.html#normalArcs:Set[superficial.NormalArc]", "kind" : "def"}, {"label" : "edgeIndices", "tail" : "(edge: Edge): Set[(Polygon, Index, Boolean)]", "member" : "superficial.TwoComplex.edgeIndices", "link" : "superficial\/PureTwoComplex.html#edgeIndices(edge:superficial.Edge):Set[(superficial.Polygon,superficial.Polygon.Index,Boolean)]", "kind" : "def"}, {"label" : "facesWithEdge", "tail" : "(edge: Edge): Set[Polygon]", "member" : "superficial.TwoComplex.facesWithEdge", "link" : "superficial\/PureTwoComplex.html#facesWithEdge(edge:superficial.Edge):Set[superficial.Polygon]", "kind" : "def"}, {"label" : "vertexIndex", "tail" : "(v: Vertex): Option[Int]", "member" : "superficial.TwoComplex.vertexIndex", "link" : "superficial\/PureTwoComplex.html#vertexIndex(v:superficial.Vertex):Option[Int]", "kind" : "def"}, {"label" : "indexedVertices", "tail" : ": Set[(Vertex, Int)]", "member" : "superficial.TwoComplex.indexedVertices", "link" : "superficial\/PureTwoComplex.html#indexedVertices:scala.collection.immutable.Set[(superficial.Vertex,Int)]", "kind" : "lazy val"}, {"label" : "chi", "tail" : ": Int", "member" : "superficial.TwoComplex.chi", "link" : "superficial\/PureTwoComplex.html#chi:Int", "kind" : "lazy val"}, {"label" : "edgeIndex", "tail" : "(edge: Edge): Option[(Int, Boolean)]", "member" : "superficial.TwoComplex.edgeIndex", "link" : "superficial\/PureTwoComplex.html#edgeIndex(edge:superficial.Edge):Option[(Int,Boolean)]", "kind" : "def"}, {"label" : "halfEdges", "tail" : ": Set[Edge]", "member" : "superficial.TwoComplex.halfEdges", "link" : "superficial\/PureTwoComplex.html#halfEdges:Set[superficial.Edge]", "kind" : "lazy val"}, {"label" : "positiveEdges", "tail" : ": Vector[OrientedEdge]", "member" : "superficial.TwoComplex.positiveEdges", "link" : "superficial\/PureTwoComplex.html#positiveEdges:Vector[superficial.OrientedEdge]", "kind" : "lazy val"}, {"label" : "checkComplex", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.checkComplex", "link" : "superficial\/PureTwoComplex.html#checkComplex:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/PureTwoComplex.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/PureTwoComplex.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/PureTwoComplex.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/PureTwoComplex.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/PureTwoComplex.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/PureTwoComplex.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/PureTwoComplex.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/PureTwoComplex.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/PureTwoComplex.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/PureTwoComplex.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/PureTwoComplex.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/PureTwoComplex.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/PureTwoComplex.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/PureTwoComplex.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/PureTwoComplex.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/PureTwoComplex.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/PureTwoComplex.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/PureTwoComplex.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/PureTwoComplex.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "faces", "tail" : ": Set[Polygon]", "member" : "superficial.PureTwoComplex.faces", "link" : "superficial\/PureTwoComplex.html#faces:Set[superficial.Polygon]", "kind" : "abstract val"}], "shortDescription" : "A two-complex with all vertices and edges contained in faces, hence determined by its faces."}, {"name" : "superficial.QuadPlot", "shortDescription" : "", "members_class" : [{"label" : "quadEdgeSVG", "tail" : "(paths: EdgePath*): Elem", "member" : "superficial.QuadPlot.quadEdgeSVG", "link" : "superficial\/QuadPlot.html#quadEdgeSVG(paths:superficial.EdgePath*):scala.xml.Elem", "kind" : "def"}, {"label" : "quadEdgeLines", "tail" : "(path: EdgePath, shift: Double, strokeArray: Option[String]): Vector[Elem]", "member" : "superficial.QuadPlot.quadEdgeLines", "link" : "superficial\/QuadPlot.html#quadEdgeLines(path:superficial.EdgePath,shift:Double,strokeArray:Option[String]):Vector[scala.xml.Elem]", "kind" : "def"}, {"label" : "vecEdgeLines", "tail" : "(qes: Vector[QuadEdge], index: Int, length: Int, shift: Double, strokeArray: Option[String]): Vector[Elem]", "member" : "superficial.QuadPlot.vecEdgeLines", "link" : "superficial\/QuadPlot.html#vecEdgeLines(qes:Vector[superficial.Quadrangulation.QuadEdge],index:Int,length:Int,shift:Double,strokeArray:Option[String]):Vector[scala.xml.Elem]", "kind" : "def"}, {"label" : "edgeLine", "tail" : "(qe: QuadEdge, index: Int, length: Int, shift: Double, strokeArray: Option[String]): Vector[Elem]", "member" : "superficial.QuadPlot.edgeLine", "link" : "superficial\/QuadPlot.html#edgeLine(qe:superficial.Quadrangulation.QuadEdge,index:Int,length:Int,shift:Double,strokeArray:Option[String]):Vector[scala.xml.Elem]", "kind" : "def"}, {"label" : "quadEdges", "tail" : "(path: EdgePath): Vector[QuadEdge]", "member" : "superficial.QuadPlot.quadEdges", "link" : "superficial\/QuadPlot.html#quadEdges(path:superficial.EdgePath):Vector[superficial.Quadrangulation.QuadEdge]", "kind" : "def"}, {"label" : "F", "tail" : ": Face", "member" : "superficial.QuadPlot.F", "link" : "superficial\/QuadPlot.html#F:superficial.ClosedSurface.Face", "kind" : "val"}, {"label" : "V", "tail" : ": ClosedSurface.V.type", "member" : "superficial.QuadPlot.V", "link" : "superficial\/QuadPlot.html#V:superficial.ClosedSurface.V.type", "kind" : "val"}, {"label" : "perturbedCentre", "tail" : "(index: Int, shift: Double): (Double, Double)", "member" : "superficial.QuadPlot.perturbedCentre", "link" : "superficial\/QuadPlot.html#perturbedCentre(index:Int,shift:Double):(Double,Double)", "kind" : "def"}, {"label" : "perturbedVertex", "tail" : "(k: Int, shift: Double): (Double, Double)", "member" : "superficial.QuadPlot.perturbedVertex", "link" : "superficial\/QuadPlot.html#perturbedVertex(k:Int,shift:Double):(Double,Double)", "kind" : "def"}, {"label" : "sides", "tail" : ": List[Elem]", "member" : "superficial.QuadPlot.sides", "link" : "superficial\/QuadPlot.html#sides:List[scala.xml.Elem]", "kind" : "lazy val"}, {"label" : "bBarEdge", "tail" : "(k: Int): Vector[Elem]", "member" : "superficial.QuadPlot.bBarEdge", "link" : "superficial\/QuadPlot.html#bBarEdge(k:Int):Vector[scala.xml.Elem]", "kind" : "def"}, {"label" : "aBarEdge", "tail" : "(k: Int): Vector[Elem]", "member" : "superficial.QuadPlot.aBarEdge", "link" : "superficial\/QuadPlot.html#aBarEdge(k:Int):Vector[scala.xml.Elem]", "kind" : "def"}, {"label" : "bEdge", "tail" : "(k: Int): Vector[Elem]", "member" : "superficial.QuadPlot.bEdge", "link" : "superficial\/QuadPlot.html#bEdge(k:Int):Vector[scala.xml.Elem]", "kind" : "def"}, {"label" : "aEdge", "tail" : "(k: Int): Vector[Elem]", "member" : "superficial.QuadPlot.aEdge", "link" : "superficial\/QuadPlot.html#aEdge(k:Int):Vector[scala.xml.Elem]", "kind" : "def"}, {"label" : "vertexPosition", "tail" : "(k: Int): (Double, Double)", "member" : "superficial.QuadPlot.vertexPosition", "link" : "superficial\/QuadPlot.html#vertexPosition(k:Int):(Double,Double)", "kind" : "def"}, {"member" : "superficial.QuadPlot#<init>", "error" : "unsupported entity"}, {"label" : "genus", "tail" : ": Int", "member" : "superficial.QuadPlot.genus", "link" : "superficial\/QuadPlot.html#genus:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/QuadPlot.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/QuadPlot.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/QuadPlot.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/QuadPlot.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/QuadPlot.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/QuadPlot.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/QuadPlot.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/QuadPlot.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/QuadPlot.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/QuadPlot.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/QuadPlot.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/QuadPlot.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/QuadPlot.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/QuadPlot.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/QuadPlot.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/QuadPlot.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/QuadPlot.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/QuadPlot.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/QuadPlot.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "superficial\/QuadPlot.html", "kind" : "class"}, {"name" : "superficial.Quadrangulation", "object" : "superficial\/Quadrangulation$.html", "members_object" : [{"label" : "quadrangulate", "tail" : "(twoComplex: TwoComplex): (TwoComplex, ((EdgePath) => EdgePath, (EdgePath) => EdgePath))", "member" : "superficial.Quadrangulation.quadrangulate", "link" : "superficial\/Quadrangulation$.html#quadrangulate(twoComplex:superficial.TwoComplex):(superficial.TwoComplex,(superficial.EdgePath=>superficial.EdgePath,superficial.EdgePath=>superficial.EdgePath))", "kind" : "def"}, {"label" : "mod", "tail" : "(m: Int, n: Int): Int", "member" : "superficial.Quadrangulation.mod", "link" : "superficial\/Quadrangulation$.html#mod(m:Int,n:Int):Int", "kind" : "def"}, {"label" : "QuadFace", "tail" : "", "member" : "superficial.Quadrangulation.QuadFace", "link" : "superficial\/Quadrangulation$.html#QuadFaceextendsPolygonwithProductwithSerializable", "kind" : "case class"}, {"label" : "QuadEdge", "tail" : "", "member" : "superficial.Quadrangulation.QuadEdge", "link" : "superficial\/Quadrangulation$.html#QuadEdgeextendsOrientedEdgewithProductwithSerializable", "kind" : "case class"}, {"label" : "BaryCenter", "tail" : "", "member" : "superficial.Quadrangulation.BaryCenter", "link" : "superficial\/Quadrangulation$.html#BaryCenterextendsVertexwithProductwithSerializable", "kind" : "case class"}, {"label" : "apply", "tail" : "(twoComplex: TwoComplex): Quadrangulation", "member" : "superficial.Quadrangulation.apply", "link" : "superficial\/Quadrangulation$.html#apply(twoComplex:superficial.TwoComplex):superficial.Quadrangulation", "kind" : "def"}, {"label" : "isQuadrangulation", "tail" : "(twoComplex: TwoComplex): Boolean", "member" : "superficial.Quadrangulation.isQuadrangulation", "link" : "superficial\/Quadrangulation$.html#isQuadrangulation(twoComplex:superficial.TwoComplex):Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/Quadrangulation$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/Quadrangulation$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/Quadrangulation$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/Quadrangulation$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/Quadrangulation$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/Quadrangulation$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/Quadrangulation$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Quadrangulation$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Quadrangulation$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Quadrangulation$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/Quadrangulation$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/Quadrangulation$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/Quadrangulation$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/Quadrangulation$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/Quadrangulation$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/Quadrangulation$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/Quadrangulation$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/Quadrangulation$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/Quadrangulation$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "superficial\/Quadrangulation.html", "kind" : "trait", "members_trait" : [{"label" : "turnEdge", "tail" : "(e: Edge, t: Int): Edge", "member" : "superficial.TwoComplex.turnEdge", "link" : "superficial\/Quadrangulation.html#turnEdge(e:superficial.Edge,t:Int):superficial.Edge", "kind" : "def"}, {"label" : "angleBetween", "tail" : "(e1: Edge, e2: Edge): Int", "member" : "superficial.TwoComplex.angleBetween", "link" : "superficial\/Quadrangulation.html#angleBetween(e1:superficial.Edge,e2:superficial.Edge):Int", "kind" : "def"}, {"label" : "turnIndex", "tail" : "(e1: Edge, e2: Edge): Int", "member" : "superficial.TwoComplex.turnIndex", "link" : "superficial\/Quadrangulation.html#turnIndex(e1:superficial.Edge,e2:superficial.Edge):Int", "kind" : "def"}, {"label" : "vectorEdgesToTheRightOf", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorEdgesToTheRightOf", "link" : "superficial\/Quadrangulation.html#vectorEdgesToTheRightOf(e:superficial.Edge):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorEdgesToTheLeftOf", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorEdgesToTheLeftOf", "link" : "superficial\/Quadrangulation.html#vectorEdgesToTheLeftOf(e:superficial.Edge):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorRightTurns", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorRightTurns", "link" : "superficial\/Quadrangulation.html#vectorRightTurns(e:superficial.Edge):scala.collection.immutable.Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorLeftTurns", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorLeftTurns", "link" : "superficial\/Quadrangulation.html#vectorLeftTurns(e:superficial.Edge):scala.collection.immutable.Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorOrbitFin", "tail" : "(e: Edge, opt: (Edge) => Option[Edge], accum: Vector[Edge], n: Int): Vector[Edge]", "member" : "superficial.TwoComplex.vectorOrbitFin", "link" : "superficial\/Quadrangulation.html#vectorOrbitFin(e:superficial.Edge,opt:superficial.Edge=>Option[superficial.Edge],accum:Vector[superficial.Edge],n:Int):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorOrbit", "tail" : "(e: Edge, opt: (Edge) => Option[Edge], accum: Vector[Edge]): Vector[Edge]", "member" : "superficial.TwoComplex.vectorOrbit", "link" : "superficial\/Quadrangulation.html#vectorOrbit(e:superficial.Edge,opt:superficial.Edge=>Option[superficial.Edge],accum:Vector[superficial.Edge]):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "SwR", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SwR", "link" : "superficial\/Quadrangulation.html#SwR(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SwL", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SwL", "link" : "superficial\/Quadrangulation.html#SwL(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SR", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SR", "link" : "superficial\/Quadrangulation.html#SR(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SL", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SL", "link" : "superficial\/Quadrangulation.html#SL(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "R", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.R", "link" : "superficial\/Quadrangulation.html#R(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "L", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.L", "link" : "superficial\/Quadrangulation.html#L(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "slightRight", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.slightRight", "link" : "superficial\/Quadrangulation.html#slightRight(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "slightLeft", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.slightLeft", "link" : "superficial\/Quadrangulation.html#slightLeft(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "turnRight", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.turnRight", "link" : "superficial\/Quadrangulation.html#turnRight(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "turnLeft", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.turnLeft", "link" : "superficial\/Quadrangulation.html#turnLeft(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "subComplex", "tail" : "(vs: Set[Vertex]): TwoComplex", "member" : "superficial.TwoComplex.subComplex", "link" : "superficial\/Quadrangulation.html#subComplex(vs:Set[superficial.Vertex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addTwoComplexes", "tail" : "(complexes: Set[TwoComplex]): TwoComplex", "member" : "superficial.TwoComplex.addTwoComplexes", "link" : "superficial\/Quadrangulation.html#addTwoComplexes(complexes:Set[superficial.TwoComplex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addFaces", "tail" : "(fcs: Set[Polygon]): TwoComplex", "member" : "superficial.TwoComplex.addFaces", "link" : "superficial\/Quadrangulation.html#addFaces(fcs:Set[superficial.Polygon]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addEdges", "tail" : "(eds: Set[Edge]): TwoComplex", "member" : "superficial.TwoComplex.addEdges", "link" : "superficial\/Quadrangulation.html#addEdges(eds:Set[superficial.Edge]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addVertices", "tail" : "(vs: Set[Vertex]): TwoComplex", "member" : "superficial.TwoComplex.addVertices", "link" : "superficial\/Quadrangulation.html#addVertices(vs:Set[superficial.Vertex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "isSurfaceWithBoundary", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isSurfaceWithBoundary", "link" : "superficial\/Quadrangulation.html#isSurfaceWithBoundary:Boolean", "kind" : "def"}, {"label" : "isClosedSurface", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isClosedSurface", "link" : "superficial\/Quadrangulation.html#isClosedSurface:Boolean", "kind" : "def"}, {"label" : "isEdgeAtBoundary", "tail" : "(e: Edge): Boolean", "member" : "superficial.TwoComplex.isEdgeAtBoundary", "link" : "superficial\/Quadrangulation.html#isEdgeAtBoundary(e:superficial.Edge):Boolean", "kind" : "def"}, {"label" : "edgeOccurences", "tail" : "(e: Edge): Int", "member" : "superficial.TwoComplex.edgeOccurences", "link" : "superficial\/Quadrangulation.html#edgeOccurences(e:superficial.Edge):Int", "kind" : "def"}, {"label" : "transitiveRotations", "tail" : "(v: Vertex): Boolean", "member" : "superficial.TwoComplex.transitiveRotations", "link" : "superficial\/Quadrangulation.html#transitiveRotations(v:superficial.Vertex):Boolean", "kind" : "def"}, {"label" : "degree", "tail" : "(v: Vertex): Int", "member" : "superficial.TwoComplex.degree", "link" : "superficial\/Quadrangulation.html#degree(v:superficial.Vertex):Int", "kind" : "def"}, {"label" : "edgesEndingAt", "tail" : "(v: Vertex): Set[Edge]", "member" : "superficial.TwoComplex.edgesEndingAt", "link" : "superficial\/Quadrangulation.html#edgesEndingAt(v:superficial.Vertex):scala.collection.immutable.Set[superficial.Edge]", "kind" : "def"}, {"label" : "allEdgesToTheRightOf", "tail" : "(e: Edge): Set[Edge]", "member" : "superficial.TwoComplex.allEdgesToTheRightOf", "link" : "superficial\/Quadrangulation.html#allEdgesToTheRightOf(e:superficial.Edge):Set[superficial.Edge]", "kind" : "def"}, {"label" : "allEdgesToTheLeftOf", "tail" : "(e: Edge): Set[Edge]", "member" : "superficial.TwoComplex.allEdgesToTheLeftOf", "link" : "superficial\/Quadrangulation.html#allEdgesToTheLeftOf(e:superficial.Edge):Set[superficial.Edge]", "kind" : "def"}, {"label" : "orbit", "tail" : "(e: Edge, steps: Int, opt: (Edge) => Option[Edge], accum: Set[Edge]): Set[Edge]", "member" : "superficial.TwoComplex.orbit", "link" : "superficial\/Quadrangulation.html#orbit(e:superficial.Edge,steps:Int,opt:superficial.Edge=>Option[superficial.Edge],accum:Set[superficial.Edge]):Set[superficial.Edge]", "kind" : "def"}, {"label" : "rotateRightOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.rotateRightOpt", "link" : "superficial\/Quadrangulation.html#rotateRightOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "rotateLeftOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.rotateLeftOpt", "link" : "superficial\/Quadrangulation.html#rotateLeftOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "predOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.predOpt", "link" : "superficial\/Quadrangulation.html#predOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "succOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.succOpt", "link" : "superficial\/Quadrangulation.html#succOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "isConnectedComplex", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isConnectedComplex", "link" : "superficial\/Quadrangulation.html#isConnectedComplex:Boolean", "kind" : "def"}, {"label" : "connectedComponent", "tail" : "(v: Vertex): Set[Vertex]", "member" : "superficial.TwoComplex.connectedComponent", "link" : "superficial\/Quadrangulation.html#connectedComponent(v:superficial.Vertex):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "maxSetNbr", "tail" : "(s: Set[Vertex]): Set[Vertex]", "member" : "superficial.TwoComplex.maxSetNbr", "link" : "superficial\/Quadrangulation.html#maxSetNbr(s:Set[superficial.Vertex]):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "setNbr", "tail" : "(s: Set[Vertex]): Set[Vertex]", "member" : "superficial.TwoComplex.setNbr", "link" : "superficial\/Quadrangulation.html#setNbr(s:Set[superficial.Vertex]):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "vertexNbr", "tail" : "(v: Vertex): Set[Vertex]", "member" : "superficial.TwoComplex.vertexNbr", "link" : "superficial\/Quadrangulation.html#vertexNbr(v:superficial.Vertex):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "collapseEdge", "tail" : "(e: Edge): (TwoComplex, ((EdgePath) => EdgePath, (EdgePath) => EdgePath))", "member" : "superficial.TwoComplex.collapseEdge", "link" : "superficial\/Quadrangulation.html#collapseEdge(e:superficial.Edge):(superficial.TwoComplex,(superficial.EdgePath=>superficial.EdgePath,superficial.EdgePath=>superficial.EdgePath))", "kind" : "def"}, {"label" : "normalArcs", "tail" : "(): Set[NormalArc]", "member" : "superficial.TwoComplex.normalArcs", "link" : "superficial\/Quadrangulation.html#normalArcs:Set[superficial.NormalArc]", "kind" : "def"}, {"label" : "edgeIndices", "tail" : "(edge: Edge): Set[(Polygon, Index, Boolean)]", "member" : "superficial.TwoComplex.edgeIndices", "link" : "superficial\/Quadrangulation.html#edgeIndices(edge:superficial.Edge):Set[(superficial.Polygon,superficial.Polygon.Index,Boolean)]", "kind" : "def"}, {"label" : "facesWithEdge", "tail" : "(edge: Edge): Set[Polygon]", "member" : "superficial.TwoComplex.facesWithEdge", "link" : "superficial\/Quadrangulation.html#facesWithEdge(edge:superficial.Edge):Set[superficial.Polygon]", "kind" : "def"}, {"label" : "vertexIndex", "tail" : "(v: Vertex): Option[Int]", "member" : "superficial.TwoComplex.vertexIndex", "link" : "superficial\/Quadrangulation.html#vertexIndex(v:superficial.Vertex):Option[Int]", "kind" : "def"}, {"label" : "indexedVertices", "tail" : ": Set[(Vertex, Int)]", "member" : "superficial.TwoComplex.indexedVertices", "link" : "superficial\/Quadrangulation.html#indexedVertices:scala.collection.immutable.Set[(superficial.Vertex,Int)]", "kind" : "lazy val"}, {"label" : "chi", "tail" : ": Int", "member" : "superficial.TwoComplex.chi", "link" : "superficial\/Quadrangulation.html#chi:Int", "kind" : "lazy val"}, {"label" : "edgeIndex", "tail" : "(edge: Edge): Option[(Int, Boolean)]", "member" : "superficial.TwoComplex.edgeIndex", "link" : "superficial\/Quadrangulation.html#edgeIndex(edge:superficial.Edge):Option[(Int,Boolean)]", "kind" : "def"}, {"label" : "halfEdges", "tail" : ": Set[Edge]", "member" : "superficial.TwoComplex.halfEdges", "link" : "superficial\/Quadrangulation.html#halfEdges:Set[superficial.Edge]", "kind" : "lazy val"}, {"label" : "positiveEdges", "tail" : ": Vector[OrientedEdge]", "member" : "superficial.TwoComplex.positiveEdges", "link" : "superficial\/Quadrangulation.html#positiveEdges:Vector[superficial.OrientedEdge]", "kind" : "lazy val"}, {"label" : "checkComplex", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.checkComplex", "link" : "superficial\/Quadrangulation.html#checkComplex:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/Quadrangulation.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/Quadrangulation.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/Quadrangulation.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/Quadrangulation.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/Quadrangulation.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/Quadrangulation.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/Quadrangulation.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Quadrangulation.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Quadrangulation.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Quadrangulation.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/Quadrangulation.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/Quadrangulation.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/Quadrangulation.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/Quadrangulation.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/Quadrangulation.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/Quadrangulation.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/Quadrangulation.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/Quadrangulation.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/Quadrangulation.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "vertices", "tail" : ": Set[Vertex]", "member" : "superficial.TwoComplex.vertices", "link" : "superficial\/Quadrangulation.html#vertices:Set[superficial.Vertex]", "kind" : "abstract val"}, {"label" : "edges", "tail" : ": Set[Edge]", "member" : "superficial.TwoComplex.edges", "link" : "superficial\/Quadrangulation.html#edges:Set[superficial.Edge]", "kind" : "abstract val"}, {"label" : "faces", "tail" : ": Set[Polygon]", "member" : "superficial.TwoComplex.faces", "link" : "superficial\/Quadrangulation.html#faces:Set[superficial.Polygon]", "kind" : "abstract val"}], "shortDescription" : ""}, {"name" : "superficial.Quadrilateral", "trait" : "superficial\/Quadrilateral.html", "kind" : "trait", "members_trait" : [{"label" : "sides", "tail" : ": Int", "member" : "superficial.Quadrilateral.sides", "link" : "superficial\/Quadrilateral.html#sides:Int", "kind" : "val"}, {"label" : "boundaryIndex", "tail" : "(e: Edge): Set[(Int, Boolean)]", "member" : "superficial.Polygon.boundaryIndex", "link" : "superficial\/Quadrilateral.html#boundaryIndex(e:superficial.Edge):Set[(Int,Boolean)]", "kind" : "def"}, {"label" : "edges", "tail" : ": Set[Edge]", "member" : "superficial.Polygon.edges", "link" : "superficial\/Quadrilateral.html#edges:Set[superficial.Edge]", "kind" : "lazy val"}, {"label" : "del", "tail" : "(): FormalSum[Edge]", "member" : "superficial.Polygon.del", "link" : "superficial\/Quadrilateral.html#del:superficial.FormalSum[superficial.Edge]", "kind" : "def"}, {"label" : "checkPoly", "tail" : "(): Boolean", "member" : "superficial.Polygon.checkPoly", "link" : "superficial\/Quadrilateral.html#checkPoly:Boolean", "kind" : "def"}, {"label" : "checkBoundary", "tail" : "(): Boolean", "member" : "superficial.Polygon.checkBoundary", "link" : "superficial\/Quadrilateral.html#checkBoundary:Boolean", "kind" : "def"}, {"label" : "basePoint", "tail" : ": Vertex", "member" : "superficial.Polygon.basePoint", "link" : "superficial\/Quadrilateral.html#basePoint:superficial.Vertex", "kind" : "lazy val"}, {"label" : "indices", "tail" : ": Vector[Index]", "member" : "superficial.Polygon.indices", "link" : "superficial\/Quadrilateral.html#indices:Vector[superficial.Polygon.Index]", "kind" : "lazy val"}, {"label" : "faces", "tail" : ": Set[Polygon]", "member" : "superficial.Polygon.faces", "link" : "superficial\/Quadrilateral.html#faces:scala.collection.immutable.Set[superficial.Polygon]", "kind" : "lazy val"}, {"label" : "turnEdge", "tail" : "(e: Edge, t: Int): Edge", "member" : "superficial.TwoComplex.turnEdge", "link" : "superficial\/Quadrilateral.html#turnEdge(e:superficial.Edge,t:Int):superficial.Edge", "kind" : "def"}, {"label" : "angleBetween", "tail" : "(e1: Edge, e2: Edge): Int", "member" : "superficial.TwoComplex.angleBetween", "link" : "superficial\/Quadrilateral.html#angleBetween(e1:superficial.Edge,e2:superficial.Edge):Int", "kind" : "def"}, {"label" : "turnIndex", "tail" : "(e1: Edge, e2: Edge): Int", "member" : "superficial.TwoComplex.turnIndex", "link" : "superficial\/Quadrilateral.html#turnIndex(e1:superficial.Edge,e2:superficial.Edge):Int", "kind" : "def"}, {"label" : "vectorEdgesToTheRightOf", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorEdgesToTheRightOf", "link" : "superficial\/Quadrilateral.html#vectorEdgesToTheRightOf(e:superficial.Edge):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorEdgesToTheLeftOf", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorEdgesToTheLeftOf", "link" : "superficial\/Quadrilateral.html#vectorEdgesToTheLeftOf(e:superficial.Edge):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorRightTurns", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorRightTurns", "link" : "superficial\/Quadrilateral.html#vectorRightTurns(e:superficial.Edge):scala.collection.immutable.Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorLeftTurns", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorLeftTurns", "link" : "superficial\/Quadrilateral.html#vectorLeftTurns(e:superficial.Edge):scala.collection.immutable.Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorOrbitFin", "tail" : "(e: Edge, opt: (Edge) => Option[Edge], accum: Vector[Edge], n: Int): Vector[Edge]", "member" : "superficial.TwoComplex.vectorOrbitFin", "link" : "superficial\/Quadrilateral.html#vectorOrbitFin(e:superficial.Edge,opt:superficial.Edge=>Option[superficial.Edge],accum:Vector[superficial.Edge],n:Int):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorOrbit", "tail" : "(e: Edge, opt: (Edge) => Option[Edge], accum: Vector[Edge]): Vector[Edge]", "member" : "superficial.TwoComplex.vectorOrbit", "link" : "superficial\/Quadrilateral.html#vectorOrbit(e:superficial.Edge,opt:superficial.Edge=>Option[superficial.Edge],accum:Vector[superficial.Edge]):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "SwR", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SwR", "link" : "superficial\/Quadrilateral.html#SwR(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SwL", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SwL", "link" : "superficial\/Quadrilateral.html#SwL(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SR", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SR", "link" : "superficial\/Quadrilateral.html#SR(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SL", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SL", "link" : "superficial\/Quadrilateral.html#SL(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "R", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.R", "link" : "superficial\/Quadrilateral.html#R(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "L", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.L", "link" : "superficial\/Quadrilateral.html#L(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "slightRight", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.slightRight", "link" : "superficial\/Quadrilateral.html#slightRight(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "slightLeft", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.slightLeft", "link" : "superficial\/Quadrilateral.html#slightLeft(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "turnRight", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.turnRight", "link" : "superficial\/Quadrilateral.html#turnRight(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "turnLeft", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.turnLeft", "link" : "superficial\/Quadrilateral.html#turnLeft(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "subComplex", "tail" : "(vs: Set[Vertex]): TwoComplex", "member" : "superficial.TwoComplex.subComplex", "link" : "superficial\/Quadrilateral.html#subComplex(vs:Set[superficial.Vertex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addTwoComplexes", "tail" : "(complexes: Set[TwoComplex]): TwoComplex", "member" : "superficial.TwoComplex.addTwoComplexes", "link" : "superficial\/Quadrilateral.html#addTwoComplexes(complexes:Set[superficial.TwoComplex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addFaces", "tail" : "(fcs: Set[Polygon]): TwoComplex", "member" : "superficial.TwoComplex.addFaces", "link" : "superficial\/Quadrilateral.html#addFaces(fcs:Set[superficial.Polygon]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addEdges", "tail" : "(eds: Set[Edge]): TwoComplex", "member" : "superficial.TwoComplex.addEdges", "link" : "superficial\/Quadrilateral.html#addEdges(eds:Set[superficial.Edge]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addVertices", "tail" : "(vs: Set[Vertex]): TwoComplex", "member" : "superficial.TwoComplex.addVertices", "link" : "superficial\/Quadrilateral.html#addVertices(vs:Set[superficial.Vertex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "isSurfaceWithBoundary", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isSurfaceWithBoundary", "link" : "superficial\/Quadrilateral.html#isSurfaceWithBoundary:Boolean", "kind" : "def"}, {"label" : "isClosedSurface", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isClosedSurface", "link" : "superficial\/Quadrilateral.html#isClosedSurface:Boolean", "kind" : "def"}, {"label" : "isEdgeAtBoundary", "tail" : "(e: Edge): Boolean", "member" : "superficial.TwoComplex.isEdgeAtBoundary", "link" : "superficial\/Quadrilateral.html#isEdgeAtBoundary(e:superficial.Edge):Boolean", "kind" : "def"}, {"label" : "edgeOccurences", "tail" : "(e: Edge): Int", "member" : "superficial.TwoComplex.edgeOccurences", "link" : "superficial\/Quadrilateral.html#edgeOccurences(e:superficial.Edge):Int", "kind" : "def"}, {"label" : "transitiveRotations", "tail" : "(v: Vertex): Boolean", "member" : "superficial.TwoComplex.transitiveRotations", "link" : "superficial\/Quadrilateral.html#transitiveRotations(v:superficial.Vertex):Boolean", "kind" : "def"}, {"label" : "degree", "tail" : "(v: Vertex): Int", "member" : "superficial.TwoComplex.degree", "link" : "superficial\/Quadrilateral.html#degree(v:superficial.Vertex):Int", "kind" : "def"}, {"label" : "edgesEndingAt", "tail" : "(v: Vertex): Set[Edge]", "member" : "superficial.TwoComplex.edgesEndingAt", "link" : "superficial\/Quadrilateral.html#edgesEndingAt(v:superficial.Vertex):scala.collection.immutable.Set[superficial.Edge]", "kind" : "def"}, {"label" : "allEdgesToTheRightOf", "tail" : "(e: Edge): Set[Edge]", "member" : "superficial.TwoComplex.allEdgesToTheRightOf", "link" : "superficial\/Quadrilateral.html#allEdgesToTheRightOf(e:superficial.Edge):Set[superficial.Edge]", "kind" : "def"}, {"label" : "allEdgesToTheLeftOf", "tail" : "(e: Edge): Set[Edge]", "member" : "superficial.TwoComplex.allEdgesToTheLeftOf", "link" : "superficial\/Quadrilateral.html#allEdgesToTheLeftOf(e:superficial.Edge):Set[superficial.Edge]", "kind" : "def"}, {"label" : "orbit", "tail" : "(e: Edge, steps: Int, opt: (Edge) => Option[Edge], accum: Set[Edge]): Set[Edge]", "member" : "superficial.TwoComplex.orbit", "link" : "superficial\/Quadrilateral.html#orbit(e:superficial.Edge,steps:Int,opt:superficial.Edge=>Option[superficial.Edge],accum:Set[superficial.Edge]):Set[superficial.Edge]", "kind" : "def"}, {"label" : "rotateRightOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.rotateRightOpt", "link" : "superficial\/Quadrilateral.html#rotateRightOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "rotateLeftOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.rotateLeftOpt", "link" : "superficial\/Quadrilateral.html#rotateLeftOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "predOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.predOpt", "link" : "superficial\/Quadrilateral.html#predOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "succOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.succOpt", "link" : "superficial\/Quadrilateral.html#succOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "isConnectedComplex", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isConnectedComplex", "link" : "superficial\/Quadrilateral.html#isConnectedComplex:Boolean", "kind" : "def"}, {"label" : "connectedComponent", "tail" : "(v: Vertex): Set[Vertex]", "member" : "superficial.TwoComplex.connectedComponent", "link" : "superficial\/Quadrilateral.html#connectedComponent(v:superficial.Vertex):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "maxSetNbr", "tail" : "(s: Set[Vertex]): Set[Vertex]", "member" : "superficial.TwoComplex.maxSetNbr", "link" : "superficial\/Quadrilateral.html#maxSetNbr(s:Set[superficial.Vertex]):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "setNbr", "tail" : "(s: Set[Vertex]): Set[Vertex]", "member" : "superficial.TwoComplex.setNbr", "link" : "superficial\/Quadrilateral.html#setNbr(s:Set[superficial.Vertex]):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "vertexNbr", "tail" : "(v: Vertex): Set[Vertex]", "member" : "superficial.TwoComplex.vertexNbr", "link" : "superficial\/Quadrilateral.html#vertexNbr(v:superficial.Vertex):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "collapseEdge", "tail" : "(e: Edge): (TwoComplex, ((EdgePath) => EdgePath, (EdgePath) => EdgePath))", "member" : "superficial.TwoComplex.collapseEdge", "link" : "superficial\/Quadrilateral.html#collapseEdge(e:superficial.Edge):(superficial.TwoComplex,(superficial.EdgePath=>superficial.EdgePath,superficial.EdgePath=>superficial.EdgePath))", "kind" : "def"}, {"label" : "normalArcs", "tail" : "(): Set[NormalArc]", "member" : "superficial.TwoComplex.normalArcs", "link" : "superficial\/Quadrilateral.html#normalArcs:Set[superficial.NormalArc]", "kind" : "def"}, {"label" : "edgeIndices", "tail" : "(edge: Edge): Set[(Polygon, Index, Boolean)]", "member" : "superficial.TwoComplex.edgeIndices", "link" : "superficial\/Quadrilateral.html#edgeIndices(edge:superficial.Edge):Set[(superficial.Polygon,superficial.Polygon.Index,Boolean)]", "kind" : "def"}, {"label" : "facesWithEdge", "tail" : "(edge: Edge): Set[Polygon]", "member" : "superficial.TwoComplex.facesWithEdge", "link" : "superficial\/Quadrilateral.html#facesWithEdge(edge:superficial.Edge):Set[superficial.Polygon]", "kind" : "def"}, {"label" : "vertexIndex", "tail" : "(v: Vertex): Option[Int]", "member" : "superficial.TwoComplex.vertexIndex", "link" : "superficial\/Quadrilateral.html#vertexIndex(v:superficial.Vertex):Option[Int]", "kind" : "def"}, {"label" : "indexedVertices", "tail" : ": Set[(Vertex, Int)]", "member" : "superficial.TwoComplex.indexedVertices", "link" : "superficial\/Quadrilateral.html#indexedVertices:scala.collection.immutable.Set[(superficial.Vertex,Int)]", "kind" : "lazy val"}, {"label" : "chi", "tail" : ": Int", "member" : "superficial.TwoComplex.chi", "link" : "superficial\/Quadrilateral.html#chi:Int", "kind" : "lazy val"}, {"label" : "edgeIndex", "tail" : "(edge: Edge): Option[(Int, Boolean)]", "member" : "superficial.TwoComplex.edgeIndex", "link" : "superficial\/Quadrilateral.html#edgeIndex(edge:superficial.Edge):Option[(Int,Boolean)]", "kind" : "def"}, {"label" : "halfEdges", "tail" : ": Set[Edge]", "member" : "superficial.TwoComplex.halfEdges", "link" : "superficial\/Quadrilateral.html#halfEdges:Set[superficial.Edge]", "kind" : "lazy val"}, {"label" : "positiveEdges", "tail" : ": Vector[OrientedEdge]", "member" : "superficial.TwoComplex.positiveEdges", "link" : "superficial\/Quadrilateral.html#positiveEdges:Vector[superficial.OrientedEdge]", "kind" : "lazy val"}, {"label" : "checkComplex", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.checkComplex", "link" : "superficial\/Quadrilateral.html#checkComplex:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/Quadrilateral.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/Quadrilateral.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/Quadrilateral.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/Quadrilateral.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/Quadrilateral.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/Quadrilateral.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/Quadrilateral.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Quadrilateral.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Quadrilateral.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Quadrilateral.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/Quadrilateral.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/Quadrilateral.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/Quadrilateral.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/Quadrilateral.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/Quadrilateral.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/Quadrilateral.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/Quadrilateral.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/Quadrilateral.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/Quadrilateral.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "vertices", "tail" : ": Set[Vertex]", "member" : "superficial.Polygon.vertices", "link" : "superficial\/Quadrilateral.html#vertices:Set[superficial.Vertex]", "kind" : "abstract val"}, {"label" : "boundary", "tail" : ": Vector[Edge]", "member" : "superficial.Polygon.boundary", "link" : "superficial\/Quadrilateral.html#boundary:Vector[superficial.Edge]", "kind" : "abstract val"}], "shortDescription" : "a quadrilateral is a polygon with four edges."}, {"name" : "superficial.QuotientEdge", "shortDescription" : "An edge obtained by identifications", "members_case class" : [{"label" : "initial", "tail" : "(): QuotientVertex", "member" : "superficial.QuotientEdge.initial", "link" : "superficial\/QuotientEdge.html#initial:superficial.QuotientVertex", "kind" : "def"}, {"label" : "terminal", "tail" : "(): QuotientVertex", "member" : "superficial.QuotientEdge.terminal", "link" : "superficial\/QuotientEdge.html#terminal:superficial.QuotientVertex", "kind" : "def"}, {"label" : "flip", "tail" : "(): QuotientEdge", "member" : "superficial.QuotientEdge.flip", "link" : "superficial\/QuotientEdge.html#flip:superficial.QuotientEdge", "kind" : "def"}, {"member" : "superficial.QuotientEdge#<init>", "error" : "unsupported entity"}, {"label" : "edges", "tail" : ": Set[Edge]", "member" : "superficial.QuotientEdge.edges", "link" : "superficial\/QuotientEdge.html#edges:Set[superficial.Edge]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "superficial\/QuotientEdge.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "del", "tail" : "(): FormalSum[Vertex]", "member" : "superficial.Edge.del", "link" : "superficial\/QuotientEdge.html#del:superficial.FormalSum[superficial.Vertex]", "kind" : "def"}, {"label" : "checkFlip", "tail" : "(): Boolean", "member" : "superficial.Edge.checkFlip", "link" : "superficial\/QuotientEdge.html#checkFlip:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : ": Boolean", "member" : "superficial.Edge.isEmpty", "link" : "superficial\/QuotientEdge.html#isEmpty:Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/QuotientEdge.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/QuotientEdge.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/QuotientEdge.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/QuotientEdge.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/QuotientEdge.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/QuotientEdge.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/QuotientEdge.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/QuotientEdge.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/QuotientEdge.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/QuotientEdge.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/QuotientEdge.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/QuotientEdge.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/QuotientEdge.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/QuotientEdge.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/QuotientEdge.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/QuotientEdge.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "superficial\/QuotientEdge.html", "kind" : "case class"}, {"name" : "superficial.QuotientVertex", "shortDescription" : "A vertex obtained by identifications", "members_case class" : [{"member" : "superficial.QuotientVertex#<init>", "error" : "unsupported entity"}, {"label" : "vertices", "tail" : ": Set[Vertex]", "member" : "superficial.QuotientVertex.vertices", "link" : "superficial\/QuotientVertex.html#vertices:Set[superficial.Vertex]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "superficial\/QuotientVertex.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/QuotientVertex.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/QuotientVertex.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/QuotientVertex.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/QuotientVertex.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/QuotientVertex.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/QuotientVertex.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/QuotientVertex.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/QuotientVertex.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/QuotientVertex.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/QuotientVertex.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/QuotientVertex.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/QuotientVertex.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/QuotientVertex.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/QuotientVertex.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/QuotientVertex.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/QuotientVertex.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "superficial\/QuotientVertex.html", "kind" : "case class"}, {"name" : "superficial.SkewCurve", "shortDescription" : "A curve in the curve system for a pants decomposition for a hyperbolic surface obtained by twisting and regluing along the pants systemTwists and vertex positions are parametrized as fractions of the length, so are in [0, 1].", "object" : "superficial\/SkewCurve$.html", "members_object" : [{"label" : "polyEnumerate", "tail" : "(cs: Vector[Curve], twists: Vector[Double], lengths: Vector[Double]): Vector[Vector[SkewCurve]]", "member" : "superficial.SkewCurve.polyEnumerate", "link" : "superficial\/SkewCurve$.html#polyEnumerate(cs:Vector[superficial.Curve],twists:Vector[Double],lengths:Vector[Double]):Vector[Vector[superficial.SkewCurve]]", "kind" : "def"}, {"label" : "enumerate", "tail" : "(c: Curve, twists: Vector[Double], lengths: Vector[Double]): Vector[SkewCurve]", "member" : "superficial.SkewCurve.enumerate", "link" : "superficial\/SkewCurve$.html#enumerate(c:superficial.Curve,twists:Vector[Double],lengths:Vector[Double]):Vector[superficial.SkewCurve]", "kind" : "def"}, {"label" : "untwisted", "tail" : "(c: Curve, length: Double): SkewCurve", "member" : "superficial.SkewCurve.untwisted", "link" : "superficial\/SkewCurve$.html#untwisted(c:superficial.Curve,length:Double):superficial.SkewCurve", "kind" : "def"}, {"label" : "mod1", "tail" : "(x: Double): Double", "member" : "superficial.SkewCurve.mod1", "link" : "superficial\/SkewCurve$.html#mod1(x:Double):Double", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/SkewCurve$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/SkewCurve$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/SkewCurve$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/SkewCurve$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/SkewCurve$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/SkewCurve$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/SkewCurve$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/SkewCurve$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/SkewCurve$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/SkewCurve$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/SkewCurve$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/SkewCurve$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/SkewCurve$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/SkewCurve$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/SkewCurve$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/SkewCurve$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/SkewCurve$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/SkewCurve$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/SkewCurve$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "verticesOn", "tail" : "(left: Boolean, top: Boolean): Set[Vertex]", "member" : "superficial.SkewCurve.verticesOn", "link" : "superficial\/SkewCurve.html#verticesOn(left:Boolean,top:Boolean):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "edgesOn", "tail" : "(left: Boolean, top: Boolean): Vector[Edge]", "member" : "superficial.SkewCurve.edgesOn", "link" : "superficial\/SkewCurve.html#edgesOn(left:Boolean,top:Boolean):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "initPos", "tail" : "(left: Boolean): Double", "member" : "superficial.SkewCurve.initPos", "link" : "superficial\/SkewCurve.html#initPos(left:Boolean):Double", "kind" : "def"}, {"label" : "verticesToOppositeVertex", "tail" : "(position: Double, positivelyOriented: Boolean): Set[Vertex]", "member" : "superficial.SkewCurve.verticesToOppositeVertex", "link" : "superficial\/SkewCurve.html#verticesToOppositeVertex(position:Double,positivelyOriented:Boolean):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "edgesToOppositeVertex", "tail" : "(position: Double, positivelyOriented: Boolean): Vector[Edge]", "member" : "superficial.SkewCurve.edgesToOppositeVertex", "link" : "superficial\/SkewCurve.html#edgesToOppositeVertex(position:Double,positivelyOriented:Boolean):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "shiftedVertex", "tail" : "(position: Double, positivelyOriented: Boolean): Double", "member" : "superficial.SkewCurve.shiftedVertex", "link" : "superficial\/SkewCurve.html#shiftedVertex(position:Double,positivelyOriented:Boolean):Double", "kind" : "def"}, {"label" : "previousVertex", "tail" : "(position: Double): Double", "member" : "superficial.SkewCurve.previousVertex", "link" : "superficial\/SkewCurve.html#previousVertex(position:Double):Double", "kind" : "def"}, {"label" : "nextVertex", "tail" : "(position: Double): Double", "member" : "superficial.SkewCurve.nextVertex", "link" : "superficial\/SkewCurve.html#nextVertex(position:Double):Double", "kind" : "def"}, {"label" : "contains", "tail" : "(pb: PantsBoundary): Boolean", "member" : "superficial.SkewCurve.contains", "link" : "superficial\/SkewCurve.html#contains(pb:superficial.PantsBoundary):Boolean", "kind" : "def"}, {"label" : "shift", "tail" : ": Double", "member" : "superficial.SkewCurve.shift", "link" : "superficial\/SkewCurve.html#shift:Double", "kind" : "val"}, {"label" : "neighbours", "tail" : ": Set[Index]", "member" : "superficial.SkewCurve.neighbours", "link" : "superficial\/SkewCurve.html#neighbours:Set[superficial.Polygon.Index]", "kind" : "val"}, {"label" : "support", "tail" : ": Set[PantsBoundary]", "member" : "superficial.SkewCurve.support", "link" : "superficial\/SkewCurve.html#support:Set[superficial.PantsBoundary]", "kind" : "val"}, {"label" : "skewLess", "tail" : ": Boolean", "member" : "superficial.SkewCurve.skewLess", "link" : "superficial\/SkewCurve.html#skewLess:Boolean", "kind" : "val"}, {"label" : "base", "tail" : "(): Curve", "member" : "superficial.SkewCurve.base", "link" : "superficial\/SkewCurve.html#base:superficial.Curve", "kind" : "def"}, {"member" : "superficial.SkewCurve#<init>", "error" : "unsupported entity"}, {"label" : "length", "tail" : ": Double", "member" : "superficial.SkewCurve.length", "link" : "superficial\/SkewCurve.html#length:Double", "kind" : "val"}, {"label" : "twist", "tail" : ": Double", "member" : "superficial.SkewCurve.twist", "link" : "superficial\/SkewCurve.html#twist:Double", "kind" : "val"}, {"label" : "right", "tail" : ": PantsBoundary", "member" : "superficial.SkewCurve.right", "link" : "superficial\/SkewCurve.html#right:superficial.PantsBoundary", "kind" : "val"}, {"label" : "left", "tail" : ": PantsBoundary", "member" : "superficial.SkewCurve.left", "link" : "superficial\/SkewCurve.html#left:superficial.PantsBoundary", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "superficial\/SkewCurve.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/SkewCurve.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/SkewCurve.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/SkewCurve.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/SkewCurve.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/SkewCurve.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/SkewCurve.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/SkewCurve.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/SkewCurve.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/SkewCurve.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/SkewCurve.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/SkewCurve.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/SkewCurve.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/SkewCurve.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/SkewCurve.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/SkewCurve.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/SkewCurve.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "superficial\/SkewCurve.html", "kind" : "case class"}, {"name" : "superficial.SkewCurveEdge", "shortDescription" : "An edge on a skew-curve, i.e., curve in a pants decomposition glued with a twist", "members_case class" : [{"label" : "terminal", "tail" : ": SkewCurveVertex", "member" : "superficial.SkewCurveEdge.terminal", "link" : "superficial\/SkewCurveEdge.html#terminal:superficial.SkewCurveVertex", "kind" : "lazy val"}, {"label" : "initial", "tail" : ": SkewCurveVertex", "member" : "superficial.SkewCurveEdge.initial", "link" : "superficial\/SkewCurveEdge.html#initial:superficial.SkewCurveVertex", "kind" : "lazy val"}, {"label" : "flip", "tail" : ": SkewCurveEdge", "member" : "superficial.SkewCurveEdge.flip", "link" : "superficial\/SkewCurveEdge.html#flip:superficial.SkewCurveEdge", "kind" : "lazy val"}, {"label" : "length", "tail" : ": Double", "member" : "superficial.SkewCurveEdge.length", "link" : "superficial\/SkewCurveEdge.html#length:Double", "kind" : "lazy val"}, {"label" : "finalPosition", "tail" : ": Double", "member" : "superficial.SkewCurveEdge.finalPosition", "link" : "superficial\/SkewCurveEdge.html#finalPosition:Double", "kind" : "lazy val"}, {"member" : "superficial.SkewCurveEdge#<init>", "error" : "unsupported entity"}, {"label" : "positivelyOriented", "tail" : ": Boolean", "member" : "superficial.SkewCurveEdge.positivelyOriented", "link" : "superficial\/SkewCurveEdge.html#positivelyOriented:Boolean", "kind" : "val"}, {"label" : "initialPosition", "tail" : ": Double", "member" : "superficial.SkewCurveEdge.initialPosition", "link" : "superficial\/SkewCurveEdge.html#initialPosition:Double", "kind" : "val"}, {"label" : "curve", "tail" : ": SkewCurve", "member" : "superficial.SkewCurveEdge.curve", "link" : "superficial\/SkewCurveEdge.html#curve:superficial.SkewCurve", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "superficial\/SkewCurveEdge.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "del", "tail" : "(): FormalSum[Vertex]", "member" : "superficial.Edge.del", "link" : "superficial\/SkewCurveEdge.html#del:superficial.FormalSum[superficial.Vertex]", "kind" : "def"}, {"label" : "checkFlip", "tail" : "(): Boolean", "member" : "superficial.Edge.checkFlip", "link" : "superficial\/SkewCurveEdge.html#checkFlip:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : ": Boolean", "member" : "superficial.Edge.isEmpty", "link" : "superficial\/SkewCurveEdge.html#isEmpty:Boolean", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/SkewCurveEdge.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/SkewCurveEdge.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/SkewCurveEdge.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/SkewCurveEdge.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/SkewCurveEdge.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/SkewCurveEdge.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/SkewCurveEdge.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/SkewCurveEdge.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/SkewCurveEdge.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/SkewCurveEdge.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/SkewCurveEdge.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/SkewCurveEdge.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/SkewCurveEdge.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/SkewCurveEdge.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/SkewCurveEdge.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/SkewCurveEdge.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "superficial\/SkewCurveEdge.html", "kind" : "case class"}, {"name" : "superficial.SkewCurveVertex", "shortDescription" : "vertex on a skew curve", "members_case class" : [{"member" : "superficial.SkewCurveVertex#<init>", "error" : "unsupported entity"}, {"label" : "position", "tail" : ": Double", "member" : "superficial.SkewCurveVertex.position", "link" : "superficial\/SkewCurveVertex.html#position:Double", "kind" : "val"}, {"label" : "curve", "tail" : ": SkewCurve", "member" : "superficial.SkewCurveVertex.curve", "link" : "superficial\/SkewCurveVertex.html#curve:superficial.SkewCurve", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "superficial\/SkewCurveVertex.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/SkewCurveVertex.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/SkewCurveVertex.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/SkewCurveVertex.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/SkewCurveVertex.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/SkewCurveVertex.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/SkewCurveVertex.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/SkewCurveVertex.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/SkewCurveVertex.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/SkewCurveVertex.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/SkewCurveVertex.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/SkewCurveVertex.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/SkewCurveVertex.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/SkewCurveVertex.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/SkewCurveVertex.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/SkewCurveVertex.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/SkewCurveVertex.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "superficial\/SkewCurveVertex.html", "kind" : "case class"}, {"name" : "superficial.SkewPantsHexagon", "shortDescription" : "\"hexagon\" in a skew pair of pants; note that this is not in general a hexagon as some of the edges are subdivided", "members_case class" : [{"label" : "sides", "tail" : ": Int", "member" : "superficial.SkewPantsHexagon.sides", "link" : "superficial\/SkewPantsHexagon.html#sides:Int", "kind" : "lazy val"}, {"label" : "boundary", "tail" : ": Vector[Edge]", "member" : "superficial.SkewPantsHexagon.boundary", "link" : "superficial\/SkewPantsHexagon.html#boundary:Vector[superficial.Edge]", "kind" : "lazy val"}, {"label" : "vertices", "tail" : ": Set[Vertex]", "member" : "superficial.SkewPantsHexagon.vertices", "link" : "superficial\/SkewPantsHexagon.html#vertices:Set[superficial.Vertex]", "kind" : "lazy val"}, {"member" : "superficial.SkewPantsHexagon#<init>", "error" : "unsupported entity"}, {"label" : "cs", "tail" : ": Set[SkewCurve]", "member" : "superficial.SkewPantsHexagon.cs", "link" : "superficial\/SkewPantsHexagon.html#cs:Set[superficial.SkewCurve]", "kind" : "val"}, {"label" : "top", "tail" : ": Boolean", "member" : "superficial.SkewPantsHexagon.top", "link" : "superficial\/SkewPantsHexagon.html#top:Boolean", "kind" : "val"}, {"label" : "pants", "tail" : ": Index", "member" : "superficial.SkewPantsHexagon.pants", "link" : "superficial\/SkewPantsHexagon.html#pants:superficial.Polygon.Index", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "superficial\/SkewPantsHexagon.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "boundaryIndex", "tail" : "(e: Edge): Set[(Int, Boolean)]", "member" : "superficial.Polygon.boundaryIndex", "link" : "superficial\/SkewPantsHexagon.html#boundaryIndex(e:superficial.Edge):Set[(Int,Boolean)]", "kind" : "def"}, {"label" : "edges", "tail" : ": Set[Edge]", "member" : "superficial.Polygon.edges", "link" : "superficial\/SkewPantsHexagon.html#edges:Set[superficial.Edge]", "kind" : "lazy val"}, {"label" : "del", "tail" : "(): FormalSum[Edge]", "member" : "superficial.Polygon.del", "link" : "superficial\/SkewPantsHexagon.html#del:superficial.FormalSum[superficial.Edge]", "kind" : "def"}, {"label" : "checkPoly", "tail" : "(): Boolean", "member" : "superficial.Polygon.checkPoly", "link" : "superficial\/SkewPantsHexagon.html#checkPoly:Boolean", "kind" : "def"}, {"label" : "checkBoundary", "tail" : "(): Boolean", "member" : "superficial.Polygon.checkBoundary", "link" : "superficial\/SkewPantsHexagon.html#checkBoundary:Boolean", "kind" : "def"}, {"label" : "basePoint", "tail" : ": Vertex", "member" : "superficial.Polygon.basePoint", "link" : "superficial\/SkewPantsHexagon.html#basePoint:superficial.Vertex", "kind" : "lazy val"}, {"label" : "indices", "tail" : ": Vector[Index]", "member" : "superficial.Polygon.indices", "link" : "superficial\/SkewPantsHexagon.html#indices:Vector[superficial.Polygon.Index]", "kind" : "lazy val"}, {"label" : "faces", "tail" : ": Set[Polygon]", "member" : "superficial.Polygon.faces", "link" : "superficial\/SkewPantsHexagon.html#faces:scala.collection.immutable.Set[superficial.Polygon]", "kind" : "lazy val"}, {"label" : "turnEdge", "tail" : "(e: Edge, t: Int): Edge", "member" : "superficial.TwoComplex.turnEdge", "link" : "superficial\/SkewPantsHexagon.html#turnEdge(e:superficial.Edge,t:Int):superficial.Edge", "kind" : "def"}, {"label" : "angleBetween", "tail" : "(e1: Edge, e2: Edge): Int", "member" : "superficial.TwoComplex.angleBetween", "link" : "superficial\/SkewPantsHexagon.html#angleBetween(e1:superficial.Edge,e2:superficial.Edge):Int", "kind" : "def"}, {"label" : "turnIndex", "tail" : "(e1: Edge, e2: Edge): Int", "member" : "superficial.TwoComplex.turnIndex", "link" : "superficial\/SkewPantsHexagon.html#turnIndex(e1:superficial.Edge,e2:superficial.Edge):Int", "kind" : "def"}, {"label" : "vectorEdgesToTheRightOf", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorEdgesToTheRightOf", "link" : "superficial\/SkewPantsHexagon.html#vectorEdgesToTheRightOf(e:superficial.Edge):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorEdgesToTheLeftOf", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorEdgesToTheLeftOf", "link" : "superficial\/SkewPantsHexagon.html#vectorEdgesToTheLeftOf(e:superficial.Edge):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorRightTurns", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorRightTurns", "link" : "superficial\/SkewPantsHexagon.html#vectorRightTurns(e:superficial.Edge):scala.collection.immutable.Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorLeftTurns", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorLeftTurns", "link" : "superficial\/SkewPantsHexagon.html#vectorLeftTurns(e:superficial.Edge):scala.collection.immutable.Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorOrbitFin", "tail" : "(e: Edge, opt: (Edge) => Option[Edge], accum: Vector[Edge], n: Int): Vector[Edge]", "member" : "superficial.TwoComplex.vectorOrbitFin", "link" : "superficial\/SkewPantsHexagon.html#vectorOrbitFin(e:superficial.Edge,opt:superficial.Edge=>Option[superficial.Edge],accum:Vector[superficial.Edge],n:Int):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorOrbit", "tail" : "(e: Edge, opt: (Edge) => Option[Edge], accum: Vector[Edge]): Vector[Edge]", "member" : "superficial.TwoComplex.vectorOrbit", "link" : "superficial\/SkewPantsHexagon.html#vectorOrbit(e:superficial.Edge,opt:superficial.Edge=>Option[superficial.Edge],accum:Vector[superficial.Edge]):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "SwR", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SwR", "link" : "superficial\/SkewPantsHexagon.html#SwR(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SwL", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SwL", "link" : "superficial\/SkewPantsHexagon.html#SwL(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SR", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SR", "link" : "superficial\/SkewPantsHexagon.html#SR(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SL", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SL", "link" : "superficial\/SkewPantsHexagon.html#SL(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "R", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.R", "link" : "superficial\/SkewPantsHexagon.html#R(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "L", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.L", "link" : "superficial\/SkewPantsHexagon.html#L(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "slightRight", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.slightRight", "link" : "superficial\/SkewPantsHexagon.html#slightRight(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "slightLeft", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.slightLeft", "link" : "superficial\/SkewPantsHexagon.html#slightLeft(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "turnRight", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.turnRight", "link" : "superficial\/SkewPantsHexagon.html#turnRight(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "turnLeft", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.turnLeft", "link" : "superficial\/SkewPantsHexagon.html#turnLeft(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "subComplex", "tail" : "(vs: Set[Vertex]): TwoComplex", "member" : "superficial.TwoComplex.subComplex", "link" : "superficial\/SkewPantsHexagon.html#subComplex(vs:Set[superficial.Vertex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addTwoComplexes", "tail" : "(complexes: Set[TwoComplex]): TwoComplex", "member" : "superficial.TwoComplex.addTwoComplexes", "link" : "superficial\/SkewPantsHexagon.html#addTwoComplexes(complexes:Set[superficial.TwoComplex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addFaces", "tail" : "(fcs: Set[Polygon]): TwoComplex", "member" : "superficial.TwoComplex.addFaces", "link" : "superficial\/SkewPantsHexagon.html#addFaces(fcs:Set[superficial.Polygon]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addEdges", "tail" : "(eds: Set[Edge]): TwoComplex", "member" : "superficial.TwoComplex.addEdges", "link" : "superficial\/SkewPantsHexagon.html#addEdges(eds:Set[superficial.Edge]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addVertices", "tail" : "(vs: Set[Vertex]): TwoComplex", "member" : "superficial.TwoComplex.addVertices", "link" : "superficial\/SkewPantsHexagon.html#addVertices(vs:Set[superficial.Vertex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "isSurfaceWithBoundary", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isSurfaceWithBoundary", "link" : "superficial\/SkewPantsHexagon.html#isSurfaceWithBoundary:Boolean", "kind" : "def"}, {"label" : "isClosedSurface", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isClosedSurface", "link" : "superficial\/SkewPantsHexagon.html#isClosedSurface:Boolean", "kind" : "def"}, {"label" : "isEdgeAtBoundary", "tail" : "(e: Edge): Boolean", "member" : "superficial.TwoComplex.isEdgeAtBoundary", "link" : "superficial\/SkewPantsHexagon.html#isEdgeAtBoundary(e:superficial.Edge):Boolean", "kind" : "def"}, {"label" : "edgeOccurences", "tail" : "(e: Edge): Int", "member" : "superficial.TwoComplex.edgeOccurences", "link" : "superficial\/SkewPantsHexagon.html#edgeOccurences(e:superficial.Edge):Int", "kind" : "def"}, {"label" : "transitiveRotations", "tail" : "(v: Vertex): Boolean", "member" : "superficial.TwoComplex.transitiveRotations", "link" : "superficial\/SkewPantsHexagon.html#transitiveRotations(v:superficial.Vertex):Boolean", "kind" : "def"}, {"label" : "degree", "tail" : "(v: Vertex): Int", "member" : "superficial.TwoComplex.degree", "link" : "superficial\/SkewPantsHexagon.html#degree(v:superficial.Vertex):Int", "kind" : "def"}, {"label" : "edgesEndingAt", "tail" : "(v: Vertex): Set[Edge]", "member" : "superficial.TwoComplex.edgesEndingAt", "link" : "superficial\/SkewPantsHexagon.html#edgesEndingAt(v:superficial.Vertex):scala.collection.immutable.Set[superficial.Edge]", "kind" : "def"}, {"label" : "allEdgesToTheRightOf", "tail" : "(e: Edge): Set[Edge]", "member" : "superficial.TwoComplex.allEdgesToTheRightOf", "link" : "superficial\/SkewPantsHexagon.html#allEdgesToTheRightOf(e:superficial.Edge):Set[superficial.Edge]", "kind" : "def"}, {"label" : "allEdgesToTheLeftOf", "tail" : "(e: Edge): Set[Edge]", "member" : "superficial.TwoComplex.allEdgesToTheLeftOf", "link" : "superficial\/SkewPantsHexagon.html#allEdgesToTheLeftOf(e:superficial.Edge):Set[superficial.Edge]", "kind" : "def"}, {"label" : "orbit", "tail" : "(e: Edge, steps: Int, opt: (Edge) => Option[Edge], accum: Set[Edge]): Set[Edge]", "member" : "superficial.TwoComplex.orbit", "link" : "superficial\/SkewPantsHexagon.html#orbit(e:superficial.Edge,steps:Int,opt:superficial.Edge=>Option[superficial.Edge],accum:Set[superficial.Edge]):Set[superficial.Edge]", "kind" : "def"}, {"label" : "rotateRightOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.rotateRightOpt", "link" : "superficial\/SkewPantsHexagon.html#rotateRightOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "rotateLeftOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.rotateLeftOpt", "link" : "superficial\/SkewPantsHexagon.html#rotateLeftOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "predOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.predOpt", "link" : "superficial\/SkewPantsHexagon.html#predOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "succOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.succOpt", "link" : "superficial\/SkewPantsHexagon.html#succOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "isConnectedComplex", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isConnectedComplex", "link" : "superficial\/SkewPantsHexagon.html#isConnectedComplex:Boolean", "kind" : "def"}, {"label" : "connectedComponent", "tail" : "(v: Vertex): Set[Vertex]", "member" : "superficial.TwoComplex.connectedComponent", "link" : "superficial\/SkewPantsHexagon.html#connectedComponent(v:superficial.Vertex):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "maxSetNbr", "tail" : "(s: Set[Vertex]): Set[Vertex]", "member" : "superficial.TwoComplex.maxSetNbr", "link" : "superficial\/SkewPantsHexagon.html#maxSetNbr(s:Set[superficial.Vertex]):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "setNbr", "tail" : "(s: Set[Vertex]): Set[Vertex]", "member" : "superficial.TwoComplex.setNbr", "link" : "superficial\/SkewPantsHexagon.html#setNbr(s:Set[superficial.Vertex]):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "vertexNbr", "tail" : "(v: Vertex): Set[Vertex]", "member" : "superficial.TwoComplex.vertexNbr", "link" : "superficial\/SkewPantsHexagon.html#vertexNbr(v:superficial.Vertex):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "collapseEdge", "tail" : "(e: Edge): (TwoComplex, ((EdgePath) => EdgePath, (EdgePath) => EdgePath))", "member" : "superficial.TwoComplex.collapseEdge", "link" : "superficial\/SkewPantsHexagon.html#collapseEdge(e:superficial.Edge):(superficial.TwoComplex,(superficial.EdgePath=>superficial.EdgePath,superficial.EdgePath=>superficial.EdgePath))", "kind" : "def"}, {"label" : "normalArcs", "tail" : "(): Set[NormalArc]", "member" : "superficial.TwoComplex.normalArcs", "link" : "superficial\/SkewPantsHexagon.html#normalArcs:Set[superficial.NormalArc]", "kind" : "def"}, {"label" : "edgeIndices", "tail" : "(edge: Edge): Set[(Polygon, Index, Boolean)]", "member" : "superficial.TwoComplex.edgeIndices", "link" : "superficial\/SkewPantsHexagon.html#edgeIndices(edge:superficial.Edge):Set[(superficial.Polygon,superficial.Polygon.Index,Boolean)]", "kind" : "def"}, {"label" : "facesWithEdge", "tail" : "(edge: Edge): Set[Polygon]", "member" : "superficial.TwoComplex.facesWithEdge", "link" : "superficial\/SkewPantsHexagon.html#facesWithEdge(edge:superficial.Edge):Set[superficial.Polygon]", "kind" : "def"}, {"label" : "vertexIndex", "tail" : "(v: Vertex): Option[Int]", "member" : "superficial.TwoComplex.vertexIndex", "link" : "superficial\/SkewPantsHexagon.html#vertexIndex(v:superficial.Vertex):Option[Int]", "kind" : "def"}, {"label" : "indexedVertices", "tail" : ": Set[(Vertex, Int)]", "member" : "superficial.TwoComplex.indexedVertices", "link" : "superficial\/SkewPantsHexagon.html#indexedVertices:scala.collection.immutable.Set[(superficial.Vertex,Int)]", "kind" : "lazy val"}, {"label" : "chi", "tail" : ": Int", "member" : "superficial.TwoComplex.chi", "link" : "superficial\/SkewPantsHexagon.html#chi:Int", "kind" : "lazy val"}, {"label" : "edgeIndex", "tail" : "(edge: Edge): Option[(Int, Boolean)]", "member" : "superficial.TwoComplex.edgeIndex", "link" : "superficial\/SkewPantsHexagon.html#edgeIndex(edge:superficial.Edge):Option[(Int,Boolean)]", "kind" : "def"}, {"label" : "halfEdges", "tail" : ": Set[Edge]", "member" : "superficial.TwoComplex.halfEdges", "link" : "superficial\/SkewPantsHexagon.html#halfEdges:Set[superficial.Edge]", "kind" : "lazy val"}, {"label" : "positiveEdges", "tail" : ": Vector[OrientedEdge]", "member" : "superficial.TwoComplex.positiveEdges", "link" : "superficial\/SkewPantsHexagon.html#positiveEdges:Vector[superficial.OrientedEdge]", "kind" : "lazy val"}, {"label" : "checkComplex", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.checkComplex", "link" : "superficial\/SkewPantsHexagon.html#checkComplex:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/SkewPantsHexagon.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/SkewPantsHexagon.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/SkewPantsHexagon.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/SkewPantsHexagon.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/SkewPantsHexagon.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/SkewPantsHexagon.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/SkewPantsHexagon.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/SkewPantsHexagon.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/SkewPantsHexagon.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/SkewPantsHexagon.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/SkewPantsHexagon.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/SkewPantsHexagon.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/SkewPantsHexagon.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/SkewPantsHexagon.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/SkewPantsHexagon.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/SkewPantsHexagon.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "superficial\/SkewPantsHexagon.html", "kind" : "case class"}, {"name" : "superficial.SkewPantsSurface", "shortDescription" : "", "object" : "superficial\/SkewPantsSurface$.html", "members_object" : [{"label" : "enumerate", "tail" : "(surf: PantsSurface, twists: Vector[Double], lengths: Vector[Double]): Vector[SkewPantsSurface]", "member" : "superficial.SkewPantsSurface.enumerate", "link" : "superficial\/SkewPantsSurface$.html#enumerate(surf:superficial.PantsSurface,twists:Vector[Double],lengths:Vector[Double]):scala.collection.immutable.Vector[superficial.SkewPantsSurface]", "kind" : "def"}, {"label" : "untwisted", "tail" : "(surf: PantsSurface, m: Map[Curve, Double]): SkewPantsSurface", "member" : "superficial.SkewPantsSurface.untwisted", "link" : "superficial\/SkewPantsSurface$.html#untwisted(surf:superficial.PantsSurface,m:Map[superficial.Curve,Double]):superficial.SkewPantsSurface", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/SkewPantsSurface$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/SkewPantsSurface$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/SkewPantsSurface$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/SkewPantsSurface$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/SkewPantsSurface$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/SkewPantsSurface$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/SkewPantsSurface$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/SkewPantsSurface$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/SkewPantsSurface$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/SkewPantsSurface$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/SkewPantsSurface$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/SkewPantsSurface$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/SkewPantsSurface$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/SkewPantsSurface$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/SkewPantsSurface$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/SkewPantsSurface$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/SkewPantsSurface$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/SkewPantsSurface$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/SkewPantsSurface$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "fundamentalClass", "tail" : ": FormalSum[Polygon]", "member" : "superficial.SkewPantsSurface.fundamentalClass", "link" : "superficial\/SkewPantsSurface.html#fundamentalClass:superficial.FormalSum[superficial.Polygon]", "kind" : "lazy val"}, {"label" : "faces", "tail" : ": Set[Polygon]", "member" : "superficial.SkewPantsSurface.faces", "link" : "superficial\/SkewPantsSurface.html#faces:Set[superficial.Polygon]", "kind" : "lazy val"}, {"label" : "indices", "tail" : ": Vector[Index]", "member" : "superficial.SkewPantsSurface.indices", "link" : "superficial\/SkewPantsSurface.html#indices:Vector[superficial.Polygon.Index]", "kind" : "lazy val"}, {"member" : "superficial.SkewPantsSurface#<init>", "error" : "unsupported entity"}, {"label" : "cs", "tail" : ": Set[SkewCurve]", "member" : "superficial.SkewPantsSurface.cs", "link" : "superficial\/SkewPantsSurface.html#cs:Set[superficial.SkewCurve]", "kind" : "val"}, {"label" : "numPants", "tail" : ": Index", "member" : "superficial.SkewPantsSurface.numPants", "link" : "superficial\/SkewPantsSurface.html#numPants:superficial.Polygon.Index", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "superficial\/SkewPantsSurface.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "vertices", "tail" : ": Set[Vertex]", "member" : "superficial.PureTwoComplex.vertices", "link" : "superficial\/SkewPantsSurface.html#vertices:Set[superficial.Vertex]", "kind" : "lazy val"}, {"label" : "edges", "tail" : ": Set[Edge]", "member" : "superficial.PureTwoComplex.edges", "link" : "superficial\/SkewPantsSurface.html#edges:Set[superficial.Edge]", "kind" : "lazy val"}, {"label" : "turnEdge", "tail" : "(e: Edge, t: Int): Edge", "member" : "superficial.TwoComplex.turnEdge", "link" : "superficial\/SkewPantsSurface.html#turnEdge(e:superficial.Edge,t:Int):superficial.Edge", "kind" : "def"}, {"label" : "angleBetween", "tail" : "(e1: Edge, e2: Edge): Int", "member" : "superficial.TwoComplex.angleBetween", "link" : "superficial\/SkewPantsSurface.html#angleBetween(e1:superficial.Edge,e2:superficial.Edge):Int", "kind" : "def"}, {"label" : "turnIndex", "tail" : "(e1: Edge, e2: Edge): Int", "member" : "superficial.TwoComplex.turnIndex", "link" : "superficial\/SkewPantsSurface.html#turnIndex(e1:superficial.Edge,e2:superficial.Edge):Int", "kind" : "def"}, {"label" : "vectorEdgesToTheRightOf", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorEdgesToTheRightOf", "link" : "superficial\/SkewPantsSurface.html#vectorEdgesToTheRightOf(e:superficial.Edge):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorEdgesToTheLeftOf", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorEdgesToTheLeftOf", "link" : "superficial\/SkewPantsSurface.html#vectorEdgesToTheLeftOf(e:superficial.Edge):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorRightTurns", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorRightTurns", "link" : "superficial\/SkewPantsSurface.html#vectorRightTurns(e:superficial.Edge):scala.collection.immutable.Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorLeftTurns", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorLeftTurns", "link" : "superficial\/SkewPantsSurface.html#vectorLeftTurns(e:superficial.Edge):scala.collection.immutable.Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorOrbitFin", "tail" : "(e: Edge, opt: (Edge) => Option[Edge], accum: Vector[Edge], n: Int): Vector[Edge]", "member" : "superficial.TwoComplex.vectorOrbitFin", "link" : "superficial\/SkewPantsSurface.html#vectorOrbitFin(e:superficial.Edge,opt:superficial.Edge=>Option[superficial.Edge],accum:Vector[superficial.Edge],n:Int):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorOrbit", "tail" : "(e: Edge, opt: (Edge) => Option[Edge], accum: Vector[Edge]): Vector[Edge]", "member" : "superficial.TwoComplex.vectorOrbit", "link" : "superficial\/SkewPantsSurface.html#vectorOrbit(e:superficial.Edge,opt:superficial.Edge=>Option[superficial.Edge],accum:Vector[superficial.Edge]):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "SwR", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SwR", "link" : "superficial\/SkewPantsSurface.html#SwR(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SwL", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SwL", "link" : "superficial\/SkewPantsSurface.html#SwL(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SR", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SR", "link" : "superficial\/SkewPantsSurface.html#SR(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SL", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SL", "link" : "superficial\/SkewPantsSurface.html#SL(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "R", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.R", "link" : "superficial\/SkewPantsSurface.html#R(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "L", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.L", "link" : "superficial\/SkewPantsSurface.html#L(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "slightRight", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.slightRight", "link" : "superficial\/SkewPantsSurface.html#slightRight(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "slightLeft", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.slightLeft", "link" : "superficial\/SkewPantsSurface.html#slightLeft(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "turnRight", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.turnRight", "link" : "superficial\/SkewPantsSurface.html#turnRight(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "turnLeft", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.turnLeft", "link" : "superficial\/SkewPantsSurface.html#turnLeft(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "subComplex", "tail" : "(vs: Set[Vertex]): TwoComplex", "member" : "superficial.TwoComplex.subComplex", "link" : "superficial\/SkewPantsSurface.html#subComplex(vs:Set[superficial.Vertex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addTwoComplexes", "tail" : "(complexes: Set[TwoComplex]): TwoComplex", "member" : "superficial.TwoComplex.addTwoComplexes", "link" : "superficial\/SkewPantsSurface.html#addTwoComplexes(complexes:Set[superficial.TwoComplex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addFaces", "tail" : "(fcs: Set[Polygon]): TwoComplex", "member" : "superficial.TwoComplex.addFaces", "link" : "superficial\/SkewPantsSurface.html#addFaces(fcs:Set[superficial.Polygon]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addEdges", "tail" : "(eds: Set[Edge]): TwoComplex", "member" : "superficial.TwoComplex.addEdges", "link" : "superficial\/SkewPantsSurface.html#addEdges(eds:Set[superficial.Edge]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addVertices", "tail" : "(vs: Set[Vertex]): TwoComplex", "member" : "superficial.TwoComplex.addVertices", "link" : "superficial\/SkewPantsSurface.html#addVertices(vs:Set[superficial.Vertex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "isSurfaceWithBoundary", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isSurfaceWithBoundary", "link" : "superficial\/SkewPantsSurface.html#isSurfaceWithBoundary:Boolean", "kind" : "def"}, {"label" : "isClosedSurface", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isClosedSurface", "link" : "superficial\/SkewPantsSurface.html#isClosedSurface:Boolean", "kind" : "def"}, {"label" : "isEdgeAtBoundary", "tail" : "(e: Edge): Boolean", "member" : "superficial.TwoComplex.isEdgeAtBoundary", "link" : "superficial\/SkewPantsSurface.html#isEdgeAtBoundary(e:superficial.Edge):Boolean", "kind" : "def"}, {"label" : "edgeOccurences", "tail" : "(e: Edge): Int", "member" : "superficial.TwoComplex.edgeOccurences", "link" : "superficial\/SkewPantsSurface.html#edgeOccurences(e:superficial.Edge):Int", "kind" : "def"}, {"label" : "transitiveRotations", "tail" : "(v: Vertex): Boolean", "member" : "superficial.TwoComplex.transitiveRotations", "link" : "superficial\/SkewPantsSurface.html#transitiveRotations(v:superficial.Vertex):Boolean", "kind" : "def"}, {"label" : "degree", "tail" : "(v: Vertex): Int", "member" : "superficial.TwoComplex.degree", "link" : "superficial\/SkewPantsSurface.html#degree(v:superficial.Vertex):Int", "kind" : "def"}, {"label" : "edgesEndingAt", "tail" : "(v: Vertex): Set[Edge]", "member" : "superficial.TwoComplex.edgesEndingAt", "link" : "superficial\/SkewPantsSurface.html#edgesEndingAt(v:superficial.Vertex):scala.collection.immutable.Set[superficial.Edge]", "kind" : "def"}, {"label" : "allEdgesToTheRightOf", "tail" : "(e: Edge): Set[Edge]", "member" : "superficial.TwoComplex.allEdgesToTheRightOf", "link" : "superficial\/SkewPantsSurface.html#allEdgesToTheRightOf(e:superficial.Edge):Set[superficial.Edge]", "kind" : "def"}, {"label" : "allEdgesToTheLeftOf", "tail" : "(e: Edge): Set[Edge]", "member" : "superficial.TwoComplex.allEdgesToTheLeftOf", "link" : "superficial\/SkewPantsSurface.html#allEdgesToTheLeftOf(e:superficial.Edge):Set[superficial.Edge]", "kind" : "def"}, {"label" : "orbit", "tail" : "(e: Edge, steps: Int, opt: (Edge) => Option[Edge], accum: Set[Edge]): Set[Edge]", "member" : "superficial.TwoComplex.orbit", "link" : "superficial\/SkewPantsSurface.html#orbit(e:superficial.Edge,steps:Int,opt:superficial.Edge=>Option[superficial.Edge],accum:Set[superficial.Edge]):Set[superficial.Edge]", "kind" : "def"}, {"label" : "rotateRightOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.rotateRightOpt", "link" : "superficial\/SkewPantsSurface.html#rotateRightOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "rotateLeftOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.rotateLeftOpt", "link" : "superficial\/SkewPantsSurface.html#rotateLeftOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "predOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.predOpt", "link" : "superficial\/SkewPantsSurface.html#predOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "succOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.succOpt", "link" : "superficial\/SkewPantsSurface.html#succOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "isConnectedComplex", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isConnectedComplex", "link" : "superficial\/SkewPantsSurface.html#isConnectedComplex:Boolean", "kind" : "def"}, {"label" : "connectedComponent", "tail" : "(v: Vertex): Set[Vertex]", "member" : "superficial.TwoComplex.connectedComponent", "link" : "superficial\/SkewPantsSurface.html#connectedComponent(v:superficial.Vertex):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "maxSetNbr", "tail" : "(s: Set[Vertex]): Set[Vertex]", "member" : "superficial.TwoComplex.maxSetNbr", "link" : "superficial\/SkewPantsSurface.html#maxSetNbr(s:Set[superficial.Vertex]):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "setNbr", "tail" : "(s: Set[Vertex]): Set[Vertex]", "member" : "superficial.TwoComplex.setNbr", "link" : "superficial\/SkewPantsSurface.html#setNbr(s:Set[superficial.Vertex]):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "vertexNbr", "tail" : "(v: Vertex): Set[Vertex]", "member" : "superficial.TwoComplex.vertexNbr", "link" : "superficial\/SkewPantsSurface.html#vertexNbr(v:superficial.Vertex):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "collapseEdge", "tail" : "(e: Edge): (TwoComplex, ((EdgePath) => EdgePath, (EdgePath) => EdgePath))", "member" : "superficial.TwoComplex.collapseEdge", "link" : "superficial\/SkewPantsSurface.html#collapseEdge(e:superficial.Edge):(superficial.TwoComplex,(superficial.EdgePath=>superficial.EdgePath,superficial.EdgePath=>superficial.EdgePath))", "kind" : "def"}, {"label" : "normalArcs", "tail" : "(): Set[NormalArc]", "member" : "superficial.TwoComplex.normalArcs", "link" : "superficial\/SkewPantsSurface.html#normalArcs:Set[superficial.NormalArc]", "kind" : "def"}, {"label" : "edgeIndices", "tail" : "(edge: Edge): Set[(Polygon, Index, Boolean)]", "member" : "superficial.TwoComplex.edgeIndices", "link" : "superficial\/SkewPantsSurface.html#edgeIndices(edge:superficial.Edge):Set[(superficial.Polygon,superficial.Polygon.Index,Boolean)]", "kind" : "def"}, {"label" : "facesWithEdge", "tail" : "(edge: Edge): Set[Polygon]", "member" : "superficial.TwoComplex.facesWithEdge", "link" : "superficial\/SkewPantsSurface.html#facesWithEdge(edge:superficial.Edge):Set[superficial.Polygon]", "kind" : "def"}, {"label" : "vertexIndex", "tail" : "(v: Vertex): Option[Int]", "member" : "superficial.TwoComplex.vertexIndex", "link" : "superficial\/SkewPantsSurface.html#vertexIndex(v:superficial.Vertex):Option[Int]", "kind" : "def"}, {"label" : "indexedVertices", "tail" : ": Set[(Vertex, Int)]", "member" : "superficial.TwoComplex.indexedVertices", "link" : "superficial\/SkewPantsSurface.html#indexedVertices:scala.collection.immutable.Set[(superficial.Vertex,Int)]", "kind" : "lazy val"}, {"label" : "chi", "tail" : ": Int", "member" : "superficial.TwoComplex.chi", "link" : "superficial\/SkewPantsSurface.html#chi:Int", "kind" : "lazy val"}, {"label" : "edgeIndex", "tail" : "(edge: Edge): Option[(Int, Boolean)]", "member" : "superficial.TwoComplex.edgeIndex", "link" : "superficial\/SkewPantsSurface.html#edgeIndex(edge:superficial.Edge):Option[(Int,Boolean)]", "kind" : "def"}, {"label" : "halfEdges", "tail" : ": Set[Edge]", "member" : "superficial.TwoComplex.halfEdges", "link" : "superficial\/SkewPantsSurface.html#halfEdges:Set[superficial.Edge]", "kind" : "lazy val"}, {"label" : "positiveEdges", "tail" : ": Vector[OrientedEdge]", "member" : "superficial.TwoComplex.positiveEdges", "link" : "superficial\/SkewPantsSurface.html#positiveEdges:Vector[superficial.OrientedEdge]", "kind" : "lazy val"}, {"label" : "checkComplex", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.checkComplex", "link" : "superficial\/SkewPantsSurface.html#checkComplex:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/SkewPantsSurface.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/SkewPantsSurface.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/SkewPantsSurface.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/SkewPantsSurface.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/SkewPantsSurface.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/SkewPantsSurface.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/SkewPantsSurface.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/SkewPantsSurface.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/SkewPantsSurface.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/SkewPantsSurface.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/SkewPantsSurface.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/SkewPantsSurface.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/SkewPantsSurface.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/SkewPantsSurface.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/SkewPantsSurface.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/SkewPantsSurface.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "superficial\/SkewPantsSurface.html", "kind" : "case class"}, {"name" : "superficial.SphereComplex", "shortDescription" : "", "object" : "superficial\/SphereComplex$.html", "members_object" : [{"label" : "doubleMonogon", "tail" : ": TwoComplex", "member" : "superficial.SphereComplex.doubleMonogon", "link" : "superficial\/SphereComplex$.html#doubleMonogon:superficial.TwoComplex", "kind" : "val"}, {"label" : "doubleBigon", "tail" : ": TwoComplex", "member" : "superficial.SphereComplex.doubleBigon", "link" : "superficial\/SphereComplex$.html#doubleBigon:superficial.TwoComplex", "kind" : "val"}, {"label" : "doubleTriangle", "tail" : ": TwoComplex", "member" : "superficial.SphereComplex.doubleTriangle", "link" : "superficial\/SphereComplex$.html#doubleTriangle:superficial.TwoComplex", "kind" : "val"}, {"label" : "lower", "tail" : ": Polygon", "member" : "superficial.SphereComplex.lower", "link" : "superficial\/SphereComplex$.html#lower:superficial.Polygon", "kind" : "val"}, {"label" : "upper", "tail" : ": Polygon", "member" : "superficial.SphereComplex.upper", "link" : "superficial\/SphereComplex$.html#upper:superficial.Polygon", "kind" : "val"}, {"label" : "C", "tail" : "", "member" : "superficial.SphereComplex.C", "link" : "superficial\/SphereComplex$.html#C", "kind" : "case object"}, {"label" : "B", "tail" : "", "member" : "superficial.SphereComplex.B", "link" : "superficial\/SphereComplex$.html#B", "kind" : "case object"}, {"label" : "A", "tail" : "", "member" : "superficial.SphereComplex.A", "link" : "superficial\/SphereComplex$.html#A", "kind" : "case object"}, {"label" : "Z", "tail" : "", "member" : "superficial.SphereComplex.Z", "link" : "superficial\/SphereComplex$.html#Z", "kind" : "case object"}, {"label" : "Y", "tail" : "", "member" : "superficial.SphereComplex.Y", "link" : "superficial\/SphereComplex$.html#Y", "kind" : "case object"}, {"label" : "X", "tail" : "", "member" : "superficial.SphereComplex.X", "link" : "superficial\/SphereComplex$.html#X", "kind" : "case object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/SphereComplex$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/SphereComplex$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/SphereComplex$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/SphereComplex$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/SphereComplex$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/SphereComplex$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/SphereComplex$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/SphereComplex$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/SphereComplex$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/SphereComplex$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/SphereComplex$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/SphereComplex$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/SphereComplex$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/SphereComplex$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/SphereComplex$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/SphereComplex$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/SphereComplex$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/SphereComplex$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/SphereComplex$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "superficial.sphereWithHoles", "object" : "superficial\/sphereWithHoles$.html", "members_object" : [{"label" : "generateComplex", "tail" : "(numberOfHoles: Int): TwoComplex", "member" : "superficial.sphereWithHoles.generateComplex", "link" : "superficial\/sphereWithHoles$.html#generateComplex(numberOfHoles:Int):superficial.TwoComplex", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/sphereWithHoles$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/sphereWithHoles$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/sphereWithHoles$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/sphereWithHoles$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/sphereWithHoles$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/sphereWithHoles$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/sphereWithHoles$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/sphereWithHoles$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/sphereWithHoles$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/sphereWithHoles$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/sphereWithHoles$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/sphereWithHoles$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/sphereWithHoles$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/sphereWithHoles$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/sphereWithHoles$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/sphereWithHoles$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/sphereWithHoles$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/sphereWithHoles$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/sphereWithHoles$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "superficial\/sphereWithHoles.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/sphereWithHoles.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/sphereWithHoles.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/sphereWithHoles.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/sphereWithHoles.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/sphereWithHoles.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/sphereWithHoles.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/sphereWithHoles.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/sphereWithHoles.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/sphereWithHoles.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/sphereWithHoles.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/sphereWithHoles.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/sphereWithHoles.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/sphereWithHoles.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/sphereWithHoles.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/sphereWithHoles.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/sphereWithHoles.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/sphereWithHoles.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/sphereWithHoles.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/sphereWithHoles.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "generateComplex", "tail" : "(numberOfHoles: Int): TwoComplex", "member" : "superficial.sphereWithHoles.generateComplex", "link" : "superficial\/sphereWithHoles.html#generateComplex(numberOfHoles:Int):superficial.TwoComplex", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "superficial.Staircase", "shortDescription" : "", "object" : "superficial\/Staircase$.html", "members_object" : [{"label" : "getStairCase", "tail" : "(left: EdgePath, right: EdgePath, twoComplex: TwoComplex): (TwoComplex, Set[Edge])", "member" : "superficial.Staircase.getStairCase", "link" : "superficial\/Staircase$.html#getStairCase(left:superficial.EdgePath,right:superficial.EdgePath,twoComplex:superficial.TwoComplex):(superficial.TwoComplex,Set[superficial.Edge])", "kind" : "def"}, {"label" : "find", "tail" : "(thisPath: EdgePath, thatPath: EdgePath): Vector[((EdgePath, EdgePath), Boolean)]", "member" : "superficial.Staircase.find", "link" : "superficial\/Staircase$.html#find(thisPath:superficial.EdgePath,thatPath:superficial.EdgePath):Vector[((superficial.EdgePath,superficial.EdgePath),Boolean)]", "kind" : "def"}, {"label" : "findHelper", "tail" : "(thisPath: EdgePath, thatPath: EdgePath, current: ((EdgePath, EdgePath), Boolean), accum: Vector[((EdgePath, EdgePath), Boolean)]): Vector[((EdgePath, EdgePath), Boolean)]", "member" : "superficial.Staircase.findHelper", "link" : "superficial\/Staircase$.html#findHelper(thisPath:superficial.EdgePath,thatPath:superficial.EdgePath,current:((superficial.EdgePath,superficial.EdgePath),Boolean),accum:Vector[((superficial.EdgePath,superficial.EdgePath),Boolean)]):Vector[((superficial.EdgePath,superficial.EdgePath),Boolean)]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/Staircase$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/Staircase$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/Staircase$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/Staircase$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/Staircase$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/Staircase$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/Staircase$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Staircase$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Staircase$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Staircase$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/Staircase$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/Staircase$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/Staircase$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/Staircase$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/Staircase$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/Staircase$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/Staircase$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/Staircase$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/Staircase$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "superficial.StandardSurface", "shortDescription" : "", "object" : "superficial\/StandardSurface$.html", "members_class" : [{"label" : "getEdge", "tail" : "(s: String): Edge", "member" : "superficial.StandardSurface.getEdge", "link" : "superficial\/StandardSurface.html#getEdge(s:String):superficial.Edge", "kind" : "def"}, {"label" : "getPath", "tail" : "(s: String): EdgePath", "member" : "superficial.StandardSurface.getPath", "link" : "superficial\/StandardSurface.html#getPath(s:String):superficial.EdgePath", "kind" : "def"}, {"label" : "parsePath", "tail" : "(s: String): Parsed[EdgePath]", "member" : "superficial.StandardSurface.parsePath", "link" : "superficial\/StandardSurface.html#parsePath(s:String):fastparse.Parsed[superficial.EdgePath]", "kind" : "def"}, {"label" : "edgePath", "tail" : "(arg0: P[Any]): P[EdgePath]", "member" : "superficial.StandardSurface.edgePath", "link" : "superficial\/StandardSurface.html#edgePath[_](implicitevidence$7:fastparse.P[Any]):fastparse.P[superficial.EdgePath]", "kind" : "def"}, {"label" : "parseEdge", "tail" : "(s: String): Parsed[Edge]", "member" : "superficial.StandardSurface.parseEdge", "link" : "superficial\/StandardSurface.html#parseEdge(s:String):fastparse.Parsed[superficial.Edge]", "kind" : "def"}, {"label" : "edge", "tail" : "(arg0: P[Any]): P[Edge]", "member" : "superficial.StandardSurface.edge", "link" : "superficial\/StandardSurface.html#edge[_](implicitevidence$6:fastparse.P[Any]):fastparse.P[superficial.Edge]", "kind" : "def"}, {"label" : "bInvEdge", "tail" : "(arg0: P[Any]): P[Edge]", "member" : "superficial.StandardSurface.bInvEdge", "link" : "superficial\/StandardSurface.html#bInvEdge[_](implicitevidence$5:fastparse.P[Any]):fastparse.P[superficial.Edge]", "kind" : "def"}, {"label" : "bEdge", "tail" : "(arg0: P[Any]): P[Edge]", "member" : "superficial.StandardSurface.bEdge", "link" : "superficial\/StandardSurface.html#bEdge[_](implicitevidence$4:fastparse.P[Any]):fastparse.P[superficial.Edge]", "kind" : "def"}, {"label" : "aInvEdge", "tail" : "(arg0: P[Any]): P[Edge]", "member" : "superficial.StandardSurface.aInvEdge", "link" : "superficial\/StandardSurface.html#aInvEdge[_](implicitevidence$3:fastparse.P[Any]):fastparse.P[superficial.Edge]", "kind" : "def"}, {"label" : "aEdge", "tail" : "(arg0: P[Any]): P[Edge]", "member" : "superficial.StandardSurface.aEdge", "link" : "superficial\/StandardSurface.html#aEdge[_](implicitevidence$2:fastparse.P[Any]):fastparse.P[superficial.Edge]", "kind" : "def"}, {"label" : "number", "tail" : "(arg0: P[Any]): P[Int]", "member" : "superficial.StandardSurface.number", "link" : "superficial\/StandardSurface.html#number[_](implicitevidence$1:fastparse.P[Any]):fastparse.P[Int]", "kind" : "def"}, {"label" : "vertex", "tail" : ": Vertex", "member" : "superficial.StandardSurface.vertex", "link" : "superficial\/StandardSurface.html#vertex:superficial.Vertex", "kind" : "val"}, {"label" : "boundary", "tail" : ": Vector[Edge]", "member" : "superficial.StandardSurface.boundary", "link" : "superficial\/StandardSurface.html#boundary:Vector[superficial.Edge]", "kind" : "lazy val"}, {"label" : "face", "tail" : ": Polygon", "member" : "superficial.StandardSurface.face", "link" : "superficial\/StandardSurface.html#face:superficial.Polygon", "kind" : "lazy val"}, {"label" : "vertices", "tail" : ": Set[Vertex]", "member" : "superficial.StandardSurface.vertices", "link" : "superficial\/StandardSurface.html#vertices:Set[superficial.Vertex]", "kind" : "lazy val"}, {"label" : "edges", "tail" : ": Set[Edge]", "member" : "superficial.StandardSurface.edges", "link" : "superficial\/StandardSurface.html#edges:Set[superficial.Edge]", "kind" : "lazy val"}, {"label" : "faces", "tail" : ": Set[Polygon]", "member" : "superficial.StandardSurface.faces", "link" : "superficial\/StandardSurface.html#faces:Set[superficial.Polygon]", "kind" : "lazy val"}, {"member" : "superficial.StandardSurface#<init>", "error" : "unsupported entity"}, {"label" : "genus", "tail" : ": Int", "member" : "superficial.StandardSurface.genus", "link" : "superficial\/StandardSurface.html#genus:Int", "kind" : "val"}, {"label" : "turnEdge", "tail" : "(e: Edge, t: Int): Edge", "member" : "superficial.TwoComplex.turnEdge", "link" : "superficial\/StandardSurface.html#turnEdge(e:superficial.Edge,t:Int):superficial.Edge", "kind" : "def"}, {"label" : "angleBetween", "tail" : "(e1: Edge, e2: Edge): Int", "member" : "superficial.TwoComplex.angleBetween", "link" : "superficial\/StandardSurface.html#angleBetween(e1:superficial.Edge,e2:superficial.Edge):Int", "kind" : "def"}, {"label" : "turnIndex", "tail" : "(e1: Edge, e2: Edge): Int", "member" : "superficial.TwoComplex.turnIndex", "link" : "superficial\/StandardSurface.html#turnIndex(e1:superficial.Edge,e2:superficial.Edge):Int", "kind" : "def"}, {"label" : "vectorEdgesToTheRightOf", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorEdgesToTheRightOf", "link" : "superficial\/StandardSurface.html#vectorEdgesToTheRightOf(e:superficial.Edge):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorEdgesToTheLeftOf", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorEdgesToTheLeftOf", "link" : "superficial\/StandardSurface.html#vectorEdgesToTheLeftOf(e:superficial.Edge):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorRightTurns", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorRightTurns", "link" : "superficial\/StandardSurface.html#vectorRightTurns(e:superficial.Edge):scala.collection.immutable.Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorLeftTurns", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorLeftTurns", "link" : "superficial\/StandardSurface.html#vectorLeftTurns(e:superficial.Edge):scala.collection.immutable.Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorOrbitFin", "tail" : "(e: Edge, opt: (Edge) => Option[Edge], accum: Vector[Edge], n: Int): Vector[Edge]", "member" : "superficial.TwoComplex.vectorOrbitFin", "link" : "superficial\/StandardSurface.html#vectorOrbitFin(e:superficial.Edge,opt:superficial.Edge=>Option[superficial.Edge],accum:Vector[superficial.Edge],n:Int):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorOrbit", "tail" : "(e: Edge, opt: (Edge) => Option[Edge], accum: Vector[Edge]): Vector[Edge]", "member" : "superficial.TwoComplex.vectorOrbit", "link" : "superficial\/StandardSurface.html#vectorOrbit(e:superficial.Edge,opt:superficial.Edge=>Option[superficial.Edge],accum:Vector[superficial.Edge]):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "SwR", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SwR", "link" : "superficial\/StandardSurface.html#SwR(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SwL", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SwL", "link" : "superficial\/StandardSurface.html#SwL(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SR", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SR", "link" : "superficial\/StandardSurface.html#SR(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SL", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SL", "link" : "superficial\/StandardSurface.html#SL(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "R", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.R", "link" : "superficial\/StandardSurface.html#R(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "L", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.L", "link" : "superficial\/StandardSurface.html#L(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "slightRight", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.slightRight", "link" : "superficial\/StandardSurface.html#slightRight(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "slightLeft", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.slightLeft", "link" : "superficial\/StandardSurface.html#slightLeft(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "turnRight", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.turnRight", "link" : "superficial\/StandardSurface.html#turnRight(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "turnLeft", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.turnLeft", "link" : "superficial\/StandardSurface.html#turnLeft(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "subComplex", "tail" : "(vs: Set[Vertex]): TwoComplex", "member" : "superficial.TwoComplex.subComplex", "link" : "superficial\/StandardSurface.html#subComplex(vs:Set[superficial.Vertex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addTwoComplexes", "tail" : "(complexes: Set[TwoComplex]): TwoComplex", "member" : "superficial.TwoComplex.addTwoComplexes", "link" : "superficial\/StandardSurface.html#addTwoComplexes(complexes:Set[superficial.TwoComplex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addFaces", "tail" : "(fcs: Set[Polygon]): TwoComplex", "member" : "superficial.TwoComplex.addFaces", "link" : "superficial\/StandardSurface.html#addFaces(fcs:Set[superficial.Polygon]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addEdges", "tail" : "(eds: Set[Edge]): TwoComplex", "member" : "superficial.TwoComplex.addEdges", "link" : "superficial\/StandardSurface.html#addEdges(eds:Set[superficial.Edge]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addVertices", "tail" : "(vs: Set[Vertex]): TwoComplex", "member" : "superficial.TwoComplex.addVertices", "link" : "superficial\/StandardSurface.html#addVertices(vs:Set[superficial.Vertex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "isSurfaceWithBoundary", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isSurfaceWithBoundary", "link" : "superficial\/StandardSurface.html#isSurfaceWithBoundary:Boolean", "kind" : "def"}, {"label" : "isClosedSurface", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isClosedSurface", "link" : "superficial\/StandardSurface.html#isClosedSurface:Boolean", "kind" : "def"}, {"label" : "isEdgeAtBoundary", "tail" : "(e: Edge): Boolean", "member" : "superficial.TwoComplex.isEdgeAtBoundary", "link" : "superficial\/StandardSurface.html#isEdgeAtBoundary(e:superficial.Edge):Boolean", "kind" : "def"}, {"label" : "edgeOccurences", "tail" : "(e: Edge): Int", "member" : "superficial.TwoComplex.edgeOccurences", "link" : "superficial\/StandardSurface.html#edgeOccurences(e:superficial.Edge):Int", "kind" : "def"}, {"label" : "transitiveRotations", "tail" : "(v: Vertex): Boolean", "member" : "superficial.TwoComplex.transitiveRotations", "link" : "superficial\/StandardSurface.html#transitiveRotations(v:superficial.Vertex):Boolean", "kind" : "def"}, {"label" : "degree", "tail" : "(v: Vertex): Int", "member" : "superficial.TwoComplex.degree", "link" : "superficial\/StandardSurface.html#degree(v:superficial.Vertex):Int", "kind" : "def"}, {"label" : "edgesEndingAt", "tail" : "(v: Vertex): Set[Edge]", "member" : "superficial.TwoComplex.edgesEndingAt", "link" : "superficial\/StandardSurface.html#edgesEndingAt(v:superficial.Vertex):scala.collection.immutable.Set[superficial.Edge]", "kind" : "def"}, {"label" : "allEdgesToTheRightOf", "tail" : "(e: Edge): Set[Edge]", "member" : "superficial.TwoComplex.allEdgesToTheRightOf", "link" : "superficial\/StandardSurface.html#allEdgesToTheRightOf(e:superficial.Edge):Set[superficial.Edge]", "kind" : "def"}, {"label" : "allEdgesToTheLeftOf", "tail" : "(e: Edge): Set[Edge]", "member" : "superficial.TwoComplex.allEdgesToTheLeftOf", "link" : "superficial\/StandardSurface.html#allEdgesToTheLeftOf(e:superficial.Edge):Set[superficial.Edge]", "kind" : "def"}, {"label" : "orbit", "tail" : "(e: Edge, steps: Int, opt: (Edge) => Option[Edge], accum: Set[Edge]): Set[Edge]", "member" : "superficial.TwoComplex.orbit", "link" : "superficial\/StandardSurface.html#orbit(e:superficial.Edge,steps:Int,opt:superficial.Edge=>Option[superficial.Edge],accum:Set[superficial.Edge]):Set[superficial.Edge]", "kind" : "def"}, {"label" : "rotateRightOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.rotateRightOpt", "link" : "superficial\/StandardSurface.html#rotateRightOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "rotateLeftOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.rotateLeftOpt", "link" : "superficial\/StandardSurface.html#rotateLeftOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "predOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.predOpt", "link" : "superficial\/StandardSurface.html#predOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "succOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.succOpt", "link" : "superficial\/StandardSurface.html#succOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "isConnectedComplex", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isConnectedComplex", "link" : "superficial\/StandardSurface.html#isConnectedComplex:Boolean", "kind" : "def"}, {"label" : "connectedComponent", "tail" : "(v: Vertex): Set[Vertex]", "member" : "superficial.TwoComplex.connectedComponent", "link" : "superficial\/StandardSurface.html#connectedComponent(v:superficial.Vertex):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "maxSetNbr", "tail" : "(s: Set[Vertex]): Set[Vertex]", "member" : "superficial.TwoComplex.maxSetNbr", "link" : "superficial\/StandardSurface.html#maxSetNbr(s:Set[superficial.Vertex]):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "setNbr", "tail" : "(s: Set[Vertex]): Set[Vertex]", "member" : "superficial.TwoComplex.setNbr", "link" : "superficial\/StandardSurface.html#setNbr(s:Set[superficial.Vertex]):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "vertexNbr", "tail" : "(v: Vertex): Set[Vertex]", "member" : "superficial.TwoComplex.vertexNbr", "link" : "superficial\/StandardSurface.html#vertexNbr(v:superficial.Vertex):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "collapseEdge", "tail" : "(e: Edge): (TwoComplex, ((EdgePath) => EdgePath, (EdgePath) => EdgePath))", "member" : "superficial.TwoComplex.collapseEdge", "link" : "superficial\/StandardSurface.html#collapseEdge(e:superficial.Edge):(superficial.TwoComplex,(superficial.EdgePath=>superficial.EdgePath,superficial.EdgePath=>superficial.EdgePath))", "kind" : "def"}, {"label" : "normalArcs", "tail" : "(): Set[NormalArc]", "member" : "superficial.TwoComplex.normalArcs", "link" : "superficial\/StandardSurface.html#normalArcs:Set[superficial.NormalArc]", "kind" : "def"}, {"label" : "edgeIndices", "tail" : "(edge: Edge): Set[(Polygon, Index, Boolean)]", "member" : "superficial.TwoComplex.edgeIndices", "link" : "superficial\/StandardSurface.html#edgeIndices(edge:superficial.Edge):Set[(superficial.Polygon,superficial.Polygon.Index,Boolean)]", "kind" : "def"}, {"label" : "facesWithEdge", "tail" : "(edge: Edge): Set[Polygon]", "member" : "superficial.TwoComplex.facesWithEdge", "link" : "superficial\/StandardSurface.html#facesWithEdge(edge:superficial.Edge):Set[superficial.Polygon]", "kind" : "def"}, {"label" : "vertexIndex", "tail" : "(v: Vertex): Option[Int]", "member" : "superficial.TwoComplex.vertexIndex", "link" : "superficial\/StandardSurface.html#vertexIndex(v:superficial.Vertex):Option[Int]", "kind" : "def"}, {"label" : "indexedVertices", "tail" : ": Set[(Vertex, Int)]", "member" : "superficial.TwoComplex.indexedVertices", "link" : "superficial\/StandardSurface.html#indexedVertices:scala.collection.immutable.Set[(superficial.Vertex,Int)]", "kind" : "lazy val"}, {"label" : "chi", "tail" : ": Int", "member" : "superficial.TwoComplex.chi", "link" : "superficial\/StandardSurface.html#chi:Int", "kind" : "lazy val"}, {"label" : "edgeIndex", "tail" : "(edge: Edge): Option[(Int, Boolean)]", "member" : "superficial.TwoComplex.edgeIndex", "link" : "superficial\/StandardSurface.html#edgeIndex(edge:superficial.Edge):Option[(Int,Boolean)]", "kind" : "def"}, {"label" : "halfEdges", "tail" : ": Set[Edge]", "member" : "superficial.TwoComplex.halfEdges", "link" : "superficial\/StandardSurface.html#halfEdges:Set[superficial.Edge]", "kind" : "lazy val"}, {"label" : "positiveEdges", "tail" : ": Vector[OrientedEdge]", "member" : "superficial.TwoComplex.positiveEdges", "link" : "superficial\/StandardSurface.html#positiveEdges:Vector[superficial.OrientedEdge]", "kind" : "lazy val"}, {"label" : "checkComplex", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.checkComplex", "link" : "superficial\/StandardSurface.html#checkComplex:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/StandardSurface.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/StandardSurface.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/StandardSurface.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/StandardSurface.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/StandardSurface.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/StandardSurface.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/StandardSurface.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/StandardSurface.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/StandardSurface.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/StandardSurface.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/StandardSurface.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/StandardSurface.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/StandardSurface.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/StandardSurface.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/StandardSurface.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/StandardSurface.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/StandardSurface.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/StandardSurface.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/StandardSurface.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "B", "tail" : "", "member" : "superficial.StandardSurface.B", "link" : "superficial\/StandardSurface$.html#BextendsOrientedEdgewithProductwithSerializable", "kind" : "case class"}, {"label" : "A", "tail" : "", "member" : "superficial.StandardSurface.A", "link" : "superficial\/StandardSurface$.html#AextendsOrientedEdgewithProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/StandardSurface$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/StandardSurface$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/StandardSurface$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/StandardSurface$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/StandardSurface$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/StandardSurface$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/StandardSurface$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/StandardSurface$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/StandardSurface$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/StandardSurface$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/StandardSurface$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/StandardSurface$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/StandardSurface$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/StandardSurface$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/StandardSurface$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/StandardSurface$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/StandardSurface$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/StandardSurface$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/StandardSurface$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "superficial\/StandardSurface.html", "kind" : "class"}, {"name" : "superficial.surfaceWithBoundary", "object" : "superficial\/surfaceWithBoundary$.html", "members_object" : [{"label" : "generateComplex", "tail" : "(genus: Int, boundaryComponents: Int): TwoComplex", "member" : "superficial.surfaceWithBoundary.generateComplex", "link" : "superficial\/surfaceWithBoundary$.html#generateComplex(genus:Int,boundaryComponents:Int):superficial.TwoComplex", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/surfaceWithBoundary$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/surfaceWithBoundary$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/surfaceWithBoundary$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/surfaceWithBoundary$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/surfaceWithBoundary$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/surfaceWithBoundary$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/surfaceWithBoundary$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/surfaceWithBoundary$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/surfaceWithBoundary$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/surfaceWithBoundary$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/surfaceWithBoundary$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/surfaceWithBoundary$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/surfaceWithBoundary$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/surfaceWithBoundary$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/surfaceWithBoundary$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/surfaceWithBoundary$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/surfaceWithBoundary$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/surfaceWithBoundary$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/surfaceWithBoundary$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "superficial\/surfaceWithBoundary.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/surfaceWithBoundary.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/surfaceWithBoundary.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/surfaceWithBoundary.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/surfaceWithBoundary.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/surfaceWithBoundary.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/surfaceWithBoundary.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/surfaceWithBoundary.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/surfaceWithBoundary.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/surfaceWithBoundary.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/surfaceWithBoundary.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/surfaceWithBoundary.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/surfaceWithBoundary.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/surfaceWithBoundary.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/surfaceWithBoundary.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/surfaceWithBoundary.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/surfaceWithBoundary.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/surfaceWithBoundary.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/surfaceWithBoundary.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/surfaceWithBoundary.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "generateComplex", "tail" : "(genus: Int, boundaryComponents: Int): TwoComplex", "member" : "superficial.surfaceWithBoundary.generateComplex", "link" : "superficial\/surfaceWithBoundary.html#generateComplex(genus:Int,boundaryComponents:Int):superficial.TwoComplex", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "superficial.SvgPlot", "shortDescription" : "", "object" : "superficial\/SvgPlot$.html", "members_object" : [{"label" : "apply", "tail" : "(complex: TwoComplex, radius: Double): Unit", "member" : "superficial.SvgPlot.apply", "link" : "superficial\/SvgPlot$.html#apply(complex:superficial.TwoComplex,radius:Double):Unit", "kind" : "def"}, {"label" : "viewPage", "tail" : "(content: Node): Unit", "member" : "superficial.SvgPlot.viewPage", "link" : "superficial\/SvgPlot$.html#viewPage(content:scala.xml.Node):Unit", "kind" : "def"}, {"label" : "desktop", "tail" : ": Desktop", "member" : "superficial.SvgPlot.desktop", "link" : "superficial\/SvgPlot$.html#desktop:java.awt.Desktop", "kind" : "val"}, {"label" : "writeFile", "tail" : "(text: String, fileName: String, append: Boolean): Unit", "member" : "superficial.SvgPlot.writeFile", "link" : "superficial\/SvgPlot$.html#writeFile(text:String,fileName:String,append:Boolean):Unit", "kind" : "def"}, {"label" : "plotComplex", "tail" : "(complex: TwoComplex, radius: Double): Elem", "member" : "superficial.SvgPlot.plotComplex", "link" : "superficial\/SvgPlot$.html#plotComplex(complex:superficial.TwoComplex,radius:Double):scala.xml.Elem", "kind" : "def"}, {"label" : "plotPantsSurface", "tail" : "(complex: PantsSurface): Elem", "member" : "superficial.SvgPlot.plotPantsSurface", "link" : "superficial\/SvgPlot$.html#plotPantsSurface(complex:superficial.PantsSurface):scala.xml.Elem", "kind" : "def"}, {"label" : "eg", "tail" : ": Elem", "member" : "superficial.SvgPlot.eg", "link" : "superficial\/SvgPlot$.html#eg:scala.xml.Elem", "kind" : "lazy val"}, {"label" : "svgPlot", "tail" : "(elems: Seq[Elem], width: Double, height: Double): Elem", "member" : "superficial.SvgPlot.svgPlot", "link" : "superficial\/SvgPlot$.html#svgPlot(elems:Seq[scala.xml.Elem],width:Double,height:Double):scala.xml.Elem", "kind" : "def"}, {"label" : "lineArrow", "tail" : "(xinit: Double, yinit: Double, xt: Double, yterm: Double, colour: String, label: String, strokeArray: Option[String]): Vector[Elem]", "member" : "superficial.SvgPlot.lineArrow", "link" : "superficial\/SvgPlot$.html#lineArrow(xinit:Double,yinit:Double,xt:Double,yterm:Double,colour:String,label:String,strokeArray:Option[String]):Vector[scala.xml.Elem]", "kind" : "def"}, {"label" : "rad", "tail" : ": Int", "member" : "superficial.SvgPlot.rad", "link" : "superficial\/SvgPlot$.html#rad:Int", "kind" : "val"}, {"label" : "unit", "tail" : "(x: Double, y: Double): (Double, Double)", "member" : "superficial.SvgPlot.unit", "link" : "superficial\/SvgPlot$.html#unit(x:Double,y:Double):(Double,Double)", "kind" : "def"}, {"label" : "faceRowSides", "tail" : "(complex: TwoComplex, r: Double): Vector[Elem]", "member" : "superficial.SvgPlot.faceRowSides", "link" : "superficial\/SvgPlot$.html#faceRowSides(complex:superficial.TwoComplex,r:Double):scala.collection.immutable.Vector[scala.xml.Elem]", "kind" : "def"}, {"label" : "allHexagonSides", "tail" : "(complex: PantsSurface): Vector[Elem]", "member" : "superficial.SvgPlot.allHexagonSides", "link" : "superficial\/SvgPlot$.html#allHexagonSides(complex:superficial.PantsSurface):Vector[scala.xml.Elem]", "kind" : "def"}, {"label" : "faceSides", "tail" : "(face: Polygon, complex: TwoComplex, offset: (Double, Double), radius: Double): Vector[Elem]", "member" : "superficial.SvgPlot.faceSides", "link" : "superficial\/SvgPlot$.html#faceSides(face:superficial.Polygon,complex:superficial.TwoComplex,offset:(Double,Double),radius:Double):Vector[scala.xml.Elem]", "kind" : "def"}, {"label" : "hexagonSides", "tail" : "(offset: (Double, Double), radius: Double): Seq[Elem]", "member" : "superficial.SvgPlot.hexagonSides", "link" : "superficial\/SvgPlot$.html#hexagonSides(offset:(Double,Double),radius:Double):Seq[scala.xml.Elem]", "kind" : "def"}, {"label" : "shiftColour", "tail" : "(n: Int): String", "member" : "superficial.SvgPlot.shiftColour", "link" : "superficial\/SvgPlot$.html#shiftColour(n:Int):String", "kind" : "def"}, {"label" : "getColour", "tail" : "(n: Int): String", "member" : "superficial.SvgPlot.getColour", "link" : "superficial\/SvgPlot$.html#getColour(n:Int):String", "kind" : "def"}, {"label" : "drawCircle", "tail" : "(cx: Double, cy: Double, colour: String, r: Double): Elem", "member" : "superficial.SvgPlot.drawCircle", "link" : "superficial\/SvgPlot$.html#drawCircle(cx:Double,cy:Double,colour:String,r:Double):scala.xml.Elem", "kind" : "def"}, {"label" : "drawLine", "tail" : "(x1: Double, y1: Double, x2: Double, y2: Double, colour: String, strokeArray: Option[String]): Elem", "member" : "superficial.SvgPlot.drawLine", "link" : "superficial\/SvgPlot$.html#drawLine(x1:Double,y1:Double,x2:Double,y2:Double,colour:String,strokeArray:Option[String]):scala.xml.Elem", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/SvgPlot$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/SvgPlot$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/SvgPlot$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/SvgPlot$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/SvgPlot$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/SvgPlot$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/SvgPlot$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/SvgPlot$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/SvgPlot$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/SvgPlot$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/SvgPlot$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/SvgPlot$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/SvgPlot$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/SvgPlot$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/SvgPlot$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/SvgPlot$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/SvgPlot$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/SvgPlot$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/SvgPlot$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "superficial.Triangles", "shortDescription" : "", "object" : "superficial\/Triangles$.html", "members_object" : [{"label" : "HollowTriangle", "tail" : "", "member" : "superficial.Triangles.HollowTriangle", "link" : "superficial\/Triangles$.html#HollowTriangle", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/Triangles$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/Triangles$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/Triangles$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/Triangles$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/Triangles$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/Triangles$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/Triangles$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Triangles$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Triangles$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Triangles$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/Triangles$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/Triangles$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/Triangles$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/Triangles$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/Triangles$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/Triangles$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/Triangles$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/Triangles$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/Triangles$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "superficial.TwoComplex", "object" : "superficial\/TwoComplex$.html", "members_object" : [{"label" : "symbolic", "tail" : "(vertexNames: String*)(edgeMap: (String, (String, String))*)(faceMap: (String, Seq[(String, Boolean)])*): TwoComplex", "member" : "superficial.TwoComplex.symbolic", "link" : "superficial\/TwoComplex$.html#symbolic(vertexNames:String*)(edgeMap:(String,(String,String))*)(faceMap:(String,Seq[(String,Boolean)])*):superficial.TwoComplex", "kind" : "def"}, {"label" : "mergeFaces", "tail" : "(e: Edge, first: Polygon, second: Polygon): Polygon", "member" : "superficial.TwoComplex.mergeFaces", "link" : "superficial\/TwoComplex$.html#mergeFaces(e:superficial.Edge,first:superficial.Polygon,second:superficial.Polygon):superficial.Polygon", "kind" : "def"}, {"label" : "nonLoop", "tail" : "(complex: TwoComplex): Option[Edge]", "member" : "superficial.TwoComplex.nonLoop", "link" : "superficial\/TwoComplex$.html#nonLoop(complex:superficial.TwoComplex):Option[superficial.Edge]", "kind" : "def"}, {"label" : "allCollapsed", "tail" : "(complex: TwoComplex): (TwoComplex, ((EdgePath) => EdgePath, (EdgePath) => EdgePath))", "member" : "superficial.TwoComplex.allCollapsed", "link" : "superficial\/TwoComplex$.html#allCollapsed(complex:superficial.TwoComplex):(superficial.TwoComplex,(superficial.EdgePath=>superficial.EdgePath,superficial.EdgePath=>superficial.EdgePath))", "kind" : "def"}, {"label" : "allCollapsed1", "tail" : "(complex: TwoComplex): TwoComplex", "member" : "superficial.TwoComplex.allCollapsed1", "link" : "superficial\/TwoComplex$.html#allCollapsed1(complex:superficial.TwoComplex):superficial.TwoComplex", "kind" : "def"}, {"label" : "halfEdges", "tail" : "(edges: List[Edge], accum: Set[Edge]): Set[Edge]", "member" : "superficial.TwoComplex.halfEdges", "link" : "superficial\/TwoComplex$.html#halfEdges(edges:List[superficial.Edge],accum:Set[superficial.Edge]):Set[superficial.Edge]", "kind" : "def"}, {"label" : "Concrete", "tail" : "", "member" : "superficial.TwoComplex.Concrete", "link" : "superficial\/TwoComplex$.html#ConcreteextendsTwoComplexwithProductwithSerializable", "kind" : "case class"}, {"label" : "pure", "tail" : "(fs: Polygon*): TwoComplex", "member" : "superficial.TwoComplex.pure", "link" : "superficial\/TwoComplex$.html#pure(fs:superficial.Polygon*):superficial.TwoComplex", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/TwoComplex$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/TwoComplex$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/TwoComplex$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/TwoComplex$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/TwoComplex$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/TwoComplex$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/TwoComplex$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/TwoComplex$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/TwoComplex$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/TwoComplex$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/TwoComplex$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/TwoComplex$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/TwoComplex$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/TwoComplex$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/TwoComplex$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/TwoComplex$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/TwoComplex$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/TwoComplex$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/TwoComplex$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "superficial\/TwoComplex.html", "kind" : "object", "members_trait" : [{"label" : "turnEdge", "tail" : "(e: Edge, t: Int): Edge", "member" : "superficial.TwoComplex.turnEdge", "link" : "superficial\/TwoComplex.html#turnEdge(e:superficial.Edge,t:Int):superficial.Edge", "kind" : "def"}, {"label" : "angleBetween", "tail" : "(e1: Edge, e2: Edge): Int", "member" : "superficial.TwoComplex.angleBetween", "link" : "superficial\/TwoComplex.html#angleBetween(e1:superficial.Edge,e2:superficial.Edge):Int", "kind" : "def"}, {"label" : "turnIndex", "tail" : "(e1: Edge, e2: Edge): Int", "member" : "superficial.TwoComplex.turnIndex", "link" : "superficial\/TwoComplex.html#turnIndex(e1:superficial.Edge,e2:superficial.Edge):Int", "kind" : "def"}, {"label" : "vectorEdgesToTheRightOf", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorEdgesToTheRightOf", "link" : "superficial\/TwoComplex.html#vectorEdgesToTheRightOf(e:superficial.Edge):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorEdgesToTheLeftOf", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorEdgesToTheLeftOf", "link" : "superficial\/TwoComplex.html#vectorEdgesToTheLeftOf(e:superficial.Edge):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorRightTurns", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorRightTurns", "link" : "superficial\/TwoComplex.html#vectorRightTurns(e:superficial.Edge):scala.collection.immutable.Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorLeftTurns", "tail" : "(e: Edge): Vector[Edge]", "member" : "superficial.TwoComplex.vectorLeftTurns", "link" : "superficial\/TwoComplex.html#vectorLeftTurns(e:superficial.Edge):scala.collection.immutable.Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorOrbitFin", "tail" : "(e: Edge, opt: (Edge) => Option[Edge], accum: Vector[Edge], n: Int): Vector[Edge]", "member" : "superficial.TwoComplex.vectorOrbitFin", "link" : "superficial\/TwoComplex.html#vectorOrbitFin(e:superficial.Edge,opt:superficial.Edge=>Option[superficial.Edge],accum:Vector[superficial.Edge],n:Int):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "vectorOrbit", "tail" : "(e: Edge, opt: (Edge) => Option[Edge], accum: Vector[Edge]): Vector[Edge]", "member" : "superficial.TwoComplex.vectorOrbit", "link" : "superficial\/TwoComplex.html#vectorOrbit(e:superficial.Edge,opt:superficial.Edge=>Option[superficial.Edge],accum:Vector[superficial.Edge]):Vector[superficial.Edge]", "kind" : "def"}, {"label" : "SwR", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SwR", "link" : "superficial\/TwoComplex.html#SwR(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SwL", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SwL", "link" : "superficial\/TwoComplex.html#SwL(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SR", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SR", "link" : "superficial\/TwoComplex.html#SR(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "SL", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.SL", "link" : "superficial\/TwoComplex.html#SL(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "R", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.R", "link" : "superficial\/TwoComplex.html#R(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "L", "tail" : "(e: Edge): Edge", "member" : "superficial.TwoComplex.L", "link" : "superficial\/TwoComplex.html#L(e:superficial.Edge):superficial.Edge", "kind" : "def"}, {"label" : "slightRight", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.slightRight", "link" : "superficial\/TwoComplex.html#slightRight(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "slightLeft", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.slightLeft", "link" : "superficial\/TwoComplex.html#slightLeft(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "turnRight", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.turnRight", "link" : "superficial\/TwoComplex.html#turnRight(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "turnLeft", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.turnLeft", "link" : "superficial\/TwoComplex.html#turnLeft(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "subComplex", "tail" : "(vs: Set[Vertex]): TwoComplex", "member" : "superficial.TwoComplex.subComplex", "link" : "superficial\/TwoComplex.html#subComplex(vs:Set[superficial.Vertex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addTwoComplexes", "tail" : "(complexes: Set[TwoComplex]): TwoComplex", "member" : "superficial.TwoComplex.addTwoComplexes", "link" : "superficial\/TwoComplex.html#addTwoComplexes(complexes:Set[superficial.TwoComplex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addFaces", "tail" : "(fcs: Set[Polygon]): TwoComplex", "member" : "superficial.TwoComplex.addFaces", "link" : "superficial\/TwoComplex.html#addFaces(fcs:Set[superficial.Polygon]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addEdges", "tail" : "(eds: Set[Edge]): TwoComplex", "member" : "superficial.TwoComplex.addEdges", "link" : "superficial\/TwoComplex.html#addEdges(eds:Set[superficial.Edge]):superficial.TwoComplex", "kind" : "def"}, {"label" : "addVertices", "tail" : "(vs: Set[Vertex]): TwoComplex", "member" : "superficial.TwoComplex.addVertices", "link" : "superficial\/TwoComplex.html#addVertices(vs:Set[superficial.Vertex]):superficial.TwoComplex", "kind" : "def"}, {"label" : "isSurfaceWithBoundary", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isSurfaceWithBoundary", "link" : "superficial\/TwoComplex.html#isSurfaceWithBoundary:Boolean", "kind" : "def"}, {"label" : "isClosedSurface", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isClosedSurface", "link" : "superficial\/TwoComplex.html#isClosedSurface:Boolean", "kind" : "def"}, {"label" : "isEdgeAtBoundary", "tail" : "(e: Edge): Boolean", "member" : "superficial.TwoComplex.isEdgeAtBoundary", "link" : "superficial\/TwoComplex.html#isEdgeAtBoundary(e:superficial.Edge):Boolean", "kind" : "def"}, {"label" : "edgeOccurences", "tail" : "(e: Edge): Int", "member" : "superficial.TwoComplex.edgeOccurences", "link" : "superficial\/TwoComplex.html#edgeOccurences(e:superficial.Edge):Int", "kind" : "def"}, {"label" : "transitiveRotations", "tail" : "(v: Vertex): Boolean", "member" : "superficial.TwoComplex.transitiveRotations", "link" : "superficial\/TwoComplex.html#transitiveRotations(v:superficial.Vertex):Boolean", "kind" : "def"}, {"label" : "degree", "tail" : "(v: Vertex): Int", "member" : "superficial.TwoComplex.degree", "link" : "superficial\/TwoComplex.html#degree(v:superficial.Vertex):Int", "kind" : "def"}, {"label" : "edgesEndingAt", "tail" : "(v: Vertex): Set[Edge]", "member" : "superficial.TwoComplex.edgesEndingAt", "link" : "superficial\/TwoComplex.html#edgesEndingAt(v:superficial.Vertex):scala.collection.immutable.Set[superficial.Edge]", "kind" : "def"}, {"label" : "allEdgesToTheRightOf", "tail" : "(e: Edge): Set[Edge]", "member" : "superficial.TwoComplex.allEdgesToTheRightOf", "link" : "superficial\/TwoComplex.html#allEdgesToTheRightOf(e:superficial.Edge):Set[superficial.Edge]", "kind" : "def"}, {"label" : "allEdgesToTheLeftOf", "tail" : "(e: Edge): Set[Edge]", "member" : "superficial.TwoComplex.allEdgesToTheLeftOf", "link" : "superficial\/TwoComplex.html#allEdgesToTheLeftOf(e:superficial.Edge):Set[superficial.Edge]", "kind" : "def"}, {"label" : "orbit", "tail" : "(e: Edge, steps: Int, opt: (Edge) => Option[Edge], accum: Set[Edge]): Set[Edge]", "member" : "superficial.TwoComplex.orbit", "link" : "superficial\/TwoComplex.html#orbit(e:superficial.Edge,steps:Int,opt:superficial.Edge=>Option[superficial.Edge],accum:Set[superficial.Edge]):Set[superficial.Edge]", "kind" : "def"}, {"label" : "rotateRightOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.rotateRightOpt", "link" : "superficial\/TwoComplex.html#rotateRightOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "rotateLeftOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.rotateLeftOpt", "link" : "superficial\/TwoComplex.html#rotateLeftOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "predOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.predOpt", "link" : "superficial\/TwoComplex.html#predOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "succOpt", "tail" : "(e: Edge): Option[Edge]", "member" : "superficial.TwoComplex.succOpt", "link" : "superficial\/TwoComplex.html#succOpt(e:superficial.Edge):Option[superficial.Edge]", "kind" : "def"}, {"label" : "isConnectedComplex", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.isConnectedComplex", "link" : "superficial\/TwoComplex.html#isConnectedComplex:Boolean", "kind" : "def"}, {"label" : "connectedComponent", "tail" : "(v: Vertex): Set[Vertex]", "member" : "superficial.TwoComplex.connectedComponent", "link" : "superficial\/TwoComplex.html#connectedComponent(v:superficial.Vertex):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "maxSetNbr", "tail" : "(s: Set[Vertex]): Set[Vertex]", "member" : "superficial.TwoComplex.maxSetNbr", "link" : "superficial\/TwoComplex.html#maxSetNbr(s:Set[superficial.Vertex]):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "setNbr", "tail" : "(s: Set[Vertex]): Set[Vertex]", "member" : "superficial.TwoComplex.setNbr", "link" : "superficial\/TwoComplex.html#setNbr(s:Set[superficial.Vertex]):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "vertexNbr", "tail" : "(v: Vertex): Set[Vertex]", "member" : "superficial.TwoComplex.vertexNbr", "link" : "superficial\/TwoComplex.html#vertexNbr(v:superficial.Vertex):Set[superficial.Vertex]", "kind" : "def"}, {"label" : "collapseEdge", "tail" : "(e: Edge): (TwoComplex, ((EdgePath) => EdgePath, (EdgePath) => EdgePath))", "member" : "superficial.TwoComplex.collapseEdge", "link" : "superficial\/TwoComplex.html#collapseEdge(e:superficial.Edge):(superficial.TwoComplex,(superficial.EdgePath=>superficial.EdgePath,superficial.EdgePath=>superficial.EdgePath))", "kind" : "def"}, {"label" : "normalArcs", "tail" : "(): Set[NormalArc]", "member" : "superficial.TwoComplex.normalArcs", "link" : "superficial\/TwoComplex.html#normalArcs:Set[superficial.NormalArc]", "kind" : "def"}, {"label" : "edgeIndices", "tail" : "(edge: Edge): Set[(Polygon, Index, Boolean)]", "member" : "superficial.TwoComplex.edgeIndices", "link" : "superficial\/TwoComplex.html#edgeIndices(edge:superficial.Edge):Set[(superficial.Polygon,superficial.Polygon.Index,Boolean)]", "kind" : "def"}, {"label" : "facesWithEdge", "tail" : "(edge: Edge): Set[Polygon]", "member" : "superficial.TwoComplex.facesWithEdge", "link" : "superficial\/TwoComplex.html#facesWithEdge(edge:superficial.Edge):Set[superficial.Polygon]", "kind" : "def"}, {"label" : "vertexIndex", "tail" : "(v: Vertex): Option[Int]", "member" : "superficial.TwoComplex.vertexIndex", "link" : "superficial\/TwoComplex.html#vertexIndex(v:superficial.Vertex):Option[Int]", "kind" : "def"}, {"label" : "indexedVertices", "tail" : ": Set[(Vertex, Int)]", "member" : "superficial.TwoComplex.indexedVertices", "link" : "superficial\/TwoComplex.html#indexedVertices:scala.collection.immutable.Set[(superficial.Vertex,Int)]", "kind" : "lazy val"}, {"label" : "chi", "tail" : ": Int", "member" : "superficial.TwoComplex.chi", "link" : "superficial\/TwoComplex.html#chi:Int", "kind" : "lazy val"}, {"label" : "edgeIndex", "tail" : "(edge: Edge): Option[(Int, Boolean)]", "member" : "superficial.TwoComplex.edgeIndex", "link" : "superficial\/TwoComplex.html#edgeIndex(edge:superficial.Edge):Option[(Int,Boolean)]", "kind" : "def"}, {"label" : "halfEdges", "tail" : ": Set[Edge]", "member" : "superficial.TwoComplex.halfEdges", "link" : "superficial\/TwoComplex.html#halfEdges:Set[superficial.Edge]", "kind" : "lazy val"}, {"label" : "positiveEdges", "tail" : ": Vector[OrientedEdge]", "member" : "superficial.TwoComplex.positiveEdges", "link" : "superficial\/TwoComplex.html#positiveEdges:Vector[superficial.OrientedEdge]", "kind" : "lazy val"}, {"label" : "checkComplex", "tail" : "(): Boolean", "member" : "superficial.TwoComplex.checkComplex", "link" : "superficial\/TwoComplex.html#checkComplex:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/TwoComplex.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/TwoComplex.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/TwoComplex.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/TwoComplex.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/TwoComplex.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/TwoComplex.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/TwoComplex.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/TwoComplex.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/TwoComplex.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/TwoComplex.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/TwoComplex.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/TwoComplex.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/TwoComplex.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/TwoComplex.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/TwoComplex.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/TwoComplex.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/TwoComplex.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/TwoComplex.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/TwoComplex.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "vertices", "tail" : ": Set[Vertex]", "member" : "superficial.TwoComplex.vertices", "link" : "superficial\/TwoComplex.html#vertices:Set[superficial.Vertex]", "kind" : "abstract val"}, {"label" : "edges", "tail" : ": Set[Edge]", "member" : "superficial.TwoComplex.edges", "link" : "superficial\/TwoComplex.html#edges:Set[superficial.Edge]", "kind" : "abstract val"}, {"label" : "faces", "tail" : ": Set[Polygon]", "member" : "superficial.TwoComplex.faces", "link" : "superficial\/TwoComplex.html#faces:Set[superficial.Polygon]", "kind" : "abstract val"}], "shortDescription" : ""}, {"name" : "superficial.Vertex", "shortDescription" : "A vertex in a two-complex", "object" : "superficial\/Vertex$.html", "members_class" : [{"member" : "superficial.Vertex#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/Vertex.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/Vertex.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/Vertex.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/Vertex.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/Vertex.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/Vertex.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/Vertex.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Vertex.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Vertex.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Vertex.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/Vertex.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/Vertex.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/Vertex.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/Vertex.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/Vertex.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/Vertex.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/Vertex.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/Vertex.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/Vertex.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "Symbolic", "tail" : "", "member" : "superficial.Vertex.Symbolic", "link" : "superficial\/Vertex$.html#SymbolicextendsVertexwithProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/Vertex$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/Vertex$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/Vertex$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/Vertex$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/Vertex$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/Vertex$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/Vertex$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Vertex$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Vertex$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Vertex$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/Vertex$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/Vertex$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/Vertex$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/Vertex$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/Vertex$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/Vertex$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/Vertex$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/Vertex$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/Vertex$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "superficial\/Vertex.html", "kind" : "class"}, {"name" : "superficial.Z3", "shortDescription" : "One of 0, 1 and 2, indexing the boundaries of a pair of pants.", "object" : "superficial\/Z3$.html", "members_object" : [{"label" : "flipEnum", "tail" : ": Vector[Z3]", "member" : "superficial.Z3.flipEnum", "link" : "superficial\/Z3$.html#flipEnum:scala.collection.immutable.Vector[superficial.Z3]", "kind" : "val"}, {"label" : "enum", "tail" : ": Vector[Z3]", "member" : "superficial.Z3.enum", "link" : "superficial\/Z3$.html#enum:Vector[superficial.Z3]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "superficial\/Z3$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "superficial\/Z3$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "superficial\/Z3$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "superficial\/Z3$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "superficial\/Z3$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "superficial\/Z3$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "superficial\/Z3$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Z3$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Z3$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "superficial\/Z3$.html#wait():Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "superficial\/Z3$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "superficial\/Z3$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "superficial\/Z3$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "superficial\/Z3$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "superficial\/Z3$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "superficial\/Z3$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "superficial\/Z3$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/Z3$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/Z3$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "others", "tail" : "(): Set[Z3]", "member" : "superficial.Z3.others", "link" : "superficial\/Z3.html#others:Set[superficial.Z3]", "kind" : "def"}, {"label" : "<", "tail" : "(that: Z3): Boolean", "member" : "superficial.Z3.<", "link" : "superficial\/Z3.html#<(that:superficial.Z3):Boolean", "kind" : "def"}, {"label" : "prev", "tail" : "(): Z3", "member" : "superficial.Z3.prev", "link" : "superficial\/Z3.html#prev:superficial.Z3", "kind" : "def"}, {"label" : "next", "tail" : "(): Z3", "member" : "superficial.Z3.next", "link" : "superficial\/Z3.html#next:superficial.Z3", "kind" : "def"}, {"member" : "superficial.Z3#<init>", "error" : "unsupported entity"}, {"label" : "n", "tail" : ": Int", "member" : "superficial.Z3.n", "link" : "superficial\/Z3.html#n:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "superficial\/Z3.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "superficial\/Z3.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "superficial\/Z3.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "superficial\/Z3.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "superficial\/Z3.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "superficial\/Z3.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "superficial\/Z3.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "superficial\/Z3.html", "kind" : "case class"}]};